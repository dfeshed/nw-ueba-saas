swagger: '2.0'
info:
  description: 'Fortscale Presidio is a plug-in that can be natively embedded by security
    infrastructure solutions to deliver the visibility and risk-based analysis
    they need to make better, smarter security decisions. Leveraging the engine
    from Fortscale’s award-winning user and entity behavioral analytics (UEBA)
    platform, Presidio enables SIEM, EDR/EPP, DLP, CASB, IAM and other security
    infrastructure vendors to quickly and simply incorporate real-time,
    risk-based intelligence on the activity of users and entities within the
    customer’s environment to enhance their own analysis and security
    enforcement.'
  version: 1.0.0
  title: Presidio Rest API
  # put the contact info for your development or API team
  contact:
    email: support@fortscale.com

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

# tags are used for organizing operations
tags:
  - name: 'alerts'
  - name: 'users'

paths:

  /alerts:
    get:
      tags:
      - alerts
      summary: Use this end point to get alerts by various filters
      operationId: searchAlerts
      description: By passing in the appropriate options, you can search for alerts
      produces:
      - application/json
      parameters:
      - $ref: '#/parameters/StartTimeFrom'
      - $ref: '#/parameters/StartTimeTo'
      - $ref: '#/parameters/FeedBack'
      - $ref: '#/parameters/MinAlertScore'
      - $ref: '#/parameters/MaxAlertScore'
      - $ref: '#/parameters/UserTagsFilter'
      - $ref: '#/parameters/UserIdFilter'
      - $ref: '#/parameters/AlertNameFilter'
      - $ref: '#/parameters/IndicatorTypeFilter'
      - $ref: '#/parameters/Limit'
      - $ref: '#/parameters/Offset'
      - $ref: '#/parameters/Sort'
      
      responses:
        200:
          $ref: '#/responses/AlertsWrapper'
            
        400:
          description: bad input parameter
          
  /alert/{alertId}:
    get:
      tags:
      - alerts
      summary: Use this endpoint to get details about single alert
      description: Alerts endpoint
      parameters: 
        - name: alertId
          type: string
          format: uuid
          in: path
          required: true
          description: The UUID of the alert to return
            
          
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Alert'          
      
    patch:
      tags:
      - alerts
      summary: Use this method to update the alert feedback
      parameters: 
      - $ref: '#/parameters/PatchBody'
      
      responses:
        200:
           description: OK
           schema:
              $ref: '#/definitions/Alert'
          
  /alerts/{alertId}/indicators:
    get:
      tags:
      - alerts
      summary: An endpoint to get all the indicators of the specific alert
      description: Return list of indicators
      parameters:
      - name: alertId
        type: integer
        in: path
        required: true
        description: The ID of the alert to return 
    
      responses:
        200:
          $ref: '#/responses/EventsResponse'
          
          
  /alerts/{alertId}/indicators/{indicatorId}:
    get:
      tags:
      - alerts
      summary: Use this endpoint to get details about a single indication
      description: "Example: fields=datasource,anomalyType"
      parameters:
      - name: indicatorId
        type: integer
        in: path
        required: true
        description: The ID of the indicator to return
      - name: alertId
        type: integer
        in: path
        required: true
        description: The ID of the alert to return  
    
      responses:
        200:
          $ref: '#/responses/SupportingInformationResponse'   
          
    
  /alerts/{alertId}/indicators/{indicatorId}/events:
    get:
      tags:
      - alerts
      summary: An endpoint to get all the events of the specific indicator
      description: Return list of events
      parameters:
      - name: indicatorId
        type: integer
        in: path
        required: true
        description: The ID of the indicator to return
      - name: alertId
        type: integer
        in: path
        required: true
        description: The ID of the alert to return  
    
      responses:
        200:
          $ref: '#/responses/EventsResponse' 
            
          
responses:
  UsersWrapper:
    description: List of users and more general data
    schema:
      $ref: '#/definitions/UsersWrapper'
      
  AlertsWrapper:
    description: List of users and more general data
    schema:
      $ref: '#/definitions/AlertsWrapper'
      
  GroupByResponse:
    description: List avaliable values for fields and counts
    schema:
      type: array
      items:
        type: object
        required:
         - fields
         - count
        properties:
          fields:
            type: array
            items:
              type: string
          values:
            type: array
            items:
              type: string
          count:
            type: integer
  
  EventsResponse:
    description: List of events 
    schema:
      type: array
      items:
        type: object
        required:
         - eventId
         - type
         - startTime
         - endTime
         - username
        properties:
          eventId:
            type: string
          type:
            description: "Data Source Name"
            type: string
          startTime:
            type: integer
          endTime: 
            type: integer
          username: 
            type: string
          additionalFieldsMap:
            type: object
  
  SupportingInformationResponse:
    description: Supporting infromation for charts
    schema:
      type: array
      items:
        type: string
        required:
         - number
         - anomaly
        properties:
          keys:
            type: array
            items:
            type: string
            description: The keys are can be one or more string, numbers or date, represnting the axis or axes.
          value:
            description: "The value on the graph"
            type: number
          anomaly:
            type: boolean
            
parameters:
        AlertNameFilter:
          in: query
          name: name
          description: Name of the alert (exact match)
          required: false
          type: string
          
        IndicatorTypeFilter:
          in: query
          name: indicators.type
          description: Alert includes indicators with this name (exact match)
          required: false
          type: string  
          
        StartTimeFrom:
          in: query
          name: startTimeFrom
          description: Alerts with start time greate or equals to (date as long)
          required: false
          type: number
        
        StartTimeTo:
          in: query
          name: startTimeTo
          description: Alerts with start time smaller or equals to (date as long)
          required: false
          type: number
          
        Limit:  
          in: query
          name: limit
          description: The maximum number of records to return
          type: integer
          minimum: 0
          default: 10
          
        Offset:
          in: query
          name: offset
          description: The number of records to skip
          type: integer
          format: int32
          minimum: 0
        
        FeedBack:
          in: query
          name: feedback
          description: Alert Feedback
          enum: [None,Approved,Rejected]
          type: string
        
        MinUserScore:
          in: query
          name:  minScore
          description: Filtering users which have a score less than the minimum specified in minScore
          type: integer
          minimum: 0
          
        MaxUserScore:
          in: query
          name:  maxScore
          description: Filtering users which have a score higher than the maximum specified in minScore
          type: integer
          
        MinAlertScore:
          in: query
          name:  minScore
          description: Filtering alerts which have a score less than the minimum specified in minScore
          type: integer
          minimum: 0
          
        MaxAlertScore:
          in: query
          name:  maxScore
          description: Filtering alerts which have a score higher than the maximum specified in minScore
          type: integer
        
        CommaSeperatedIds:  
          in: query
          name:  ids
          type: array
          minItems: 1
          description: allow to filter by one or more ids (UUID)
          items:
            type: string
            format: uuid
          
        CommaSeperatedFields:
          in: query
          name: fields
          description: Comma Seperated List of Fields (I.E. 'alertName','timeframe')
          required: true
          type: array
          items:
            type: string
        
        Sort:    
          in: query
          name: sort
          description: The field to sort by. Sort directions can optionally be appended to the sort key, separated by the ‘:’ character.
          required: false
          type: string
          
        UserTagsFilter:
          in: query
          name: tags
          type: array
          description: Comma Seperated List of tags. User should have at least one of the tags. Using '*' says "all tags" 
          items:
            type: string
            
        UserIdFilter:
          in: query
          name: ids
          type: array
          description: Comma Seperated List of user ids (UUID)
          items:
            type: string    
             
        UserName:    
          in: query
          name: name
          description: Exact match to user name, use wildcard to search for prefix
          required: false
          type: string
          
        PatchBody:    
          in: body
          description: Exact match to user name
          required: true
          name: patch
          schema:
            type: array
            items:
              type: object
              required:
               - op
               - path
               - value
               - endTime
               - username
              properties:
                op:
                  type: string
                  enum: ['replace','add','remove']
                  description: "Operation - replace value, add to list of values, remove from list of values"
                path:
                  type: string
                  description: "The path to the field, I.E. /feedback, /tags, /watched"
                value:
                  type: object
                  description:  "The new value"
              
definitions:
#  User:
#    type: object
#    required:
#    -  id
#    properties:
#      id:
#        type: string
#        format: uuid
#        example: d290f1ee-6c54-4b01-90e6-d701748f0851
#      username:
#        type: string
#        example: Moshe
#      tags:
#        type: array
#        description: Array of strings
#        example: [admin]
#      score:
#        type: integer
#        minimum: 0
#      alerts:
#        type: array
#        items:
#          description: Can have alert id or all the alert object if extended
#          $ref: '#/definitions/Alert'
          
  Alert:
      type: object
      required: 
      -  id
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          example: Moshe
        startDate:
          type: integer
        endDate:
          type: integer
        username:
          type: string
        indicators:
          type: array
          items:
            $ref: '#/definitions/Indicator'
        score: 
          type: integer
          minimum: 0
          maximum: 100
        feedback:
          enum: [None,Approved,Rejected]
          type: string
        userScoreContribution:
          type: number
        userScoreContributionFlag:
          type: boolean
        timeframe:
          type: string
          enum: [hourly,daily]
        feedbackHistory:
         type: array
         properties:
          time:
            type: number
          feedback:
            enum: [None,Approved,Rejected]
            type: string
            
  Indicator:
      type: object
      required: 
      -  id
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          example: Moshe
        startDate:
          type: integer
        endDate:
          type: integer
        username:
          type: string
        anomalyType: 
          type: string
        anomalyValue:
          type: object
          description: Can be any type- number, string, ip address
        dataSource:
          type: string
        evidenceType:
          description: "I'm not sure if we need this"
          type: string
          enum: [AnomalyAggregatedEvent,SingleEvent]
        score:
          type: integer
          minimum: 0
          maximum: 100
        timeframe:
          type: string
          enum: [Hourly,Daily]
        
        
#  UsersWrapper:
#    type: object
#    properties:
#      users:
#        type: array
#        items:
#          $ref: '#/definitions/User'
#      total:
#        type: integer
#        minimum: 0
#      page:
#        type: integer
#        minimum: 0
  
  AlertsWrapper:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Alert'
      total: 
        type: integer
        minimum: 0
      page: 
        type: integer
        minimum: 0  
    

  
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /Fortscale/Presidio-Output/1.0.0
schemes:
 - https