<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans" 
	xmlns:hdp="http://www.springframework.org/schema/hadoop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/hadoop http://www.springframework.org/schema/hadoop/spring-hadoop.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
						
	<bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
 		<property name="location" value="file:resources/fortscale-collection-overriding.properties"/>
 		<property name="order" value="#{T(org.springframework.core.Ordered).HIGHEST_PRECEDENCE}"/>
 		<property name="ignoreUnresolvablePlaceholders" value="true"/>
 		<property name="localOverride" value="true"/>
 	</bean>
 	
 	<bean id="hadoopConfiguration" class="fortscale.collection.hadoop.HadoopConfigurationFactory">
 		<property name="resourcesString" value="${hdfs.configuration.resources}"/>
 	</bean>

	<hdp:pig-factory id="pigFactory" configuration-ref="hadoopConfiguration"/>
	<hdp:file-system/>

    <hdp:pig-template pig-factory-ref="pigFactory"/>
	<bean id="autowiringSpringBeanJobFactory" class="fortscale.collection.AutowiringSpringBeanJobFactory"/>
	<bean id="stdSchedulerFactory" class="org.quartz.impl.StdSchedulerFactory"/>
	<bean id="jobScheduler" factory-bean="stdSchedulerFactory" factory-method="getScheduler">
		<property name="jobFactory" ref="autowiringSpringBeanJobFactory"/>
	</bean>
	
	<bean id="usernameService" class="fortscale.services.impl.UsernameService">
		<property name="lazy" value="false"/>
	</bean>
	<bean id="vpnUsernameNormalizer" class="fortscale.services.impl.UsernameNormalizer">
		<property name="matchersString" value="${collection.vpn.etl.username.normalize.matchers}"/>
		<property name="usernameService" ref="usernameService"/>
	</bean>
	<bean id="secUsernameNormalizer" class="fortscale.services.impl.UsernameNormalizer">
		<property name="matchersString" value="${collection.sec.etl.username.normalize.matchers}"/>
		<property name="usernameService" ref="usernameService"/>
	</bean>
	<bean id="sshUsernameNormalizer" class="fortscale.services.impl.UsernameNormalizer">
		<property name="matchersString" value="${collection.ssh.etl.username.normalize.matchers}"/>
		<property name="usernameService" ref="usernameService"/>
	</bean>
	
	<bean id="ipToLocationGeoIPService" class="fortscale.geoip.IpToLocationGeoIPService">
		<constructor-arg name="geoIpDbResource" value="file:${ip.to.location.db.full.path}"/>
		<constructor-arg name="geoIpV6DbResource" value="file:${ip.to.location.db.full.path}"/>
		<constructor-arg name="fullLicenseKeyResource" value="file:${ip.to.location.license.key.full.path}"/>
	</bean>
</beans>