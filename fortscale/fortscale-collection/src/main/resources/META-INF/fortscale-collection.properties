collection.lib.dir=lib
collection.resources.dir.path=resources
collection.fetch.data.path=./input
collection.fetch.data.ad.path=${collection.fetch.data.path}/ad
collection.fetch.data.ad.user.path=${collection.fetch.data.ad.path}/user
collection.fetch.data.ad.group.path=${collection.fetch.data.ad.path}/group
collection.fetch.data.ad.computer.path=${collection.fetch.data.ad.path}/computer
collection.fetch.data.ad.ou.path=${collection.fetch.data.ad.path}/ou
collection.fetch.finish.data.path=./finish
collection.fetch.finish.data.ad.path=${collection.fetch.finish.data.path}/ad
collection.fetch.finish.data.ad.user.path=${collection.fetch.finish.data.ad.path}/user
collection.fetch.finish.data.ad.group.path=${collection.fetch.finish.data.ad.path}/group
collection.fetch.finish.data.ad.computer.path=${collection.fetch.finish.data.ad.path}/computer
collection.fetch.finish.data.ad.ou.path=${collection.fetch.finish.data.ad.path}/ou
collection.fetch.error.data.path=./error
collection.fetch.error.data.ad.path=${collection.fetch.error.data.path}/ad
collection.fetch.error.data.ad.user.path=${collection.fetch.error.data.ad.path}/user
collection.fetch.error.data.ad.group.path=${collection.fetch.error.data.ad.path}/group
collection.fetch.error.data.ad.computer.path=${collection.fetch.error.data.ad.path}/computer
collection.fetch.error.data.ad.ou.path=${collection.fetch.error.data.ad.path}/ou

collection.morphline.conf.path=${collection.resources.dir.path}/conf-files
collection.morphline.conf.ad.path=${collection.morphline.conf.path}/ad

collection.shell.scripts.dir.path=${collection.resources.dir.path}/scripts
collection.pig.scripts.dir.path=${collection.resources.dir.path}/pig



collection.ldap.field.seperator=|
collection.ad.user.output.fields=timestamp,distinguishedName,isCriticalSystemObject,isDeleted,badPwdCount,logonCount,primaryGroupID,sAMAccountType,userAccountControl,accountExpires,badPasswordTime,lastLogoff,lockoutTime,assistant,memberOf,managedObjects,manager,masteredBy,directReports,secretary,logonHours,whenChanged,streetAddress,cn,company,c,department,description,displayName,division,mail,employeeID,employeeNumber,employeeType,givenName,l,o,personalTitle,otherFacsimileTelephoneNumber,otherHomePhone,homePhone,otherMobile,mobile,otherTelephone,roomNumber,userPrincipalName,telephoneNumber,title,userParameters,userWorkstations,lastLogon,pwdLastSet,whenCreated,sn,sAMAccountName,thumbnailPhoto,objectSid,objectGUID,timestampepoch
collection.ad.group.output.fields=timestamp,distinguishedName,name,isCriticalSystemObject,isDeleted,groupType,sAMAccountType,memberOf,managedBy,managedObjects,masteredBy,member,nonSecurityMember,nonSecurityMemberBL,directReports,secretary,whenChanged,whenCreated,accountNameHistory,cn,description,displayName,mail,sAMAccountName,objectSid,objectGUID,timestampepoch


ip.to.location.db.full.path=data/geoip/iptolocationdata.bin
ip.to.location.license.key.full.path=data/geoip/license.key

fortscale.collection.overriding.properties=resources/fortscale-collection-overriding.properties


dns.resolver.maxQueries=1000
dns.resolver.timeoutInSeconds=-1
dhcp.resolver.leaseTimeInMins=2880
dhcp.resolver.graceTimeInMins=1
computer.login.resolver.leaseTimeInMins=600
computer.login.resolver.graceTimeInMins=1


########################################### TIMEZONE ########################################################
# Timezone list from java.util.TimeZone.getAvailableIDs()
morphline.timezone= {  "regexpList": [    {"type" : "vpn" , "host" : ".+" , "timezone" : "Asia/Jerusalem"},    {"type" : "ssh" , "host" : ".+" , "timezone" : "Asia/Jerusalem"},    {"type" : "sec" , "host" : ".+" , "timezone" : "Asia/Jerusalem"}  ], "defaultTimezone" : "Asia/Jerusalem" }