morphlines : [
	{
		id : morphline1
		importCommands : ["org.kitesdk.morphline.**", "org.apache.solr.**","fortscale.collection.morphlines.**"]
		commands : [
			
			{
				grok {
#					dictionaryFiles : [src/main/resources/grok-dictionaries/dhcp.dhcpd.conf]
								  dictionaryString : """
				IP (?<![0-9])(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))(?![0-9])
				IPV6 ([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{0,4}|:[0-9A-Fa-f]{1,4})?|(:[0-9A-Fa-f]{1,4}){0,2})|(:[0-9A-Fa-f]{1,4}){0,3})|(:[0-9A-Fa-f]{1,4}){0,4})|:(:[0-9A-Fa-f]{1,4}){0,5})((:[0-9A-Fa-f]{1,4}){2}|:(25[0-5]|(2[0-4]|1[0-9]|[1-9])?[0-9])(\.(25[0-5]|(2[0-4]|1[0-9]|[1-9])?[0-9])){3})|(([0-9A-Fa-f]{1,4}:){1,6}|:):[0-9A-Fa-f]{0,4}|([0-9A-Fa-f]{1,4}:){7}:
				DHCP_IP (?<=on )(?:%{IPV6}|%{IP})(?= to)
				HOSTNAME (?<=\()[\w.-]+(?=\))
				
				# Networking
				MAC (?:%{CISCOMAC}|%{WINDOWSMAC}|%{COMMONMAC})
				CISCOMAC (?:(?:[A-Fa-f0-9]{4}\.){2}[A-Fa-f0-9]{4})
				WINDOWSMAC (?:(?:[A-Fa-f0-9]{2}-){5}[A-Fa-f0-9]{2})
				COMMONMAC (?:(?:[A-Fa-f0-9]{2}:){5}[A-Fa-f0-9]{2})
				
				#2013/08/14 16:52:07
				# Months: January, Feb, 3, 03, 12, December
				MONTH \b(?:Jan(?:uary)?|Feb(?:ruary)?|Mar(?:ch)?|Apr(?:il)?|May|Jun(?:e)?|Jul(?:y)?|Aug(?:ust)?|Sep(?:tember)?|Oct(?:ober)?|Nov(?:ember)?|Dec(?:ember)?)\b
				MONTHNUM (?:0?[1-9]|1[0-2])
				MONTHDAY (?:(?:0[1-9])|(?:[12][0-9])|(?:3[01])|[1-9])
				
				# Days: Monday, Tue, Thu, etc...
				DAY (?:Mon(?:day)?|Tue(?:sday)?|Wed(?:nesday)?|Thu(?:rsday)?|Fri(?:day)?|Sat(?:urday)?|Sun(?:day)?)
				
				# Years?
				YEAR (?>\d\d){1,2}
				HOUR (?:2[0123]|[01]?[0-9])
				MINUTE (?:[0-5][0-9])
				# '60' is a leap second in most time standards and thus is valid.
				SECOND (?:(?:[0-5][0-9]|60)(?:[:.,][0-9]+)?)
				TIME (?!<[0-9])%{HOUR}:%{MINUTE}(?::%{SECOND})(?![0-9])
				# datestamp is YYYY/MM/DD-HH:MM:SS.UUUU (or something like it)
				DATE_US %{MONTHNUM}[/-]%{MONTHDAY}[/-]%{YEAR}
				DATE_EU %{MONTHDAY}[./-]%{MONTHNUM}[./-]%{YEAR}
				DATE_US_YF %{YEAR}[/-]%{MONTHNUM}[/-]%{MONTHDAY}
				DATE_EU_YF %{YEAR}[./-]%{MONTHDAY}[./-]%{MONTHNUM}
				ISO8601_TIMEZONE (?:Z|[+-]%{HOUR}(?::?%{MINUTE})?)
				ISO8601_SECOND (?:%{SECOND}|60)
				TIMESTAMP_ISO8601 %{YEAR}-%{MONTHNUM}-%{MONTHDAY}[T ]%{HOUR}:?%{MINUTE}(?::?%{SECOND})?%{ISO8601_TIMEZONE}?
				DATE %{DATE_US}|%{DATE_EU}
				DATEYEAR (%{DATE_US_YF}|%{DATE_EU_YF})
				DATESTAMP %{DATE}[- ]%{TIME}
				DHCP_DATE %{MONTH}\s+\d+\s%{TIME}
	  				"""

					expressions : {
						message : "%{DHCP_IP:ip}|%{HOSTNAME:hostname}|%{DHCP_DATE:date_time}|%{MAC:mac_address}"
					}
					findSubstrings : true
				}
			}

			# Adding year from the system current date to the date_time.
			{
				java {
					imports : "import java.util.*;import java.text.SimpleDateFormat;"
					code:
						"""
						Object date_time = record.getFirstValue("date_time");
						int year = Calendar.getInstance().get(Calendar.YEAR);
						record.replaceValues("date_time", Integer.toString(year) + " " + date_time.toString());
						return child.process(record);
						"""
				}
			}		

			{
				tryRules {
					catchExceptions : false
					throwExceptionIfAllRulesFailed : false
					rules : [
						{
							commands : [
								{
									addValues {				
										date_time_epoch : "@{date_time}"
									}
								}	
								
								{
									convertTimestamp {
										field : date_time_epoch
										inputFormats : [ "yyyy MMM d HH:mm:ss"]
										outputFormat : "unixTimeInSeconds"
									}
								}

								{
									convertTimestamp {
										field : date_time
										inputFormats : [ "yyyy MMM d HH:mm:ss"]
										outputFormat : "yyyy-MM-dd HH:mm:ss"
									}
								}
							]
						}

						{
							commands : [
								{ logInfo { format : "Timestamps addition and conversion could not be completed on record: {}", args : ["@{}"] } }
								{ dropRecord {} }
							]
						}
					]
				}
			}
		]
	}
]