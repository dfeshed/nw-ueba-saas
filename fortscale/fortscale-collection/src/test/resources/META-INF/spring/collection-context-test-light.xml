<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mockito="http://www.mockito.org/spring/mockito"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd

        http://www.mockito.org/spring/mockito http://www.mockito.org/spring/mockito.xsd">

<bean  class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="location" value="classpath:META-INF/fortscale-collection-test.properties"/>
        <property name="order" value="#{T(org.springframework.core.Ordered).HIGHEST_PRECEDENCE}"/>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="localOverride" value="true"/>
    </bean>
    
    <context:spring-configured />
    <context:annotation-config />

    <mockito:mock id="morphlineConfigService" class = "fortscale.collection.morphlines.MorphlineConfigService"/>

    <mockito:mock id="impalaClient" class = "fortscale.utils.impala.ImpalaClient"/>

    <mockito:mock id="cachedRecordRepository" class = "fortscale.domain.eventscache.CachedRecordRepository"/>

    <mockito:mock id="applicationConfigurationService" class = "fortscale.services.ApplicationConfigurationService"/>

    <mockito:mock id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate"/>

    <mockito:mock id="computerRepository" class = "fortscale.domain.core.dao.ComputerRepository"/>

    <mockito:mock id="computerService" class = "fortscale.services.ComputerService"/>

    <mockito:mock id="filterMachinesService" class = "fortscale.services.computer.filtering.FilterMachinesService"/>

    <mockito:mock id="computerLoginResolver" class = "fortscale.services.ipresolving.ComputerLoginResolver"/>

    <context:component-scan base-package="fortscale.collection.services.time,fortscale.domain.core.dao"/>
    
</beans>
