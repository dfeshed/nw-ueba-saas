morphlines : [
	{
		id : morphline1
		importCommands : ["org.kitesdk.morphline.**", "org.apache.solr.**","fortscale.collection.morphlines.**"]
		commands : [
			{
				split {
					inputField : message
					outputFields : [syslogPrefix,deviceVendor,deviceProduct,deviceVersion,signatureId,name,severity,extension]
					separator : "|"
				}
			}
			
			{
				tryRules {
					catchExceptions : true
					throwExceptionIfAllRulesFailed : false
					rules : [
						{
							commands : [	    
								{
									equals { 
										deviceVendor : ["Avenda"]
										deviceProduct : ["eTipsDB"]
										name : ["Start"] 
									}
								}
							]
						}
						
						{
							commands : [
								{
									dropRecord {}
								}				
							]
						}						
					]
				}
			}
			
			{
				grok {
					dictionaryString :
						"""
							DATETIMESTAMP (?<=end=)[0-9]+(?= )
							USERNAME (?<=duser=)[\S]+(?= )
							SOURCEIP (?<=src=)[0-9.]+(?= )
							LOCALIP (?<=dst=)[0-9.]+(?= )						
						"""
					findSubstrings : true
					addEmptyStrings : true
					numRequiredMatches : all
					expressions : {
						message : "%{DATETIMESTAMP:date_time_unix}|%{USERNAME:username}|%{SOURCEIP:source_ip}|%{LOCALIP:local_ip}"
					}
				}		  
			}
			
			{
				setValues {
					status : ["SUCCESS"]
					hostname : [""]
					date_time: "@{date_time_unix}"
				}
			}
			
			{
				tryRules {
					catchExceptions : true
					throwExceptionIfAllRulesFailed : false
					rules : [
						{
							commands : [
								{
									convertTimestamp {
										field : date_time
										inputFormats : ["unixTimeInMillis"]
										inputTimezone : UTC
										outputFormat : "yyyy-MM-dd HH:mm:ss"
										outputTimezone : Asia/Jerusalem
									}
								}
							]
						}
						
						{
							commands : [
								{ logWarn { format : "Problem timeGenerated: {}", args : ["@{timeGenerated}"] } }
							]
						}
					]
				}
			}
	
			{
				Geolocation {
					input_record_name : source_ip
					output_record_name : country
				}
			}
			
			{
				if {
					conditions : [
						{ equals { username : []  } }
					]
					then : [
						{ logWarn { format : "No username, Drop the record. Original message was: {}", args : ["@{message}"] } }
						{ dropRecord {} }
					]
				}
			}
		]
	}
]