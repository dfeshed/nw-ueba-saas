morphlines : [
	{
		id : morphline1
		importCommands : ["org.kitesdk.morphline.**", "org.apache.solr.**","fortscale.collection.morphlines.**"]
		commands : [
			{
				tryRules {
					catchExceptions : true
					throwExceptionIfAllRulesFailed : false
					rules : [
						{
							commands : [
								{
									grok {
										findSubstrings : true
										addEmptyStrings : true
										numRequiredMatches : all
										expressions : {
											message : """(?<status>(primary virtual IP for))"""
										}
									}
								}
							]
						}
						
						{
							commands : [
								{	dropRecord {} }
							]
						}
					]
				}
			}

			{
				if {
					conditions : [
						# if auth success then
						{ equals  { status : [primary virtual IP for] } }
					]
					then : [
						{ logDebug { format : "AUTH SUCCESS: {}", args : ["@{}"] } }
						{
							grok {
								dictionaryFiles : [resources/grok-dictionaries/vpn.openvpn.conf]
								findSubstrings : true
								addEmptyStrings : true
								numRequiredMatches : all
								expressions : {
									message : "%{USERNAME_SUCCESS:username}|%{SOURCEIPORIPV6:source_ip}|%{DATE_TIME:date_time}|%{LOCALIPORIPV6:local_ip}"
								}
							}
						}
						
						{
							setValues {
								status : ["SUCCESS"]
								date_time_unixTime: "@{date_time}"
							}
						}
					]
				}
			}

			{
				tryRules {
					catchExceptions : true
					throwExceptionIfAllRulesFailed : false
					rules : [
						{
							commands : [
								{
									convertTimestamp {
										field : date_time
										inputFormats : ["EEE MMM dd HH:mm:ss yyyy"]
										inputTimezone : Asia/Jerusalem
										outputFormat : "yyyy-MM-dd HH:mm:ss"
										outputTimezone : Asia/Jerusalem
									}
								}
								
								{
									convertTimestamp {
										field : date_time_unixTime
										inputFormats : ["EEE MMM dd HH:mm:ss yyyy"]
										inputTimezone : Asia/Jerusalem
										outputFormat : "unixTimeInSeconds"
										outputTimezone : UTC
                                    }
								}
							]
                        }
                        
						{
							commands : [
								{ logWarn { format : "Problem timeGenerated: {}", args : ["@{timeGenerated}"] } }
							]
                        }
					]
                }
			}
			
			{
				Geolocation {
					input_record_name : source_ip
					output_record_name : country_name
				}
			}
			
			{ logDebug { format : "output record: {}", args : ["@{}"] } }
		]
	}
]