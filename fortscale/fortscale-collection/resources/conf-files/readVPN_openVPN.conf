morphlines : [
  {
    id : morphline1
    importCommands : ["org.kitesdk.morphline.**", "org.apache.solr.**","fortscale.collection.morphlines.**"]
    commands : [
	  {
		tryRules {
		  catchExceptions : true
		  throwExceptionIfAllRulesFailed : false
		  rules : [
			{
			  commands : [
				  {
					grok {
					  findSubstrings : true
					  addEmptyStrings : true
					  numRequiredMatches : all
					  expressions : {
						message : """(?<status>(primary virtual IP for|'AUTH_FAILED'))"""
					  }
					}
				 }
			 ]
			}
			{
			  commands : [
				{	dropRecord {} }
			  ]
			}
		  ]
		}
	  }
	  {
		if {
		  conditions : [
		  # if auth failed then
			{ equals  { status : ['"AUTH_FAILED'"] } }
		  ]
		  then : [
				  { logDebug { format : "AUTH_FAILED: {}", args : ["@{}"] } }
				  {
					grok {
					  dictionaryString : """
										IP (?<![0-9])(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))(?![0-9])
										IPV6 ([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{0,4}|:[0-9A-Fa-f]{1,4})?|(:[0-9A-Fa-f]{1,4}){0,2})|(:[0-9A-Fa-f]{1,4}){0,3})|(:[0-9A-Fa-f]{1,4}){0,4})|:(:[0-9A-Fa-f]{1,4}){0,5})((:[0-9A-Fa-f]{1,4}){2}|:(25[0-5]|(2[0-4]|1[0-9]|[1-9])?[0-9])(\.(25[0-5]|(2[0-4]|1[0-9]|[1-9])?[0-9])){3})|(([0-9A-Fa-f]{1,4}:){1,6}|:):[0-9A-Fa-f]{0,4}|([0-9A-Fa-f]{1,4}:){7}:
										IPORIPV6 (?:%{IPV6}|%{IP})
										USERNAME (?<=\[)[\w.-]+(?=\]:)
										DATE_TIME (Sun|Mon|Tue|Wed|Thu|Fri|Sat)\s+(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s+[0-9]{1,}\s+([0-9]|0[0-9]|1[0-9]|2[0-9]):[0-9]{2}:[0-9]{2}\s+[0-9]{4}
										 """
					  findSubstrings : true
					  addEmptyStrings : true
					  numRequiredMatches : all
					  expressions : {
						message : "%{USERNAME:username}|%{IPORIPV6:source_ip}|%{DATE_TIME:date_time}"
					  }
					}
				 }
				 {
					setValues {
					  status : ["FAIL"]
					  date_time_unixTime: "@{date_time}"
					}
				 }
				]
		}
	  }
	  {
		if {
		  conditions : [
		  # if auth success then
			{ equals  { status : [primary virtual IP for] } }
		  ]
		  then : [
				  { logDebug { format : "AUTH SUCCESS: {}", args : ["@{}"] } }
				  {
					grok {
					  dictionaryString : """
										IP (?<![0-9])(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))(?![0-9])
										IPV6 ([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{0,4}|:[0-9A-Fa-f]{1,4})?|(:[0-9A-Fa-f]{1,4}){0,2})|(:[0-9A-Fa-f]{1,4}){0,3})|(:[0-9A-Fa-f]{1,4}){0,4})|:(:[0-9A-Fa-f]{1,4}){0,5})((:[0-9A-Fa-f]{1,4}){2}|:(25[0-5]|(2[0-4]|1[0-9]|[1-9])?[0-9])(\.(25[0-5]|(2[0-4]|1[0-9]|[1-9])?[0-9])){3})|(([0-9A-Fa-f]{1,4}:){1,6}|:):[0-9A-Fa-f]{0,4}|([0-9A-Fa-f]{1,4}:){7}:
										SOURCEIPORIPV6 (?<=\/)(?:%{IPV6}|%{IP})(?=:\d+\s)
										LOCALIPORIPV6 (?<=:\s)(?:%{IPV6}|%{IP})
										USERNAME (?<=for )[\w.-]+(?=\/)
										DATE_TIME (Sun|Mon|Tue|Wed|Thu|Fri|Sat)\s+(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s+[0-9]{1,}\s+([0-9]|0[0-9]|1[0-9]|2[0-9]):[0-9]{2}:[0-9]{2}\s+[0-9]{4}
										 """
					  findSubstrings : true
					  addEmptyStrings : true
					  numRequiredMatches : all
					  expressions : {
						message : "%{USERNAME:username}|%{SOURCEIPORIPV6:source_ip}|%{DATE_TIME:date_time}|%{LOCALIPORIPV6:local_ip}"
					  }
					}
				 }
				 {
					setValues {
					  status : ["SUCCESS"]
					  date_time_unixTime: "@{date_time}"
					}
				 }
				]
		}
	  }

	  {
                tryRules {
                  catchExceptions : true
                  throwExceptionIfAllRulesFailed : false
                  rules : [
                        {
                          commands : [
                                  {
                                        convertTimestamp {
                                          field : date_time
                                          #Sun Sep 29 11:54:42 2013
                                          inputFormats : ["EEE MMM dd HH:mm:ss yyyy"]
                                          inputTimezone : IST
                                          outputFormat : "yyyy-MM-dd HH:mm:ss"
                                          outputTimezone : IST
                                        }
                                  }
                                  {
                                        convertTimestamp {
                                          field : date_time_unixTime
                                          inputFormats : ["EEE MMM dd HH:mm:ss yyyy"]
                                          inputTimezone : IST
                                          outputFormat : "unixTimeInSeconds"
                                          outputTimezone : UTC
                                        }
                                  }
                          ]
                        }
                        {
                          commands : [
                                { logWarn { format : "Problem timeGenerated: {}", args : ["@{timeGenerated}"] } }
                          ]
                        }
                  ]
                }
         }
	 
	{
		Geolocation {
			input_record_name : source_ip
			output_record_name : country_name
		}
	}
      { logDebug { format : "output record: {}", args : ["@{}"] } }
    ]
  }
]