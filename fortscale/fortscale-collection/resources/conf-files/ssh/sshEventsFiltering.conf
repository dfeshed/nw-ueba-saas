morphlines: [
  {
    id: morphline1
    importCommands: ["org.kitesdk.morphline.**", "org.apache.solr.**", "fortscale.collection.morphlines.**"]
    commands: [
      {logDebug {format: "Debug -1 : {}", args: ["@{}"]}}
      {
        grok {
          dictionaryFiles: [resources/grok-dictionaries/ssh.cisco.conf]
          expressions: {
            message: """[\"]?%{DHCP_DATE:date_time}\+\d\d:\d\d %{TARGET_MACHINE:target_machine} sshd\[\d+\]:(\s|\s\[[^\]]+\]\s)(?<status>(Accepted|Failed)) %{AUTH_METHOD:auth_method} for (?<username>(.+?)) from %{DHCP_IP:source_ip} port \d+ ssh2[\"]?"""
          }
        }
      }
      {logDebug {format: "Debug -2 : {}", args: ["@{}"]}}
      {
        EmptyObjectFilter {
          filterFields: [username, target_machine]
        }
      }
      {logDebug {format: "Debug -3 : {}", args: ["@{}"]}}
      # handle case that the target machine contain ip
      {
        regexMatch {
          field: "target_machine"
          regex: "\\d+[.]\\d+[.]\\d+[.]\\d+"
        }
      }
      {logDebug {format: "Debug -4 : {}", args: ["@{}"]}}

      #the first overflow filter command insures that the overflow is not caused by a single user in the system
      {
        OverFlowFilter {
          eventsType: ssh
          criteria: [username]
          threshold: 100000
        }

      }
      {
        OverFlowFilter {
          eventsType: ssh
          criteria: []
          threshold: 1000000
        }
      }
      {logDebug {format: "Debug -5 : {}", args: ["@{}"]}}
      {
        SSHNormalizeUsername {
          usernameField: username
          normalizedUsernameField: normalized_username
        }
      }
      {logDebug {format: "Debug -6 : {}", args: ["@{}"]}}
    ]
  }
]
