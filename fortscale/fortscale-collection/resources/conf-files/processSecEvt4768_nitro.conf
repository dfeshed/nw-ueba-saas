morphlines: [
  {
    id: morphline1
    importCommands: ["org.kitesdk.morphline.**", "org.apache.solr.**", "fortscale.collection.morphlines.**"]
    commands: [
      {
        split {
          inputField: messageData
          #144117387552096256,121169027,ELM,1441065972,,,10.8.48.101||Security||<BookmarkList>%0D   <Bookmark Channel='Security' RecordId='203987370' IsCurrent='true'/>%0D </BookmarkList>||Microsoft-Windows-Security-Auditing||4768||262||1441065318||0||SNCH2DCS01.sicpa-net.ads||||||14||SAPServiceLVM||sicpa-net||S-1-5-21-1324571244-530250876-991709287-45630||krbtgt||S-1-5-21-1324571244-530250876-991709287-502||0x40810010||0x0||0x12||2||::ffff:10.8.48.25||50910||||||||A Kerberos authentication ticket (TGT) was requested.%0D %0D Account Information:%0D %09Account Name:%09%09%251%0D %09Supplied Realm Name:%09%252%0D %09User ID:%09%09%09%253%0D %0D Service Information:%0D %09Service Name:%09%09%254%0D %09Service ID:%09%09%255%0D %0D Network Information:%0D %09Client Address:%09%09%2510%0D %09Client Port:%09%09%2511%0D %0D Additional Information:%0D %09Ticket Options:%09%09%256%0D %09Result Code:%09%09%257%0D %09Ticket Encryption Type:%09%258%0D %09Pre-Authentication Type:%09%259%0D %0D Certificate Information:%0D %09Certificate Issuer Name:%09%09%2512%0D %09Certificate Serial Number:%09%2513%0D %09Certificate Thumbprint:%09%09%2514%0D %0D Certificate information is only provided if a certificate was used for pre-authentication.%0D %0D Pre-authentication types, ticket options, encryption types and result codes are defined in RFC 4120.
          outputFields: ["", "", "", "", "", "", "", "", service_id, "", "", "", account_name, account_domain, "", "", "", "", failure_code, "", authentication_type]
          separator: "||"
        }
      }
      {
        addValues {
          #MISSING
          security_id: "missing"
        }
      }
      {toString {field: account_domain, trim: true}}
      {toString {field: security_id, trim: true}}
      {toString {field: authentication_type, trim: true}}
      {toString {field: failure_code, trim: true}}
      {
        findReplace {
          field: security_id
          isRegex: false
          pattern: "'"
          replacement: ""
        }
      }
      {
        EmptyObjectFilter {
          filterFields: [account_domain, failure_code]
        }
      }
      {
        if {
          conditions: [
            {equals {isComputer: [true]}}
          ]
          then: [
            {
              FilterOUMachine {
                hostnameField: account_name
                regex: "(.+)\\$$# #$1"
              }
            }
            {
              ComputerLoginUpdate {
                timestampepoch_field: date_time_unix
                ipaddress_field: client_address
                hostname_field: account_name
                domain_field: account_domain
              }
            }
          ]
          else: [
            {
              if {
                conditions: [
                  {equals {failure_code: [0x0]}}
                ]
                then: [
                  {
                    setValues {
                      status: ["SUCCESS"]
                    }
                  }
                ]
                else: [
                  {
                    setValues {
                      status: ["FAILURE"]
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    ]
  }
]