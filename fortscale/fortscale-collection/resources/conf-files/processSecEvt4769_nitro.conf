morphlines: [
  {
    id: morphline1
    importCommands: ["org.kitesdk.morphline.**", "org.apache.solr.**", "fortscale.collection.morphlines.**"]
    commands: [
      {
        if {
          conditions: [
            {equals {isComputer: [true]}}
          ]
          then: [
            {
              dropRecord {}
            }
          ]
        }
      }
      {
        split {
          inputField: messageData
          outputFields: ["", "", "", "", "", "", "", "", service_id, "", "", "", account_name, account_domain, service_name, "", "", "", "", "", failure_code]
          separator: "||"
        }
      }
      {
        addValues {
          sourceName: "Microsoft Windows security auditing."
          logfile: "Security"
          categoryString: "Kerberos Service Ticket Operations"
          #MISSING
          recordNumber: "0"
        }
      }
      {toString {field: recordNumber, trim: true}}
      {toString {field: account_name, trim: true}}
      {toString {field: account_domain, trim: true}}
      {toString {field: service_name, trim: true}}
      {toString {field: service_id, trim: true}}
      {toString {field: failure_code, trim: true}}
      {
        if {
          conditions: [
            {equals {service_name: []}}
          ]
          then: [
            {logWarn {format: "Record does not contain service_name field, Drop the record. Original message was: {}", args: ["@{message}"]}}
            {dropRecord {}}
          ]
        }
      }
      {
        if {
          conditions: [
            {containsText {service_name: [krbtgt]}}
          ]
          then: [
            {dropRecord {}}
          ]
        }
      }
      {
        FilterWhenServiceNameIsNotComputer {
          serviceName: service_name
          regex: "(.+)\\$.*# #$1"
        }
      }
      {
        java {
          imports: ""
          code: """
				Object fieldVal = record.getFirstValue("service_name");
				if (fieldVal!=null && fieldVal instanceof String) {
					String serviceName = (String)fieldVal;
					int dollar_idx = serviceName.indexOf('$');
					if ( -1 == dollar_idx ) {
						return child.process(record);
					}
					record.replaceValues("service_name", serviceName.substring(0, dollar_idx));
				}
				return child.process(record);
				"""
        }
      }
      {
        if {
          conditions: [
            {equals {client_address: ["127.0.0.1"]}}
          ]
          then: [
            {
              setValues {
                machine_name: "@{computer_name}"
              }
            }
          ]
        }
      }
    ]
  }
]