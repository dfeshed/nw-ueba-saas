morphlines: [
  {
    id: verdasysEnrich
    importCommands: ["org.kitesdk.morphline.**", "org.apache.solr.**", "fortscale.collection.morphlines.**"]
    commands: [

      {logDebug {format: "Debug -1 : {}", args: ["@{}"]}}

      {
        setValues {
          data_source: ["verd"]
          last_state: ["etl"]
          date_time_unix: "@{date_time}"
          action_key:[""]
          dest_drive_description:[""]
          DWH_insert_date:[""]
          DWH_source:[""]
          DWH_update_date:[""]
          equipment_key:[""]
          event_detail_row_insert_date:[""]
          event_type:[""]
          has_alert_event_detail:[""]
          is_removable:["false"]
          operator_key:[""]
          original_event_date_time:[""]
          row_insert_date:[""]
          source_drive_description:[""]
          time_key:[""]
          destination_file_type:[""]
        }
      }

      {logDebug {format: "Debug -2 : {}", args: ["@{}"]}}

      {
        convertTimestampFortscale {
          field: date_time_unix
          inputFormats : ["MM/dd/yyyy h:mm:ss a","M/dd/yyyy h:mm:ss a","MM/dd/yyyy HH:mm:ss"]
          outputFormat: "unixTimeInSeconds"
        }
      }

      {logDebug {format: "Debug -7 : {}", args: ["@{}"]}}

      {
        convertTimestampFortscale {
          field: date_time
          inputFormats : ["MM/dd/yyyy h:mm:ss a","M/dd/yyyy h:mm:ss a","MM/dd/yyyy HH:mm:ss"]
          outputFormat: "yyyy-MM-dd HH:mm:ss"
        }
      }
      {logDebug {format: "Debug -8 : {}", args: ["@{}"]}}

      #In case of mail event filter all the events that the recipent is empty
      {
        if {
          conditions: [{contains {event_description: ["Send Mail","Attach Mail"]}}]
          then: [
            {
              EmptyObjectFilter {
                filterFields: [email_recipient]
              }
            }
          ]
        }
      }

      #In case of File access event
      #     1.filter all the events that the destination_file is empty
      #     2. Retrice the fily type
      {
        if {
          conditions: [{contains  {event_description: ["File Archive","File Close","File Copy","File Create","File Delete","File Edit","File Move","File Open","File Read","File Recycle","File Rename","File Restore","File Save As","File Write","ADE Cut","Application Data Exchange","CD Burn","Network Transfer Download","Network Transfer Upload"]}}]
          then: [
            {
              EmptyObjectFilter {
                filterFields: [destination_file]
              }
            }

            {
              java {
                imports: "import java.util.*;"
                code:
                  """
                     String fileName = (String)record.getFirstValue("destination_file");

                     String [] splitedByDot = fileName.split("\\.");

                     if (splitedByDot.length > 1)
                         record.replaceValues("destination_file_type", "."+splitedByDot[splitedByDot.length-1]);



                     return child.process(record);

                  """
              }
            }


          ]
        }
      }


      #In case of Print event filter all the events that the printer field is empty
      {
        if {
          conditions: [{equals {event_description: "Print"}}]
          then: [
            {
              EmptyObjectFilter {
                filterFields: [printer]
              }
            }
          ]
        }
      }





    ]
  }

]
