morphlines : [
  {
    id : wameEnrich
    importCommands : ["org.kitesdk.morphline.**", "org.apache.solr.**","fortscale.collection.morphlines.**"]
    commands : [

      {logDebug {format: "Debug -1 : {}", args: ["@{}"]}}
      {
        setValues {
          data_source : ["wame"]
          last_state : ["etl"]
          date_time_unix:"@{date_time}"
          status:"SUCCESS"

        }
      }
      {logDebug {format: "Debug -2 : {}", args: ["@{}"]}}

      {
        if {
          conditions: [
            {equals {eventcode: ["4723"]}}
          ]
          then: [

            {


              setValues {
                action_type: ["Password Changed"]
              }
            }

          ]
        }
      }

      {
        if {
          conditions: [
            {equals {eventcode: ["4724"]}}
          ]
          then: [

            {


              setValues {
                action_type: ["Password Reset"]
              }
            }


          ]
        }
      }
      {
        if {
          conditions: [
            {equals {eventcode: ["4767"]}}
          ]
          then: [

            {


              setValues {
                action_type: ["Account Unlocked"]
              }
            }

          ]
        }
      }
      {
        if {
          conditions: [
            {equals {eventcode: ["4722"]}}
          ]
          then: [

            {


              setValues {
                action_type: ["Account Enabled"]
              }
            }

          ]
        }
      }
      {logDebug {format: "Debug -3 : {}", args: ["@{}"]}}
      #Override the domains field from the value that will be cut from the computer name
      {
        java {
          imports: ""
          code: """
				Object computerNameObj = record.getFirstValue("computer_name");
				if (computerNameObj!=null && computerNameObj instanceof String) {
					String computerName = (String)computerNameObj;
					String domain = computerName.substring(computerName.indexOf('.')+1,computerName.length());

					record.replaceValues("user_domain", domain);
					record.replaceValues("target_user_domain", domain);
					return child.process(record);


				}
				return child.process(record);
				"""
        }
      }

      {logDebug {format: "Debug -4 : {}", args: ["@{}"]}}



      {
        convertTimestampFortscale {
          field : date_time_unix
          outputFormat : "unixTimeInSeconds"
        }
      }

      {logDebug {format: "Debug -5 : {}", args: ["@{}"]}}

      {
        convertTimestampFortscale {
          field : date_time
          outputFormat : "yyyy-MM-dd HH:mm:ss"
        }
      }

      {logDebug {format: "Debug -6 : {}", args: ["@{}"]}}
    ]
  }
]
