morphlines : [
  {
    id : wameEnrich
    importCommands : ["org.kitesdk.morphline.**", "org.apache.solr.**","fortscale.collection.morphlines.**"]
    commands : [


      {
        setValues {
          data_source : ["gwame"]
          last_state : ["etl"]
          date_time_unix:"@{date_time}"
          group_name:[""]
          group_domain:[""]
          status:"SUCCESS"
          target_username:""

        }
      }

      #{logInfo {format: "Debug -2 : {}", args: ["@{}"]}}


      {
        if {
          conditions: [
            {equals {eventcode: ["4728"]}}
          ]
          then: [

            {


              setValues {
                action_type: ["Addition To A Security Global Group"]
              }
            }

          ]
        }
      }

      {
        if {
          conditions: [
            {equals {eventcode: ["4732"]}}
          ]
          then: [

            {


              setValues {
                action_type: ["Addition To A Security Local Group"]
              }
            }


          ]
        }
      }
      {
        if {
          conditions: [
            {equals {eventcode: ["4756"]}}
          ]
          then: [

            {


              setValues {
                action_type: ["Addition To A Security Universal Group"]
              }
            }

          ]
        }
      }

      #{logInfo {format: "Debug -3 : {}", args: ["@{}"]}}


      #Override the domains field from the value that will be cut from the computer name
      {
        java {
          imports: ""
          code: """
				Object computerNameObj = record.getFirstValue("computer_name");
				if (computerNameObj!=null && computerNameObj instanceof String) {
					String computerName = (String)computerNameObj;
					String domain = computerName.substring(computerName.indexOf('.')+1,computerName.length());

					record.replaceValues("user_domain", domain);
					record.replaceValues("target_user_domain", domain);
					return child.process(record);


				}
				return child.process(record);
				"""
        }
      }

      #Retrive the targer user name from the target SID
      {
        java {
          imports: ""
          code: """
				Object target_SIDObj = record.getFirstValue("target_SID");
				if (target_SIDObj!=null && target_SIDObj instanceof String) {
					String target_SID = (String)target_SIDObj;
					String target_user_name = target_SID.substring(target_SID.indexOf('\\')+1,target_SID.length());
					record.replaceValues("target_username", target_user_name);
					return child.process(record);


				}

				return child.process(record);
				"""
        }
      }



      #{logInfo {format: "Debug -4 : {}", args: ["@{}"]}}

      #Decide for the Group Name based on the Group_Name or the Group_Account_Name
      {
        if {
          conditions: [
            {equals {potential_group_name_1: [""]}}
          ]
          then: [

            {
              setValues {
                group_name: "@{potential_group_name_2}"
              }
            }

          ]
          else:[

            {
              setValues {
                group_name: "@{potential_group_name_1}"
              }
            }

          ]
        }
      }
      {
        if {
          conditions: [
            {equals {potential_group_domain_1: [""]}}
          ]
          then: [

            {
              setValues {
                group_domain: "@{potential_group_domain_2}"
              }
            }

          ]
          else:[

            {
              setValues {
                group_domain: "@{potential_group_domain_1}"
              }
            }

          ]
        }
      }

      {logDebug {format: "Debug -5 : {}", args: ["@{}"]}}

      {
        convertTimestampFortscale {
          field : date_time_unix
          outputFormat : "unixTimeInSeconds"
        }
      }



      {
        convertTimestampFortscale {
          field : date_time
          outputFormat : "yyyy-MM-dd HH:mm:ss"
        }
      }


    ]
  }
]
