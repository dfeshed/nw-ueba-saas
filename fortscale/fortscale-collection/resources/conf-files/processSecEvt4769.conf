morphlines : [
	{
	    id : morphline1
	    importCommands : ["org.kitesdk.morphline.**", "org.apache.solr.**","fortscale.collection.morphlines.**"]

    	commands : [
    	{ 
			if { 
				conditions : [ 
					{ equals { isComputer : [true] } } 
				] 
				then : [
				{ 
					dropRecord{} 
				}
				] 
			} 
		}
    	{
			tryRules {
		  		catchExceptions : true
		  		throwExceptionIfAllRulesFailed : false
		  		rules : [
				{
			  		commands : [
	  				{
						grok {
		  					dictionaryString : """
							  	ACCOUNT_DOMAIN (?<=Account Domain:).+(?=Logon GUID:)
								SERVICE_NAME (?<=Service Name:)[^\$]+(?=\$)
								SERVICE_ID (?<=Service ID:).+(?=Network Information:)
								FAILURE_CODE (?<=Failure Code:).+(?=Transited Services)
								TASK_CATEGORY (?<=TaskCategory=).+(?=OpCode=)
								LOG_NAME (?<=LogName=).+(?=SourceName)
								RECORD_NUMBER (?<=RecordNumber=).+(?=Keywords)
								SOURCE_NAME (?<=SourceName=).+(?=EventCode)
								 """
		  					findSubstrings : true
						  	addEmptyStrings : true
						  	numRequiredMatches : all
						  	expressions : {
								messageData : "%{SOURCE_NAME:sourceName}|%{RECORD_NUMBER:recordNumber}|%{LOG_NAME:logfile}|%{TASK_CATEGORY:categoryString}|%{ACCOUNT_DOMAIN:account_domain}|%{SERVICE_NAME:service_name}|%{SERVICE_ID:service_id}|%{FAILURE_CODE:failure_code}"
						  	}
						}
      				}
      				{ toString { field : sourceName, trim : true } }
      				{ toString { field : recordNumber, trim : true } }
      				{ toString { field : logfile, trim : true } }
      				{ toString { field : categoryString, trim : true } }
      				{ toString { field : account_name, trim : true } }
      				{ toString { field : account_domain, trim : true } }
      				{ toString { field : service_name, trim : true } }
      				{ toString { field : service_id, trim : true } }
      				{ toString { field : failure_code, trim : true } }
			  		]
				}
				{
					# fallback rule when grok failed to match properties
					commands : [
						{ dropRecord {} }    
					]
				}
		  	]
			}
		}
		{ 
			if { 
				conditions : [ 
					{ equals { service_name : [] } } 
				] 
				then : [
				{ 
					dropRecord{} 
				}
				] 
			} 
		}
		{
			ClassifyHost {
				hostnameField : service_name
				classificationField : dst_class
			}
		}
		{
			GetComputerClusterName {
				hostnameField : service_name
				clusterField : normalized_dst_machine
			}
		}
    	]
  	}
]
