morphlines : [
	{
		id : morphline1
		importCommands : ["org.kitesdk.morphline.**", "org.apache.solr.**","fortscale.collection.morphlines.**"]
		commands : [                    
			{
				tryRules {
					catchExceptions : true
					throwExceptionIfAllRulesFailed : false
					rules : [
						{
							commands : [
								{
									grok {
										findSubstrings : true
										addEmptyStrings : true
										numRequiredMatches : all
										expressions : {
											message : """(?<status>(Accepted|Failed(?= \w+ for \w+ from )))"""
										}
									}
								}
							]
						}
						{
							commands : [
								{	logDebug	{	format : "Record doesn't meet legitimate ssh format. Dropping record: {}", args : ["@{}"] } }
								{	dropRecord {} }
							]
						}
					]
				}
			}	
		
			{
				grok {
					dictionaryFiles : [resources/grok-dictionaries/ssh.sshd.conf]
					expressions : {
						message : "%{DHCP_IP:source_ip}|%{TARGET_MACHINE:target_machine}|%{DHCP_DATE:date_time}|%{USERNAME:username}|%{AUTH_METHOD:auth_method}"
					}
					findSubstrings : true
					numRequiredMatches : all				
				}
			}
		
			# Adding year from the system current date to the date_time.
			{
				java {
					imports : "import java.util.*;import java.text.SimpleDateFormat;"
					code:
						"""
						Object date_time = record.getFirstValue("date_time");
						int year = Calendar.getInstance().get(Calendar.YEAR);
						record.replaceValues("date_time", Integer.toString(year) + " " + date_time.toString());
						return child.process(record);
						"""
				}
			}
		
			{
				tryRules {
					catchExceptions : false
					throwExceptionIfAllRulesFailed : false
					rules : [
						{
							commands : [
								{
									addValues {				
										date_time_unix : "@{date_time}"
									}
								}	
					
								{
									convertTimestamp {
										field : date_time_unix
										inputFormats : [ "yyyy MMM d HH:mm:ss"]
										inputTimezone : Asia/Jerusalem
										outputFormat : "unixTimeInSeconds"
										outputTimezone : UTC
									}
								}
		        
								{
									convertTimestamp {
										field : date_time
										inputFormats : [ "yyyy MMM d HH:mm:ss"]
										inputTimezone : Asia/Jerusalem
										outputFormat : "yyyy-MM-dd HH:mm:ss"
										outputTimezone : Asia/Jerusalem
									}
								}
							]
						}		
					]
				}
			}
		
			{
				GetHostnameFromDHCP {
					ipAddress : source_ip
					timeStamp: date_time_unix
					outputRecordName : hostname
					host : "127.0.0.1"
					port : 27017
					db: "fortscale"
					collection : "dhcp_log"
					leaseTimeInMins : 2880
				}
			}
		
			{
				if {
					conditions : [
						# if hostname is empty then
						{ equals  { hostname : [""] } }
					]
					then : [
						{
							GetHostnameFromDNS {
								ip_address : source_ip
								output_record_name : hostname
								remove_last_dot : true
								short_name : true
							}
						}
					]
				}
			}
		]
	}
]