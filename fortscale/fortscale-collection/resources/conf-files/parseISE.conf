# Morphline file that parse ISE events into canonical format

morphlines : [
  {
    id : parseISE
    importCommands : ["org.kitesdk.morphline.**", "org.apache.solr.**","fortscale.collection.morphlines.**"]

    commands : [


				{
                  # filter  message by specific groups "Group <AnyConnect_policy>", "Group = Everyone" or "Group=ciscovpn4cluster" or "Group=ciscovpncluster" or "Group=crdc_webex_employee" or "Group=CRDC_users"  or "Group <apple_short>"
                  # all other will be discarded in the dropRecord command bellow
                  grok {
                    findSubstrings: true
                    addEmptyStrings: true
                    numRequiredMatches: all
                    expressions: {message: """(?<event_code>(3000|3001))"""}
                  }
                }


		# {logInfo {format: "DEBUG 1 - : {}", args: ["@{}"]}}


		# drop events that are not 3000 or 3001
        {
			if {
				conditions : [
					{ not {contains { event_code : ["3000", "3001"] } }}
				]
				then : [
					{ dropRecord {} }
				]
			}
		}

		# {logInfo {format: "DEBUG 2 -: {}", args: ["@{}"]}}


		{
			grok {
				dictionaryFiles : [resources/grok-dictionaries/ise.conf]
				 findSubstrings: true
				 addEmptyStrings: true
				 numRequiredMatches: all
				expressions : {
					message :  "%{LEASE_TIME:timestampepoch}|%{HOSTNAME:hostname}|%{IPADDRESS:ipaddress}|%{MAC:macAddress}"
				}
			}
		}

	    # {logInfo {format: "DEBUG 3 -: {}", args: ["@{}"]}}


		# drop events with missing ip or hostname
		{
        	EmptyObjectFilter {
          		filterFields : [ipaddress,hostname]
        	}
      	}

		# {logInfo {format: "DEBUG 4 -: {}", args: ["@{}"]}}

		# convert event time to utc timestamp
		{
			convertTimestampFortscale {
			  field : timestampepoch
			  inputFormats : ["yyyy-MM-dd'T'HH:mm:ss"]
			  outputFormat : "unixTimeInSeconds"

			}
		}

      # {logInfo {format: "DEBUG 5 -: {}", args: ["@{}"]}}

      # check if the hostname is in AD
      {
        IsADComputer {
          hostnameField : "hostname"
          outputField : "adHostName"
        }
      }

      # {logInfo {format: "DEBUG 6 -: {}", args: ["@{}"]}}
	]
  }
]
