morphlines : [
  {
    id : wameParsing
    importCommands : ["org.kitesdk.morphline.**", "org.apache.solr.**","fortscale.collection.morphlines.**"]
    commands : [



      # parse the raw message, extract all fields from the message, assuming the following format:
      # 2014-08-25 00:28:54|10.0.0.1|10.0.0.2|rashid|nanu|VIEW|145342234|1ser2ef&b=234234%s=6v
      {
        split {
          inputField : message
          outputFields :[date_time,eventcode,account_domain,username,target_account_domain,target_username]
          separator : ","
          isRegex: false
          addEmptyStrings: true
          trim: true
        }
      }




      {
        EmptyObjectFilter {
          filterFields: [date_time, username, target_username]
        }
      }



      {
        findReplace {
          field: date_time
          pattern: "\""
          #pattern : """(\b\w+\b)"""
          isRegex: false
          replacement: ""
          #replacement : "$1!"
          #replacement : ""
          replaceFirst: false
        }
      }
      {
        findReplace {
          field: username
          pattern: "\""
          #pattern : """(\b\w+\b)"""
          isRegex: false
          replacement: ""
          #replacement : "$1!"
          #replacement : ""
          replaceFirst: false
        }
      }
      {
        findReplace {
          field: target_username
          pattern: "\""
          #pattern : """(\b\w+\b)"""
          isRegex: false
          replacement: ""
          #replacement : "$1!"
          #replacement : ""
          replaceFirst: false
        }
      }
      {
        findReplace {
          field: account_domain
          pattern: "\""
          #pattern : """(\b\w+\b)"""
          isRegex: false
          replacement: ""
          #replacement : "$1!"
          #replacement : ""
          replaceFirst: false
        }
      }

      {
        findReplace {
          field: target_account_domain
          pattern: "\""
          #pattern : """(\b\w+\b)"""
          isRegex: false
          replacement: ""
          #replacement : "$1!"
          #replacement : ""
          replaceFirst: false
        }
      }
      {
        findReplace {
          field: target_username
          pattern: "\""
          #pattern : """(\b\w+\b)"""
          isRegex: false
          replacement: ""
          #replacement : "$1!"
          #replacement : ""
          replaceFirst: false
        }
      }




    ]
  }
]
