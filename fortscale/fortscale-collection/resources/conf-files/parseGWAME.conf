morphlines : [
  {
    id : gwameParsing
    importCommands : ["org.kitesdk.morphline.**", "org.apache.solr.**","fortscale.collection.morphlines.**"]
    commands : [

      {logDebug {format: "Debug -1 : {}", args: ["@{}"]}}

      # parse the raw message, extract all fields from the message, assuming the following format:
      # 2014-08-25 00:28:54|10.0.0.1|10.0.0.2|rashid|nanu|VIEW|145342234|1ser2ef&b=234234%s=6v
      {
        split {
          inputField : message
          outputFields :[date_time,eventcode,user_domain,username,target_SID,computer_name,target_DN,potential_group_name_1,potential_group_domain_1,potential_group_name_2,potential_group_domain_2]
          separator : ","
          isRegex: false
          addEmptyStrings: true
          trim: true
        }
      }

      {logDebug {format: "Debug -2 : {}", args: ["@{}"]}}


      #{logInfo {format: "Debug -1 : {}", args: ["@{}"]}}

      {
        EmptyObjectFilter {
          filterFields: [date_time,eventcode,username,target_DN,target_SID,computer_name]
        }
      }

      {logDebug {format: "Debug -3 : {}", args: ["@{}"]}}

      {
        findReplace {
          field: date_time
          pattern: "\""
          #pattern : """(\b\w+\b)"""
          isRegex: false
          replacement: ""
          #replacement : "$1!"
          #replacement : ""
          replaceFirst: false
        }
      }
      {
        findReplace {
          field: target_DN
          pattern: "\""
          #pattern : """(\b\w+\b)"""
          isRegex: false
          replacement: ""
          #replacement : "$1!"
          #replacement : ""
          replaceFirst: false
        }
      }
      {
        findReplace {
          field: target_DN
          pattern: "|"
          #pattern : """(\b\w+\b)"""
          isRegex: false
          replacement: ","
          #replacement : "$1!"
          #replacement : ""
          replaceFirst: false
        }
      }
      {
        findReplace {
          field: username
          pattern: "\""
          #pattern : """(\b\w+\b)"""
          isRegex: false
          replacement: ""
          #replacement : "$1!"
          #replacement : ""
          replaceFirst: false
        }
      }
      {
        findReplace {
          field: target_SID
          pattern: "\""
          #pattern : """(\b\w+\b)"""
          isRegex: false
          replacement: ""
          #replacement : "$1!"
          #replacement : ""
          replaceFirst: false
        }
      }
      {
        findReplace {
          field: user_domain
          pattern: "\""
          #pattern : """(\b\w+\b)"""
          isRegex: false
          replacement: ""
          #replacement : "$1!"
          #replacement : ""
          replaceFirst: false
        }
      }

      {
        findReplace {
          field: computer_name
          pattern: "\""
          #pattern : """(\b\w+\b)"""
          isRegex: false
          replacement: ""
          #replacement : "$1!"
          #replacement : ""
          replaceFirst: false
        }
      }
      {
        findReplace {
          field: potential_group_name_1
          pattern: "\""
          #pattern : """(\b\w+\b)"""
          isRegex: false
          replacement: ""
          #replacement : "$1!"
          #replacement : ""
          replaceFirst: false
        }
      }
      {
        findReplace {
          field: potential_group_domain_1
          pattern: "\""
          #pattern : """(\b\w+\b)"""
          isRegex: false
          replacement: ""
          #replacement : "$1!"
          #replacement : ""
          replaceFirst: false
        }
      }
      {
        findReplace {
          field: potential_group_name_2
          pattern: "\""
          #pattern : """(\b\w+\b)"""
          isRegex: false
          replacement: ""
          #replacement : "$1!"
          #replacement : ""
          replaceFirst: false
        }
      }
      {
        findReplace {
          field: potential_group_domain_2
          pattern: "\""
          #pattern : """(\b\w+\b)"""
          isRegex: false
          replacement: ""
          #replacement : "$1!"
          #replacement : ""
          replaceFirst: false
        }
      }


      {logDebug {format: "Debug -4 : {}", args: ["@{}"]}}



    ]
  }
]
