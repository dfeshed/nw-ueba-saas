morphlines : [
{
	id : morphline1
	importCommands : ["org.kitesdk.morphline.**", "org.apache.solr.**","fortscale.collection.morphlines.**"]

    commands : [
	  	{
			tryRules {
		  		catchExceptions : true
		  		throwExceptionIfAllRulesFailed : false
		  		rules : [
				{
			  		commands : [
	  				{
						grok {
		  					dictionaryString : """
		  						CLIENT_ADDRESS (?<=Client Address:).+?(?=Client Port:)
		  						ACCOUNT_NAME (?<=Account Name:).+?(?=Supplied Realm Name)|(?<=Account Name:).+?(?=Account Domain)|(?<=Account Name:).+?(?=Service Information)
								REPORTING_SERVER (?<=ComputerName=).+?(?=TaskCategory=)
								ACCOUNT_DOMAIN (?<=Supplied Realm Name:).+?(?=User ID:)
			  					TIMEZONE (?<=timezone )\S+
								 """
		  					findSubstrings : true
						  	addEmptyStrings : true
						  	numRequiredMatches : all
						  	expressions : {
								messageData : "%{REPORTING_SERVER:reporting_server}|%{ACCOUNT_NAME:account_name}|%{CLIENT_ADDRESS:client_address}|%{ACCOUNT_DOMAIN:account_domain}|%{TIMEZONE:timezone}"
						  	}
						}
      				}
      				{ toString { field : client_address, trim : true } }
      				{ toString { field : account_name, trim : true } }
      				{ toString { field : account_domain, trim : true } }
      				{ toString { field : reporting_server, trim : true } }
					{ toString { field : timezone, trim : true } }
			  		]
				}
		  	]
			}
		}
		{
			if {
			  conditions : [
				{ equals { timezone : [] }}
			  ]
			  then : [
				{
					GetTimezone {
						sourceType : "sec"
						hostnameField : reporting_server
						timezoneOutputField : timezone_input
					}
				}
			  ]
			  else : [
				{
					addValues {
						timezone_input : "@{timezone}"
					}
				}
			  ]
			}
		}
		{ 
			if { 
				conditions : [ 
					{ equals { account_name : [] } } 
				] 
				then : [
					{ logWarn { format : "Record does not contain account_name field, Drop the record. Original message was: {}", args : ["@{message}"] } }
					{ dropRecord {} }
				] 
			} 
		}

		{ 
			if { 
				conditions : [ 
					{ equals { client_address : [] } } 
				] 
				then : [
				{ logError { format : "Record does not contain client_address field, Drop the record. Original message was: {}", args : ["@{message}"] } }
				{ 
					dropRecord{} 
				}
				] 
			} 
		}

      { logDebug { format : "current date field at  record is - : {}", args : ["@{date_time}"] } }

      {
        java {
          imports : "import java.util.*;"
          code: """
		                					Object rec = record.getFirstValue("date_time");
		                					String tmp = String.valueOf(rec).substring(0,19);
		                					record.replaceValues("date_time",tmp);
		                					return child.process(record);
		                					"""
        }
      }



      {
        convertTimestampFortscale {
          field : date_time
          #2013-11-05T17:59:57.000+02:00
          inputFormats : ["yyyy-MM-dd'T'HH:mm:ss"]
          inputTimezoneField : timezone_input
          outputFormat : "yyyy-MM-dd HH:mm:ss"
        }
      }




		
		{
			addValues {
				date_time_unix : "@{date_time}"
			}
		}




		
		{
			tryRules {
		  		catchExceptions : true
		  		throwExceptionIfAllRulesFailed : false
		  		rules : [
				{
			  		commands : [



				  		{
							convertTimestampFortscale {
					  			field : date_time_unix
			    	  			inputFormats : ["yyyy-MM-dd HH:mm:ss"]
					  			inputTimezoneField : timezone_input
					  			outputFormat : "unixTimeInSeconds"
							}
				  		}
			  		]
				}
		  		]
			}
	  	}
	  	{
			tryRules {
		  		catchExceptions : true
		  		throwExceptionIfAllRulesFailed : false
		  		rules : [
				{
			  		commands : [




				  		{
							findReplace {
					  			field : client_address
					  			pattern : "::1"
					  			isRegex : false
					  			replacement : "127.0.0.1"
					  			replaceFirst : false
							}
				  		}



				  		{
							findReplace {
					  			field : client_address
					  			pattern : "::ffff:"
					  			isRegex : false
					  			replacement : ""
				  				replaceFirst : false
							}
				  		}
					]
				}
		  		]
			}
	  	}





		{
			FilterOUMachine {
				hostnameField : account_name
				regex : "(.+)\\$$# #$1"
			}
		      
		}
	  	 	
	  	{
			ComputerLoginUpdate {
		    	timestampepoch_field : date_time_unix
		        ipaddress_field: client_address
		        hostname_field : account_name
		        domain_field : account_domain
		        max_batch_size : 10000
			}
		}

    {
      addValues {
        isADHostName : true
      }
    }
	]
  }
]
