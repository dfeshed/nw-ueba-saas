morphlines: [
  {
    id: sec4624
    importCommands: ["org.kitesdk.morphline.**", "org.apache.solr.**", "fortscale.collection.morphlines.**"]
    commands: [
      {
        split {
          inputField: messageData
          outputFields: ["", "", "", "", "", "", "", "", reporting_server, "", "", "", "", account_name, account_domain, "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", source_ip]
          separator: "||"
        }
      }
      {
        addValues {
          #MISSING
          timezone: "UTC"
          logon_process: "Kerberos"
        }
      }
      {toString {field: account_name, trim: true}}
      {toString {field: source_ip, trim: true}}
      {toString {field: logon_process, trim: true}}
      {toString {field: account_domain, trim: true}}
      {toString {field: reporting_server, trim: true}}
      {toString {field: timezone, trim: true}}
      {
        EmptyObjectFilter {
          filterFields: [account_name, source_ip, logon_process, reporting_server]
        }
      }
      {
        if {
          conditions: [
            {not {equals {logon_process: [Kerberos]}}}
          ]
          then: [
            {dropRecord {}}
          ]
        }
      }
      {
        if {
          conditions: [
            {equals {source_ip: ["::1"]}}
          ]
          then: [
            {dropRecord {}}
          ]
        }
      }
      {
        if {
          conditions: [
            {equals {source_ip: ["127.0.0.1"]}}
          ]
          then: [
            {dropRecord {}}
          ]
        }
      }
      {
        java {
          imports: "import java.util.*;"
          code:
            """
            String account_name = (String)record.get("account_name").get(0);
            Boolean isComputer = account_name.contains("$") ? true : false;
            if (isComputer){
              record.replaceValues("isComputer", isComputer);
              record.replaceValues("account_name", account_name);
              String account_domain = (String)record.get("account_domain").get(0);
              record.replaceValues("account_domain", account_domain);
              return child.process(record);
            } else{
              return true;
            }
            """
        }
      }
      {
        FilterOUMachine {
          hostnameField: account_name
          regex: "(.+)\\$$# #$1"
        }
      }
      {
        if {
          conditions: [
            {equals {timezone: []}}
          ]
          then: [
            {
              GetTimezone {
                sourceType: "sec"
                hostnameField: reporting_server
                timezoneOutputField: timezone_input
              }
            }
          ]
          else: [
            {
              addValues {
                timezone_input: "@{timezone}"
              }
            }
          ]
        }
      }
      {
        addValues {
          date_time_unix: "@{date_time}"
        }
      }
      {
        ComputerLoginUpdate {
          timestampepoch_field: date_time_unix
          ipaddress_field: source_ip
          hostname_field: account_name
          domain_field: account_domain
        }
      }
    ]
  }
]