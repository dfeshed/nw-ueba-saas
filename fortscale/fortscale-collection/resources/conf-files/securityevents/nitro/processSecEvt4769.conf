morphlines: [
  {
    id: morphline1
    importCommands: ["org.kitesdk.morphline.**", "org.apache.solr.**", "fortscale.collection.morphlines.**"]
    commands: [
      {
        if {
          conditions: [
            {equals {isComputer: [true]}}
          ]
          then: [
            {
              dropRecord {}
            }
          ]
        }
      }
      {
        split {
          inputField: messageData
          #144117387552096256,121169056,ELM,1441065972,,,10.8.48.101||Security||<BookmarkList>%0D   <Bookmark Channel='Security' RecordId='203987399' IsCurrent='true'/>%0D </BookmarkList>||Microsoft-Windows-Security-Auditing||4769||262||1441065330||0||SNCH2DCS01.bla-net.ads||||||11||SNCH2SQL8078V$@BLA-NET.ADS||BLA-NET.ADS||jharperadm||S-1-0-0||0x40810000||0xffffffff||::ffff:10.8.48.78||49218||0x1b||00000000-0000-0000-0000-000000000000||-||A Kerberos service ticket was requested.%0D %0D Account Information:%0D %09Account Name:%09%09%251%0D %09Account Domain:%09%09%252%0D %09Logon GUID:%09%09%2510%0D %0D Service Information:%0D %09Service Name:%09%09%253%0D %09Service ID:%09%09%254%0D %0D Network Information:%0D %09Client Address:%09%09%257%0D %09Client Port:%09%09%258%0D %0D Additional Information:%0D %09Ticket Options:%09%09%255%0D %09Ticket Encryption Type:%09%256%0D %09Failure Code:%09%09%259%0D %09Transited Services:%09%2511%0D %0D This event is generated every time access is requested to a resource such as a computer or a Windows service.  The service name indicates the resource to which access was requested.%0D %0D This event can be correlated with Windows logon events by comparing the Logon GUID fields in each event.  The logon event occurs on the machine that was accessed, which is often a different machine than the domain controller which issued the service ticket.%0D %0D Ticket options, encryption types, and failure codes are defined in RFC 4120.
          outputFields: ["", "", "", "", "", "", "", "", "", "", "", "", account_name, account_domain, service_name, service_id, "", "", "", "", failure_code]
          separator: "||"
        }
      }
      {
        addValues {
          sourceName: "Microsoft Windows security auditing."
          logfile: "Security"
          categoryString: "Kerberos Service Ticket Operations"
          #MISSING
          recordNumber: "0"
        }
      }
      {toString {field: recordNumber, trim: true}}
      {toString {field: account_name, trim: true}}
      {toString {field: account_domain, trim: true}}
      {toString {field: service_name, trim: true}}
      {toString {field: service_id, trim: true}}
      {toString {field: failure_code, trim: true}}
      {
        if {
          conditions: [
            {equals {service_name: []}}
          ]
          then: [
            {logWarn {format: "Record does not contain service_name field, Drop the record. Original message was: {}", args: ["@{message}"]}}
            {dropRecord {}}
          ]
        }
      }
      {
        if {
          conditions: [
            {containsText {service_name: [krbtgt]}}
          ]
          then: [
            {dropRecord {}}
          ]
        }
      }
      {
        FilterWhenServiceNameIsNotComputer {
          serviceName: service_name
          regex: "(.+)\\$.*# #$1"
        }
      }
      {
        java {
          imports: ""
          code: """
				Object fieldVal = record.getFirstValue("service_name");
				if (fieldVal!=null && fieldVal instanceof String) {
					String serviceName = (String)fieldVal;
					int dollar_idx = serviceName.indexOf('$');
					if ( -1 == dollar_idx ) {
						return child.process(record);
					}
					record.replaceValues("service_name", serviceName.substring(0, dollar_idx));
				}
				return child.process(record);
				"""
        }
      }
      {
        if {
          conditions: [
            {equals {client_address: ["127.0.0.1"]}}
          ]
          then: [
            {
              setValues {
                machine_name: "@{computer_name}"
              }
            }
          ]
        }
      }
    ]
  }
]