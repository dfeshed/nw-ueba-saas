morphlines : [
	{
		id : morphline1
		importCommands : ["org.kitesdk.morphline.**", "org.apache.solr.**","fortscale.collection.morphlines.**"]
		commands : [
			{logDebug {format: "Debug -1 : {}", args: ["@{}"]}}
			{
				split {
					inputField: message
					outputFields: ["", "", account_name, account_domain, client_address]
					separator: ","
				}
			}
			{logDebug {format: "Debug -2 : {}", args: ["@{}"]}}
			{ toString { field : client_address, trim : true } }
			{ toString { field : account_name, trim : true } }
			{ toString { field : account_domain, trim : true } }
			{
				if {
					conditions : [
						{ equals { account_name : [] } }
					]
					then : [
						{ logWarn { format : "Record does not contain account_name field, Drop the record. Original message was: {}", args : ["@{message}"] } }
						{ LogFilterEvent { errorMessage: "Record does not contain account_name field"}}
						{ dropRecord {} }
					]
				}
			}
			{logDebug {format: "Debug -3 : {}", args: ["@{}"]}}
			{
				if {
					conditions : [
						{ equals { client_address : [] } }
					]
					then : [
						{ logError { format : "Record does not contain client_address field, Drop the record. Original message was: {}", args : ["@{message}"] } }
						{ LogFilterEvent { errorMessage: "Record does not contain client_address field"}}
						{
							dropRecord{}
						}
					]
				}
			}
			{logDebug {format: "Debug -4 : {}", args: ["@{}"]}}
			{
				FilterOUMachine {
					hostnameField : account_name
					regex : "(.+)\\$$# #$1"
				}
			}
			{logDebug {format: "Debug -5 : {}", args: ["@{}"]}}
			{
				addValues {
					timezone: "UTC"
					timezone_input : "@{timezone}"
					date_time_unix : "@{date_time}"
				}
			}
			{logDebug {format: "Debug -6 : {}", args: ["@{}"]}}
			{
				convertTimestampFortscale {
					field: date_time_unix
					inputTimezoneField: timezone_input
					outputFormat: "unixTimeInSeconds"
				}
			}
			{logDebug {format: "Debug -7 : {}", args: ["@{}"]}}
			{
				tryRules {
					catchExceptions : true
					throwExceptionIfAllRulesFailed : false
					rules : [
						{
							commands : [
								{
									findReplace {
										field : client_address
										pattern : "::1"
										isRegex : false
										replacement : "127.0.0.1"
										replaceFirst : false
									}
								}
								{
									findReplace {
										field : client_address
										pattern : "::ffff:"
										isRegex : false
										replacement : ""
										replaceFirst : false
									}
								}
							]
						}
					]
				}
			}
			{logDebug {format: "Debug -8 : {}", args: ["@{}"]}}
			{
				ComputerLoginUpdate {
					timestampepoch_field : date_time_unix
					ipaddress_field: client_address
					hostname_field : account_name
					domain_field : account_domain
					max_batch_size : 10000
				}
			}
			{logDebug {format: "Debug -9 : {}", args: ["@{}"]}}
			{
				addValues {
					isADHostName : true
				}
			}
			{logDebug {format: "Debug -10 : {}", args: ["@{}"]}}
		]
	}
]