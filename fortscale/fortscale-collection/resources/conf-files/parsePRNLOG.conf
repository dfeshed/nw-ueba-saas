morphlines : [
  {
    id : prnLogParsing
    importCommands : ["org.kitesdk.morphline.**", "org.apache.solr.**","fortscale.collection.morphlines.**"]
    commands : [



      # parse the raw message, extract all fields from the message, assuming the following format:
      # "2016-01-19T16:07:54.000+0200",set,PrintJob,"HP LaserJet Pro MFP M127-M128 PCLmS","TOMERD-LAP",tomerd,"C:\Users\tomerd\Desktop\processSecEvt4624_symantec.conf",tomerd,15,RAW,"MS_XPS_PROC",,"HP LaserJet Pro MFP M127-M128 PCLmS",spooling,1,1,925,"01/19/2016 14:07:53.995",0
      {
        split {
          inputField : message
          outputFields :[date_time,set,type,target_machine,normalized_src_machine,username,file_name,notify_name,JobId,data_type,print_processor,parameters,driver_name,status,priority,total_pages,file_size,submitted_time,page_printed]
          separator : ","
          isRegex: false
          addEmptyStrings: true
          trim: true
        }
      }


        {
               EmptyObjectFilter {
                 filterFields: [date_time,username,normalized_src_machine,target_machine,file_name]
               }
        }


       {
         findReplace {
           field: date_time
           pattern: "\""
           isRegex: false
           replacement: ""
           replaceFirst: false
         }
       }
       {
         findReplace {
           field: username
           pattern: "\""
           isRegex: false
           replacement: ""
           replaceFirst: false
         }
       }
       {
        findReplace {
          field: target_machine
          pattern: "\""
          isRegex: false
          replacement: ""
          replaceFirst: false
        }
      }
      {
        findReplace {
          field: normalized_src_machine
          pattern: "\""
          isRegex: false
          replacement: ""
          replaceFirst: false
        }
       }
      {
        findReplace {
          field: normalized_src_machine
          pattern: "\\\\"
          isRegex: false
          replacement: ""
          replaceFirst: false
        }
       }
      {
         findReplace {
           field: file_name
           pattern: "\""
           isRegex: false
           replacement: ""
           replaceFirst: false
         }
       }


    ]
  }
]