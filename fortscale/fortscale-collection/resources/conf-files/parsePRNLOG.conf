morphlines: [
  {
    id: prnLogParsing
    importCommands: ["org.kitesdk.morphline.**", "org.apache.solr.**", "fortscale.collection.morphlines.**"]
    commands: [

      {logDebug {format: "Debug -1 : {}", args: ["@{}"]}}

      # parse the raw message, extract all fields from the message, assuming the following format:
      # "2016-01-19T16:07:54.000+0200",set,PrintJob,"HP LaserJet Pro MFP M127-M128 PCLmS","TOMERD-LAP",tomerd,"C:\Users\tomerd\Desktop\processSecEvt4624_symantec.conf",tomerd,15,RAW,"MS_XPS_PROC",,"HP LaserJet Pro MFP M127-M128 PCLmS",spooling,1,1,925,"01/19/2016 14:07:53.995",0
      {
        split {
          inputField: message
          outputFields: [date_time, "", "", target_machine, source_ip, username, file_name, "", "", "", "", "", "", status, "", total_pages, file_size, "", ""]
          separator: ","
          isRegex: false
          addEmptyStrings: true
          trim: true
        }
      }

      {logDebug {format: "Debug -2 : {}", args: ["@{}"]}}
      {
        EmptyObjectFilter {
          filterFields: [date_time, username, source_ip, target_machine, file_name, total_pages, file_size]
        }
      }
      {logDebug {format: "Debug -3 : {}", args: ["@{}"]}}
      {
        java {
          imports: "import java.util.*;import java.lang.*;import fortscale.collection.monitoring.MorphlineCommandMonitoringHelper;"
          code: """
                        //conver totalPages to integer. Log if cannot
                        Object totalPages = record.getFirstValue("total_pages");
                        if (totalPages instanceof String){
                          int totalPagesInteger = Integer.parseInt((String)totalPages);
                          record.replaceValues("total_pages",totalPagesInteger);
                        } else {
                            MorphlineCommandMonitoringHelper commandMonitoringHelper = new MorphlineCommandMonitoringHelper();
                            commandMonitoringHelper.addFilteredEventToMonitoring(record, "total_pages is not a number");
                            return false;
                        }

                        //conver totalPages to integer. Log if cannot
                        Object fileSize = record.getFirstValue("file_size");
                        if (fileSize instanceof String){
                          int fileSizeInteger = Integer.parseInt((String)fileSize);
                          record.replaceValues("file_size",fileSizeInteger);
                        } else {
                            MorphlineCommandMonitoringHelper commandMonitoringHelper = new MorphlineCommandMonitoringHelper();
                            commandMonitoringHelper.addFilteredEventToMonitoring(record, "file_size is not a number");
                            return false;
                        }
						return child.process(record);
							"""
        }
      }
      {logDebug {format: "Debug -4 : {}", args: ["@{}"]}}
      {
        findReplace {
          field: date_time
          pattern: "\""
          isRegex: false
          replacement: ""
          replaceFirst: false
        }
      }
      {
        findReplace {
          field: username
          pattern: "\""
          isRegex: false
          replacement: ""
          replaceFirst: false
        }
      }
      {
        findReplace {
          field: target_machine
          pattern: "\""
          isRegex: false
          replacement: ""
          replaceFirst: false
        }
      }
      {
        findReplace {
          field: source_ip
          pattern: "\""
          isRegex: false
          replacement: ""
          replaceFirst: false
        }
      }
      {
        findReplace {
          field: source_ip
          pattern: "\\\\"
          isRegex: false
          replacement: ""
          replaceFirst: false
        }
      }
      {
        findReplace {
          field: file_name
          pattern: "\""
          isRegex: false
          replacement: ""
          replaceFirst: false
        }
      }
      {logDebug {format: "Debug -5 : {}", args: ["@{}"]}}
    ]
  }
]