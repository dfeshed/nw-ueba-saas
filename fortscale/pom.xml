<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>fortscale</groupId>
    <artifactId>fortscale</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>fortscale</name>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.3.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <repositories>
        <repository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>libs-releases</id>
            <name>libs-release</name>
            <url>http://mirror.fortscale.dom/artifactory/libs-release</url>
        </repository>
        <repository>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <id>libs-snapshots</id>
            <name>libs-snapshot</name>
            <url>http://mirror.fortscale.dom/artifactory/libs-snapshot</url>
        </repository>
        <repository>
            <!--
                 all remote repos are here: cloudera, spring, splunk, etc.
                 adding more:
                 1. login as artifactory admin
                 2. goto admin -> repositories
                 3. add new remote repository
                 4. edit remote-repos virtual repository:
                    4.1 add the new remote there
            -->
            <id>all-remotes</id>
            <name>remote-repos</name>
            <url>http://mirror.fortscale.dom/artifactory/remote-repos</url>
        </repository>

        <repository>
            <id>spring-libs-snapshot</id>
            <name>Spring Snapshot Repository</name>
            <url>http://repo.spring.io/libs-snapshot</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>releases</id>
            <name>plugins-release</name>
            <url>http://mirror.fortscale.dom/artifactory/plugins-release</url>
        </pluginRepository>
        <pluginRepository>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <id>snapshots</id>
            <name>plugins-snapshot</name>
            <url>http://mirror.fortscale.dom/artifactory/plugins-snapshot</url>
        </pluginRepository>
    </pluginRepositories>

    <!--<properties>-->
    <!---->
    <!--&lt;!&ndash; For spring boot &ndash;&gt;-->
    <!--<start-class>fortscale.FortscaleInputCoreApplication</start-class>-->
    <!--<spring.version>4.0.3.RELEASE</spring.version>-->
    <!--<spring.boot.version>1.5.3.RELEASE</spring.boot.version>-->
    <!--</properties>-->

    <properties>
        <java.version>1.8</java.version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!--RPM VERSION-->

        <rpm.version.major>1</rpm.version.major>
        <rpm.version.minor>0</rpm.version.minor>
        <rpm.version.build>0</rpm.version.build>
        <rpm.version>${rpm.version.major}.${rpm.version.minor}</rpm.version>

        <!-- NOTE: ALL dependencies' versions should be here -->
        <cglib.version>3.2.1</cglib.version>
        <influxdb.version>2.1</influxdb.version>
        <argparse4j.version>0.7.0</argparse4j.version>
        <spring-shell.version>1.1.0.RELEASE</spring-shell.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <junit.version>4.12</junit.version>
        <junitparams.version>1.0.2</junitparams.version>
        <jsonassert.version>1.2.3</jsonassert.version>
        <!--<mockito.version>1.9.0</mockito.version>-->
        <!--<springokito.version>1.0.9</springokito.version>-->

        <spring-data-hadoop.version>2.2.0.RELEASE</spring-data-hadoop.version>
        <fongo.version>2.1.0</fongo.version>
        <quartz.version>2.2.1</quartz.version>
        <perf4j.version>0.9.16</perf4j.version>

        <jackson.dataformat.version>2.2.3</jackson.dataformat.version>

        <test.exclude>nothingToExlude</test.exclude>
        <test.include>**/*Test.java</test.include>
        <test.groups></test.groups>
        <test.exgroup></test.exgroup>
        <test.int.exclude>nothingToExlude</test.int.exclude>
        <test.int.include>**/*TestInt.java</test.int.include>
        <test.int.groups></test.int.groups>
        <test.int.exgroups></test.int.exgroups>
        <guava.version>15.0</guava.version>
        <cloudera-manager-api.version>5.4.7</cloudera-manager-api.version>
        <!-- maven plugins versions -->
        <maven-download-plugin.version>1.1.0</maven-download-plugin.version>
        <maven-resources-plugin.version>3.0.2</maven-resources-plugin.version>
        <maven-dependency-plugin.version>2.8</maven-dependency-plugin.version>
        <aspectj-maven-plugin.version>1.8</aspectj-maven-plugin.version>
        <maven-compiler-plugin.version>3.5.1</maven-compiler-plugin.version>
        <mavanagaiata.version>0.7.0</mavanagaiata.version>
        <maven-jar-plugin.version>2.4</maven-jar-plugin.version>
        <maven-surefire-plugin.version>2.16</maven-surefire-plugin.version>
        <maven-source-plugin.version>2.1.1</maven-source-plugin.version>
        <maven-failsafe-plugin.version>2.16</maven-failsafe-plugin.version>
        <servlet-api.version>3.1.0</servlet-api.version>
        <java-lang-config.version>1.8</java-lang-config.version>
        <samza.version>0.9.1</samza.version>
        <scala.version>2.10.2</scala.version>
        <springretry.version>1.1.2.RELEASE</springretry.version>
        <kafka.version>0.8.2.1</kafka.version>
        <scala-kafka.version>2.10</scala-kafka.version>
        <hadoop.version>2.6.0-cdh5.4.8</hadoop.version>
        <hadoop-core.version>2.6.0-mr1-cdh5.4.8</hadoop-core.version>
        <hive.version>1.1.0-cdh5.4.8</hive.version>
        <pigunit.version>0.12.0-cdh5.4.8</pigunit.version>
        <pig.version>0.12.0-cdh5.4.8</pig.version>
        <json-smart.version>2.2.1</json-smart.version>
        <net.minidev.accessors-smart.version>1.1</net.minidev.accessors-smart.version>
        <esper-version>5.2.0</esper-version>
        <org.codehaus.mojo.version>1.4.0</org.codehaus.mojo.version>
        <cxf.version>3.1.0</cxf.version>

        <swager.version>2.2.2</swager.version>
        <!-- eclipse plugins versions -->

        <asm-commons.version>5.0.3</asm-commons.version>
        <janino.version>2.5.15</janino.version>
        <perf4j.version>0.9.7</perf4j.version>
        <jade4j.version>1.1.4</jade4j.version>
        <commons-jexl.version>1.1</commons-jexl.version>

        <commons-httpclient.version>3.0.1</commons-httpclient.version>
        <commons-lang.version>2.6</commons-lang.version>
        <org-json.version>20140107</org-json.version>
        <commons-lang3.version>3.5</commons-lang3.version>
        <commons-pool.version>1.4</commons-pool.version>
        <commons-codec.version>1.9</commons-codec.version>
        <h2.version>1.4.193</h2.version>
        <joda-time.version>2.3</joda-time.version>

        <syslog-java-client.version>1.0.6</syslog-java-client.version>
        <commons-validator.version>1.4.1</commons-validator.version>
        <jacoco-maven-plugin.version>0.7.9</jacoco-maven-plugin.version>
        <cron-utils.version>5.0.5</cron-utils.version>
        <podam.version>7.0.5.RELEASE</podam.version>
        <spring-cloud.version>Dalston.SR1</spring-cloud.version>
        <rpm-maven-plugin.version>2.1.5</rpm-maven-plugin.version>
        <spring-actuator-aop.version>1.5.4.RELEASE</spring-actuator-aop.version>
        <org.aspectj-version>1.8.7</org.aspectj-version>
        <metrics-core.version>3.0.2</metrics-core.version>
        <spring-cloud-task-starter.version>1.1.0.M1</spring-cloud-task-starter.version>
        <elasticsearch.version>5.4.0</elasticsearch.version>
        <spring-data-elasticsearch.version>2.1.4.RELEASE</spring-data-elasticsearch.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>presidio-test-utils</groupId>
                <artifactId>presidio-data-generators</artifactId>
                <version>0.0.1-SNAPSHOT</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-actuator</artifactId>
                <version>${spring-actuator-aop.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-aop</artifactId>
                <version>${spring-actuator-aop.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>pl.pragmatists</groupId>
                <artifactId>JUnitParams</artifactId>
                <version>${junitparams.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.skyscreamer</groupId>
                <artifactId>jsonassert</artifactId>
                <version>${jsonassert.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>jdk.tools</groupId>
                <artifactId>jdk.tools</artifactId>
                <version>${jav-lang-config.version}</version>
                <scope>system</scope>
                <systemPath>${java.home}/../lib/tools.jar</systemPath>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${servlet-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm-commons</artifactId>
                <version>${asm-commons.version}</version>
            </dependency>
            <!-- mockito unit test mocking framework -->
            <!--<dependency>-->
            <!--<groupId>org.mockito</groupId>-->
            <!--<artifactId>mockito-all</artifactId>-->
            <!--<version>${mockito.version}</version>-->
            <!--<scope>test</scope>-->
            <!--</dependency>-->
            <!--<dependency>-->
            <!--<groupId>org.kubek2k</groupId>-->
            <!--<artifactId>springockito</artifactId>-->
            <!--<version>${springokito.version}</version>-->
            <!--<scope>test</scope>-->
            <!--</dependency>-->
            <!--<dependency>-->
            <!--<groupId>org.kubek2k</groupId>-->
            <!--<artifactId>springockito-annotations</artifactId>-->
            <!--<version>${springokito.version}</version>-->
            <!--<scope>test</scope>-->
            <!--</dependency>-->
            <!-- mock framework for mongodb -->
            <dependency>
                <groupId>com.github.fakemongo</groupId>
                <artifactId>fongo</artifactId>
                <version>${fongo.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-hadoop</artifactId>
                <version>${spring-data-hadoop.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>javax.servlet</groupId>
                        <artifactId>servlet-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>


            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-csv</artifactId>
                <version>${jackson.dataformat.version}</version>
            </dependency>


            <!--quartz-->
            <dependency>
                <groupId>org.quartz-scheduler</groupId>
                <artifactId>quartz</artifactId>
                <version>${quartz.version}</version>
            </dependency>
            <dependency>
                <groupId>org.quartz-scheduler</groupId>
                <artifactId>quartz-jobs</artifactId>
                <version>${quartz.version}</version>
            </dependency>


            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjrt</artifactId>
                <version>${org.aspectj-version}</version>
            </dependency>

            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>${org.aspectj-version}</version>
            </dependency>

            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjtools</artifactId>
                <version>${org.aspectj-version}</version>
            </dependency>

            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swager.version}</version>
            </dependency>

            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swager.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.persistence</groupId>
                <artifactId>persistence-api</artifactId>
                <version>1.0</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>1.7.2</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>net.minidev</groupId>
                <artifactId>json-smart</artifactId>
                <version>2.2.1</version>
            </dependency>
            <dependency>
                <groupId>net.sourceforge.argparse4j</groupId>
                <artifactId>argparse4j</artifactId>
                <version>${argparse4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.shell</groupId>
                <artifactId>spring-shell</artifactId>
                <version>${spring-shell.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>cglib</artifactId>
                        <groupId>cglib</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.influxdb</groupId>
                <artifactId>influxdb-java</artifactId>
                <version>${influxdb.version}</version>
            </dependency>
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda-time.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${commons-lang.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-pool</groupId>
                <artifactId>commons-pool</artifactId>
                <version>${commons-pool.version}</version>
            </dependency>
            <dependency>
                <groupId>org.json</groupId>
                <artifactId>json</artifactId>
                <version>${org-json.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.janino</groupId>
                <artifactId>janino</artifactId>
                <version>${janino.version}</version>
            </dependency>
            <dependency>
                <groupId>org.perf4j</groupId>
                <artifactId>perf4j</artifactId>
                <version>${perf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-jexl</groupId>
                <artifactId>commons-jexl</artifactId>
                <version>${commons-jexl.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-httpclient</groupId>
                <artifactId>commons-httpclient</artifactId>
                <version>${commons-httpclient.version}</version>
            </dependency>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scala.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.retry</groupId>
                <artifactId>spring-retry</artifactId>
                <version>${springretry.version}</version>
            </dependency>
            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib</artifactId>
                <version>${cglib.version}</version>
            </dependency>
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2.version}</version>
            </dependency>
            <dependency>
                <groupId>de.neuland-bfi</groupId>
                <artifactId>jade4j</artifactId>
                <version>${jade4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka_${scala-kafka.version}</artifactId>
                <version>${kafka.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>log4j</artifactId>
                        <groupId>log4j</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jmxri</artifactId>
                        <groupId>com.sun.jmx</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jmxtools</artifactId>
                        <groupId>com.sun.jdmk</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jms</artifactId>
                        <groupId>javax.jms</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>zookeeper</artifactId>
                        <groupId>org.apache.zookeeper</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.cloudbees</groupId>
                <artifactId>syslog-java-client</artifactId>
                <version>${syslog-java-client.version}</version>
            </dependency>
            <dependency>
                <groupId>com.cloudera.api</groupId>
                <artifactId>cloudera-manager-api</artifactId>
                <version>5.4.7</version>
                <exclusions>
                    <exclusion>
                        <artifactId>cxf-rt-frontend-jaxrs</artifactId>
                        <groupId>org.apache.cxf</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>javax.servlet-api</artifactId>
                        <groupId>javax.servlet</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>servlet-api</artifactId>
                        <groupId>javax.servlet</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jsp-api</artifactId>
                        <groupId>javax.servlet.jsp</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>servlet-api-2.5</artifactId>
                        <groupId>org.mortbay.jetty</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>commons-validator</groupId>
                <artifactId>commons-validator</artifactId>
                <version>${commons-validator.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>com.cronutils</groupId>
                <artifactId>cron-utils</artifactId>
                <version>${cron-utils.version}</version>
            </dependency>
            <dependency>
                <groupId>uk.co.jemos.podam</groupId>
                <artifactId>podam</artifactId>
                <version>${podam.version}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch</groupId>
                <artifactId>elasticsearch</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>transport</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-elasticsearch</artifactId>
                <version>${spring-data-elasticsearch.version}</version>
            </dependency>
        </dependencies>

    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-access</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>

        <!--  for JSON provider -->
        <!--<dependency>-->
        <!--<groupId>org.apache.cxf</groupId>-->
        <!--<artifactId>cxf-core</artifactId>-->
        <!--<version>${cxf.version}</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>org.apache.cxf</groupId>-->
        <!--<artifactId>cxf-rt-rs-extension-providers</artifactId>-->
        <!--<version>${cxf.version}</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>org.apache.cxf</groupId>-->
        <!--<artifactId>cxf-rt-rs-client</artifactId>-->
        <!--<version>${cxf.version}</version>-->
        <!--</dependency>-->
    </dependencies>

    <build>
        <plugins>
            <!-- Tells maven to use the Java 8 JDK instead of its default -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java-lang-config.version}</source>
                    <target>${java-lang-config.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <!-- code coverage plugin-->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <executions>
                    <!--
                        Prepares the property pointing to the JaCoCo runtime agent which
                        is passed as VM argument when Maven the Surefire plugin is executed.
                    -->
                    <execution>
                        <id>pre-unit-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
                            <!--
                                Sets the name of the property containing the settings
                                for JaCoCo runtime agent.
                            -->
                            <propertyName>surefireArgLine</propertyName>
                        </configuration>
                    </execution>
                    <!--
                        Ensures that the code coverage report for unit tests is created after
                        unit tests have been run.
                    -->
                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                            <!-- Sets the output directory for the code coverage report. -->
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.github.koraktor</groupId>
                <artifactId>mavanagaiata</artifactId>
                <version>${mavanagaiata.version}</version>
                <executions>
                    <execution>
                        <id>git-commit</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>commit</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-plugin.version}</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <classpathLayoutType>repository</classpathLayoutType>
                        </manifest>
                        <manifestEntries>
                            <version>${project.version}</version>
                            <git-commit-id>${mvngit.commit.id}</git-commit-id>
                        </manifestEntries>

                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-junit47</artifactId>
                        <version>${maven-surefire-plugin.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <!-- Sets the VM argument line used when unit tests are run. -->
                    <argLine>${surefireArgLine}</argLine>
                    <excludes>
                        <exclude>${test.exclude}</exclude>
                    </excludes>
                    <includes>
                        <include>${test.include}</include>
                    </includes>
                    <groups>${test.groups}</groups>
                    <excludedGroups>${test.exgroup}</excludedGroups>
                </configuration>
                <executions>
                    <execution>
                        <id>default-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-junit47</artifactId>
                        <version>${maven-surefire-plugin.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <!-- Sets the VM argument line used when integration tests are run. -->
                    <argLine>${failsafeArgLine}</argLine>
                    <systemPropertyVariables>
                        <org.quartz.properties>resources/jobs/quartz.properties</org.quartz.properties>
                    </systemPropertyVariables>
                    <excludes>
                        <exclude>${test.int.exclude}</exclude>
                    </excludes>
                    <includes>
                        <include>${test.int.include}</include>
                    </includes>
                    <groups>${test.int.groups}</groups>
                    <excludedGroups>${test.int.exgroups}</excludedGroups>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <!-- ignore copy dependencies plugin in m2e as it is not supported -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>com.github.koraktor</groupId>
                                        <artifactId>mavanagaiata</artifactId>
                                        <versionRange>[0.7.0,)</versionRange>
                                        <goals>
                                            <goal>commit</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <modules>
        <module>presidio-utils</module>
        <module>presidio-common</module>
        <module>presidio-monitoring</module>
        <module>presidio-global-config</module>
        <module>presidio-domain</module>
        <module>presidio-ade-domain</module>
        <module>presidio-ml</module>
        <module>presidio-services</module>
        <module>presidio-aggregation</module>
        <module>presidio-ade</module>
        <module>presidio-monitoring-daemons</module>
        <module>presidio-input</module>
        <module>presidio-adapter</module>
        <module>presidio-output</module>
        <module>presidio-configuration-server</module>
        <module>presidio-manager</module>


    </modules>

    <profiles>
        <profile>
            <id>rpm</id>
            <modules>
                <module>presidio-rpm</module>
            </modules>
        </profile>
    </profiles>

    <distributionManagement>
        <!-- push changes to artifactory, distribute use of sdk -->
        <snapshotRepository>
            <id>mirror.fortscale.dom</id>
            <name>mirror.fortscale.dom-snapshots</name>
            <url>http://mirror.fortscale.dom/artifactory/presidio-snapshot-local</url>
        </snapshotRepository>
    </distributionManagement>
</project>
