<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>fortscale</groupId>
		<artifactId>fortscale</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>

	<artifactId>fortscale-streaming</artifactId>
	<name>fortscale-streaming</name>
	<description>data streaming processing</description>
	<packaging>jar</packaging>

	<repositories>
		<repository>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>libs-releases</id>
			<name>libs-release</name>
			<url>http://mirror.fortscale.dom:8082/artifactory/libs-release</url>
		</repository>
		<repository>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<id>libs-snapshots</id>
			<name>libs-snapshot</name>
			<url>http://mirror.fortscale.dom:8082/artifactory/libs-snapshot</url>
		</repository>
		<repository>
			<!-- all remote repos are here: cloudera, spring, splunk, etc. adding 
				more: 1. login as artifactory admin 2. goto admin -> repositories 3. add 
				new remote repository 4. edit remote-repos virtual repository: 4.1 add the 
				new remote there -->
			<id>all-remotes</id>
			<name>remote-repos</name>
			<url>http://mirror.fortscale.dom:8082/artifactory/remote-repos</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>releases</id>
			<name>plugins-release</name>
			<url>http://mirror.fortscale.dom:8082/artifactory/plugins-release</url>
		</pluginRepository>
		<pluginRepository>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<id>snapshots</id>
			<name>plugins-snapshot</name>
			<url>http://mirror.fortscale.dom:8082/artifactory/plugins-snapshot</url>
		</pluginRepository>
	</pluginRepositories>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<junit.version>4.8.2</junit.version>
		<junitparams.version>1.0.2</junitparams.version>
		<mockito.version>1.9.5</mockito.version>
		<org.springframework-version>3.2.0.RELEASE</org.springframework-version>
		<spring-data-mongodb.version>1.3.2.RELEASE</spring-data-mongodb.version>
		<org.aspectj-version>1.7.3</org.aspectj-version>
		<guava.version>15.0</guava.version>
		<kafka.version>0.8.1.1</kafka.version>
		<scala.version>2.10.2</scala.version>
		<json-smart.version>1.2</json-smart.version>
		<samza.version>0.7.0</samza.version>
		<slf4j.version>1.7.2</slf4j.version>
		<logback.version>1.0.13</logback.version>
		<!-- maven plugins versions -->
		<aspectj-maven-plugin.version>1.5</aspectj-maven-plugin.version>
		<maven-compiler-plugin.version>2.5.1</maven-compiler-plugin.version>
		<maven-jar-plugin.version>2.4</maven-jar-plugin.version>
		<maven-resources-plugin.version>2.6</maven-resources-plugin.version>
		<maven-dependency-plugin.version>2.8</maven-dependency-plugin.version>
		<maven-assembly-plugin.version>2.4</maven-assembly-plugin.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka_2.10</artifactId>
			<version>${kafka.version}</version>
			<exclusions>
				<exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- scala library required for kafka client -->
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>${scala.version}</version>
		</dependency>

		<!-- json parsing library -->
		<dependency>
			<groupId>net.minidev</groupId>
			<artifactId>json-smart</artifactId>
			<version>${json-smart.version}</version>
		</dependency>

		<!-- samza dependencies -->
		<dependency>
			<groupId>org.apache.samza</groupId>
			<artifactId>samza-api</artifactId>
			<version>${samza.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.samza</groupId>
			<artifactId>samza-kv_2.10</artifactId>
			<version>${samza.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.samza</groupId>
			<artifactId>samza-core_2.10</artifactId>
			<version>${samza.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.samza</groupId>
			<artifactId>samza-serializers_2.10</artifactId>
			<version>${samza.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.samza</groupId>
			<artifactId>samza-shell</artifactId>
			<classifier>dist</classifier>
			<type>tgz</type>
			<version>${samza.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.samza</groupId>
			<artifactId>samza-yarn_2.10</artifactId>
			<version>${samza.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.samza</groupId>
			<artifactId>samza-kafka_2.10</artifactId>
			<version>${samza.version}</version>
		</dependency>

		<!-- test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>pl.pragmatists</groupId>
			<artifactId>JUnitParams</artifactId>
			<version>${junitparams.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Spring dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-mongodb</artifactId>
			<version>${spring-data-mongodb.version}</version>
		</dependency>

		<!-- fortscale dependencies -->
		<dependency>
			<groupId>fortscale</groupId>
			<artifactId>fortscale-global-config</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>fortscale</groupId>
			<artifactId>fortscale-utils</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>fortscale</groupId>
			<artifactId>fortscale-domain</artifactId>
			<version>${project.version}</version>
		</dependency>


		<!-- javax persistence needed by aspectj compile time depenceny injection 
			with spring [SPR-6819] -->
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<version>1.0</version>
			<scope>provided</scope>
		</dependency>


		<!--  slf4j logger -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback.version}</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<!-- Tells maven to use the Java 7 JDK instead of its default -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${java-lang-config.version}</source>
					<target>${java-lang-config.version}</target>
				</configuration>
			</plugin>
			<!-- Use aspectj compile load weaver to inject spring bean into non managed 
				beans -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>aspectj-maven-plugin</artifactId>
				<version>${aspectj-maven-plugin.version}</version>
				<configuration>
					<source>${java-lang-config.version}</source>
					<target>${java-lang-config.version}</target>
					<complianceLevel>${java-lang-config.version}</complianceLevel>
					<showWeaveInfo>false</showWeaveInfo>
					<aspectLibraries>
						<aspectLibrary>
							<groupId>org.springframework</groupId>
							<artifactId>spring-aspects</artifactId>
						</aspectLibrary>
					</aspectLibraries>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>test-compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- create jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven-jar-plugin.version}</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<classpathLayoutType>simple</classpathLayoutType>
							<useUniqueVersions>false</useUniqueVersions>
						</manifest>
						<manifestEntries>
							<version>${project.parent.version}</version>
							<git-commit-id>${mvngit.commit.id}</git-commit-id>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<!-- here the phase you need (allows mvn compile to work) -->
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/resources</outputDirectory>
							<resources>
								<resource>
									<directory>resources</directory>
									<filtering>true</filtering>
								</resource>
								<resource>
									<directory>src/main/resources</directory>
									<includes>
										<include>logback.xml</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${maven-dependency-plugin.version}</version>
				<executions>
					<!-- copy dependencies to target lib folder -->
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>target\lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!-- ignore copy dependencies plugin in m2e as it is not supported -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.8,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>aspectj-maven-plugin</artifactId>
										<versionRange>[1.5,)</versionRange>
										<goals>
											<goal>test-compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<!-- plugin to build the tar.gz file filled with examples -->
				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven-assembly-plugin.version}</version>
					<configuration>
						<outputDirectory>deploy</outputDirectory>
						<descriptors>
							<descriptor>src/main/assembly/src.xml</descriptor>
						</descriptors>
					</configuration>
					<executions>
						<execution>
							<id>make-assembly</id>
							<phase>package</phase>
							<goals>
								<goal>single</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
