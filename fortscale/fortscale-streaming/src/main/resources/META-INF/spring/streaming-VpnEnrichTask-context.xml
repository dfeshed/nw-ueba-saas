<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:mongo="http://www.springframework.org/schema/data/mongo"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <import resource="classpath*:META-INF/spring/fortscale-global-config-context.xml"/>
    <import resource="classpath*:META-INF/spring/fortscale-common-context.xml"/>
    <import resource="classpath*:META-INF/spring/fortscale-domain-context.xml"/>
    <import resource="classpath*:META-INF/spring/monitor-context.xml" />
    <import resource="classpath*:META-INF/spring/fortscale-ml-context.xml"/>
    <import resource="classpath*:META-INF/spring/fortscale-streaming-context.xml" />


    <bean id="impalaWriterFactory" class="fortscale.services.impl.ImpalaWriterFactoryImpl"/>

    <context:spring-configured />
    <context:annotation-config />
    <context:component-scan base-package="fortscale.domain,fortscale.global,fortscale.utils,fortscale.services.event,fortscale.services.notifications,fortscale.streaming"/>

    <bean class="fortscale.services.impl.UserSupportingInformationServiceImpl"/>
    <bean class="fortscale.services.impl.EvidencesServiceImpl"/>

  <!--  <bean id="samAccountNameService" class="fortscale.services.impl.SamAccountNameService" scope="prototype"/>
    <bean id="usernameService" class="fortscale.services.impl.UsernameService" scope="prototype"/>
    <bean id="userService" class="fortscale.services.impl.UserServiceImpl" scope="prototype"/>

    <bean id="usernameToUserIdCache" class="fortscale.services.cache.MemoryBasedCache">
        <constructor-arg name="maxSize" value="${username.service.cache.max.items:10000}" />
        <constructor-arg name="timeToExpire" value="${username.service.cache.timeToExpireSec:0}" />
        <constructor-arg name="clazz" value="java.lang.String" />
    </bean>


    <bean id="dNToUserName" class="fortscale.services.cache.MemoryBasedCache">
        <constructor-arg name="maxSize" value="${username.service.cache.max.items:10000}" />
        <constructor-arg name="timeToExpire" value="${username.service.cache.timeToExpireSec:0}" />
        <constructor-arg name="clazz" value="java.lang.String" />
    </bean>

     username service cache that uses memory based implementation are injected here
    <bean id="sAMAccountNameToUsernameCache" class="fortscale.services.cache.MemoryBasedCache">
        <constructor-arg name="maxSize" value="${username.service.cache.max.items:10000}" />
        <constructor-arg name="timeToExpire" value="${username.service.cache.timeToExpireSec:0}" />
        <constructor-arg name="clazz" value="java.util.ArrayList"/>
    </bean>

    <bean id="sAMAccountNamethatBlackList" class="fortscale.services.cache.MemoryBasedCache">
        <constructor-arg name="maxSize" value="${samaccountname.service.blacklist.cache.max.items=30000:30000}" />
        <constructor-arg name="timeToExpire" value="${samaccountname.service.blacklist.timeToExpireSec:21600}" />
        <constructor-arg name="clazz" value="java.lang.String" />
    </bean>


    <bean id="userTagsCache" class="fortscale.services.cache.MemoryBasedCache">
        <constructor-arg name="maxSize" value="${username.service.cache.max.items:10000}" />
        <constructor-arg name="timeToExpire" value="${username.service.cache.timeToExpireSec:0}" />
        <constructor-arg name="clazz" value="java.lang.String" />
    </bean>

    <bean id="adGroupsCache" class="fortscale.services.cache.MemoryBasedCache">
        <constructor-arg name="maxSize" value="${adgroups.resolver.cache.max.items:30000}" />
        <constructor-arg name="timeToExpire" value="${adgroups.resolver.blacklist.timeToExpireSec:3600}" />
        <constructor-arg name="clazz" value="org.apache.commons.lang3.Range" />
    </bean>-->


    <!-- Geolocation service -->
    <bean id="ipToLocationGeoIPService" class="fortscale.geoip.IpToLocationGeoIPService">
        <constructor-arg name="geoIpDbResource" value="file:${ip.to.location.db.full.path}"/>
        <constructor-arg name="geoIpV6DbResource" value="file:${ip.to.location.db.full.path}"/>
        <constructor-arg name="fullLicenseKeyResource" value="file:${ip.to.location.license.key.full.path}"/>
    </bean>
    <bean id="fortscaleGeoIpService" class="fortscale.services.geoIp.FortscaleGeoIpService"/>
    <bean id="multiProviderGeoIpService" class="fortscale.services.geoIp.MultiProviderGeoIpService"/>
</beans>
