# Job
job.factory.class=org.apache.samza.job.local.LocalJobFactory
job.name=service-account-tagging

# Task
task.class=fortscale.streaming.task.AccountTaggingTask
task.inputs=kafka.fortscale-service-account-tagging-structured
# export the state to mongodb every 15 minutes (15*60*1000=900000ms)
task.window.ms=900000


# Fortscale specific task config parameters
fortscale.username.field=normalized_username
fortscale.timestamp.field=timeGeneratedUnixTime
fortscale.sourceHostName.field =normalized_src_machine
fortscale.sourceComputerType.field =src_class
fortscale.destHostName.field = normalized_dst_machine
fortscale.destComputerType.field = dst_class
fortscale.isServiceAccount.field = isUserServiceAccount
fortscale.failureCode.field = failure_code
fortscale.isSensetiveMachine.field = is_sensitive_machine
fortscale.daysBack = 30





#store
fortscale.store.name=service-account-tagging-stats


# Serializers
serializers.registry.json.class=org.apache.samza.serializers.JsonSerdeFactory
serializers.registry.string.class=org.apache.samza.serializers.StringSerdeFactory
serializers.registry.integer.class=org.apache.samza.serializers.IntegerSerdeFactory
serializers.registry.jsonmodel.class=fortscale.streaming.serialization.AccountStateSerdeFactory
serializers.registry.metrics.class=org.apache.samza.serializers.MetricsSnapshotSerdeFactory


# Metric report every 60 seconds to a kafka topic called metrics and as a jmx bean
metrics.reporter.snapshot.class=org.apache.samza.metrics.reporter.MetricsSnapshotReporterFactory
metrics.reporter.jmx.class=org.apache.samza.metrics.reporter.JmxReporterFactory
metrics.reporter.snapshot.stream=kafka.metrics
systems.kafka.streams.metrics.samza.msg.serde=metrics
metrics.reporters=snapshot,jmx