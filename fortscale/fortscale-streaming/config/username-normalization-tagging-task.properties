# Job
job.factory.class=fortscale.streaming.GracefulShutdownLocalJobFactory
job.name=username-normalization-tagging-task

# Task
task.class=fortscale.streaming.task.enrichment.UsernameNormalizationAndTaggingTask
task.inputs=kafka.user-tag-service-cache-updates,kafka.samaccountname-service-cache-updates,kafka.username-service-cache-updates,kafka.fortscale-vpn-structured,kafka.fortscale-ssh-ip-resolved,kafka.fortscale-4769-structured,kafka.fortscale-4768-structured,kafka.fortscale-amt-fields-tagged

task.window.ms=-1

### Fortscale specific task config parameters

# map cache logic name into topic and store name
fortscale.username.service.cache.store=username-service-cache
fortscale.username.service.cache.topic=username-service-cache-updates
fortscale.samAccountName.service.cache.store=samaccountname-service-cache
fortscale.samAccountName.service.cache.topic=samaccountname-service-cache-updates
fortscale.user-tag.service.cache.store=user-tag-service-cache
fortscale.user-tag.service.cache.topic=user-tag-service-cache-updates

# Spring Context
fortscale.context=classpath*:META-INF/spring/streaming-TaggingTask-context.xml

#tags
fortscale.tags.admin=isUserAdministrator
fortscale.tags.executive=isUserExecutive
fortscale.tags.service=isUserServiceAccount
fortscale.tags.LR=LR

# Mapping between input topic and data source configuration
# 4769
fortscale.events.input.topic.4769=fortscale-4769-structured
fortscale.events.output.topic.4769=fortscale-4769-normalized-tagged-event
fortscale.events.username.field.4769=account_name
fortscale.events.domain.field.4769=account_domain
fortscale.events.normalizedusername.field.4769=normalized_username
fortscale.events.partition.field.4769=impala.data.security.events.4769.table.morphline.fields.username
fortscale.events.normalization.service.4769=SecurityUsernameNormalizationService
fortscale.events.classifier.4769=login
fortscale.events.updateOnly.4769=true

# 4768
fortscale.events.input.topic.4768=fortscale-4768-structured
fortscale.events.output.topic.4768=fortscale-4768-normalized-tagged-event
fortscale.events.username.field.4768=account_name
fortscale.events.domain.field.4768=account_domain
fortscale.events.normalizedusername.field.4768=normalized_username
fortscale.events.partition.field.4768=impala.data.security.events.login.table.field.account_name
fortscale.events.normalization.service.4768=SecurityUsernameNormalizationService
fortscale.events.classifier.4768=login
fortscale.events.updateOnly.4768=true
# SSH
fortscale.events.input.topic.ssh=fortscale-ssh-ip-resolved
fortscale.events.output.topic.ssh=fortscale-ssh-normalized-tagged-event
fortscale.events.username.field.ssh=username
fortscale.events.domain.field.ssh=target_machine
fortscale.events.normalizedusername.field.ssh=normalized_username
fortscale.events.partition.field.ssh=impala.data.ssh.table.field.username
fortscale.events.normalization.service.ssh=SshUsernameNormalizationService
fortscale.events.classifier.ssh=ssh
fortscale.events.updateOnly.ssh=false
# vpn
fortscale.events.input.topic.vpn=fortscale-vpn-structured
fortscale.events.output.topic.vpn=fortscale-vpn-normalized-tagged-event
fortscale.events.username.field.vpn=username
fortscale.events.domain.field.vpn=fake
fortscale.events.domain.fake.vpn=vpnConnect
fortscale.events.normalizedusername.field.vpn=normalized_username
fortscale.events.partition.field.vpn=impala.data.vpn.table.field.username
fortscale.events.normalization.service.vpn=VpnUsernameNormalizationService
fortscale.events.classifier.vpn=vpn
fortscale.events.updateOnly.vpn=false
#AMT
fortscale.events.input.topic.amt=fortscale-amt-fields-tagged
fortscale.events.output.topic.amt=fortscale-amt-normalized-tagged-event
fortscale.events.username.field.amt=username
fortscale.events.domain.field.amt=fake
fortscale.events.domain.fake.amt=amtConnect
fortscale.events.normalizedusername.field.amt=normalized_username
fortscale.events.partition.field.amt=impala.data.amt.table.field.username
fortscale.events.normalization.service.amt=AMTUsernameNormalizationService
fortscale.events.classifier.amt=amt
fortscale.events.updateOnly.amt=false

#Generic data sources
#---------------------
fortscale.events.input.topic.gen1=fortscale-generic-data-source-structured
fortscale.events.output.topic.gen1=fortscale-generic-data-source-normalized-tagged-event
fortscale.events.username.field.gen1=username
fortscale.events.domain.field.gen1=fake
fortscale.events.domain.fake.gen1=genericDataSourceConnect
fortscale.events.normalizedusername.field.gen1=normalized_username
fortscale.events.partition.field.gen1=impala.data.amt.table.field.username
fortscale.events.normalization.service.gen1=AMTUsernameNormalizationService
fortscale.events.classifier.gen1=amt
fortscale.events.updateOnly.gen1=false

fortscale.events.input.topic.gen2=fortscale-generic-data-source-structured
fortscale.events.output.topic.gen2=fortscale-generic-data-source-normalized-tagged-event
fortscale.events.username.field.gen2=username
fortscale.events.domain.field.gen2=fake
fortscale.events.domain.fake.gen2=genericDataSourceConnect
fortscale.events.normalizedusername.field.gen2=normalized_username
fortscale.events.partition.field.gen2=impala.data.amt.table.field.username
fortscale.events.normalization.service.gen2=AMTUsernameNormalizationService
fortscale.events.classifier.gen2=amt
fortscale.events.updateOnly.gen2=false

############

# Serializers
serializers.registry.json.class=org.apache.samza.serializers.JsonSerdeFactory
serializers.registry.string.class=org.apache.samza.serializers.StringSerdeFactory
serializers.registry.integer.class=org.apache.samza.serializers.IntegerSerdeFactory
serializers.registry.metrics.class=org.apache.samza.serializers.MetricsSnapshotSerdeFactory


# Metric report every 60 seconds to a kafka topic called metrics and as a monitor report
metrics.reporter.snapshot.class=org.apache.samza.metrics.reporter.MetricsSnapshotReporterFactory
metrics.reporter.snapshot.stream=kafka.metrics
systems.kafka.streams.metrics.samza.msg.serde=metrics
metrics.reporters=snapshot


# Systems
systems.kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
systems.kafka.samza.msg.serde=string
systems.kafka.samza.key.serde=string
systems.kafka.samza.offset.default=oldest
systems.kafka.consumer.zookeeper.connect=localhost:2181
systems.kafka.consumer.auto.offset.reset=smallest
systems.kafka.producer.metadata.broker.list=localhost:9092
systems.kafka.producer.producer.type=sync
systems.kafka.producer.retry.backoff.ms = 10000
systems.kafka.producer.acks = 1
systems.kafka.producer.reconnect.backoff.ms = 10000
systems.kafka.producer.partitioner.class=fortscale.utils.kafka.partitions.StringHashPartitioner
systems.kafka.producer.queue.buffering.max.ms=2000
systems.kafka.producer.batch.num.messages=1000


# Declare that we want our job's checkpoints to be enabled and written to Kafka
task.checkpoint.factory=org.apache.samza.checkpoint.kafka.KafkaCheckpointManagerFactory
task.checkpoint.replication.factor=1
task.checkpoint.system=kafka

# topic priorities for cache updates should be higher than those for the events topics
systems.kafka.streams.username-service-samaccountname-cache-updates.samza.priority=100
systems.kafka.streams.username-service-cache-updates.samza.priority=100
systems.kafka.streams.user-tags-service-cache-updates.samza.priority=100
systems.kafka.streams.fortscale-vpn-structured.samza.priority=1
systems.kafka.streams.fortscale-ssh-structured.samza.priority=1
systems.kafka.streams.fortscale-4769-structured.samza.priority=1
systems.kafka.streams.fortscale-4768-structured.samza.priority=1

# Key-value storage for username-cache
stores.username-service-cache.factory=org.apache.samza.storage.kv.KeyValueStorageEngineFactory
stores.username-service-cache.changelog=kafka.username-service-cache-changelog
stores.username-service-cache.key.serde=string
stores.username-service-cache.msg.serde=json
stores.username-service-cache.write.batch.size=25
stores.username-service-cache.object.cache.size=200000
stores.username-service-cache.container.cache.size.bytes=52428800
stores.username-service-cache.container.write.buffer.size.bytes=102400


# Key-value storage for user-tag-cache
stores.user-tag-service-cache.factory=org.apache.samza.storage.kv.KeyValueStorageEngineFactory
stores.user-tag-service-cache.changelog=kafka.user-tag-service-cache-changelog
stores.user-tag-service-cache.key.serde=string
stores.user-tag-service-cache.msg.serde=json
stores.user-tag-service-cache.write.batch.size=25
stores.user-tag-service-cache.object.cache.size=200000
stores.user-tag-service-cache.container.cache.size.bytes=52428800
stores.user-tag-service-cache.container.write.buffer.size.bytes=102400

# Key-value storage for username-service-samaccountname-cache
stores.samaccountname-service-cache.factory=org.apache.samza.storage.kv.KeyValueStorageEngineFactory
stores.samaccountname-service-cache.changelog=kafka.samaccountname-service-cache-changelog
stores.samaccountname-service-cache.key.serde=string
stores.samaccountname-service-cache.msg.serde=json
stores.samaccountname-service-cache.write.batch.size=25
stores.samaccountname-service-cache.object.cache.size=200000
stores.samaccountname-service-cache.container.cache.size.bytes=52428800
stores.samaccountname-service-cache.container.write.buffer.size.bytes=102400
