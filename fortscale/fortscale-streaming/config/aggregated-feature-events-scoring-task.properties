########################################################################################################################
# Job
########################################################################################################################
job.factory.class=fortscale.streaming.GracefulShutdownLocalJobFactory
job.shutdown.timeout.ms=300000
job.name=aggregated-feature-events-scoring-task

########################################################################################################################
# Task
########################################################################################################################
task.class=fortscale.streaming.task.ScoringTask
task.inputs=kafka.fortscale-aggregated-feature-f-event
task.window.ms=-1

########################################################################################################################
# Fortscale specific task config parameters
########################################################################################################################
fortscale.context=classpath*:META-INF/spring/streaming-aggregated-feature-events-scoring-context.xml
fortscale.monitoring.enable=true
fortscale.timestamp.field=date_time_unix
fortscale.scorer.configurations.location.path=classpath:config/asl/scorers/aggregation-events/*.json
fortscale.scorer.configurations.location.additional.path=file:${fortscale.home.dir}/config/asl/scorers/aggregation-events/additional/*.json
fortscale.scorer.configurations.location.overriding.path=file:${fortscale.home.dir}/config/asl/scorers/aggregation-events/*.json

########################################################################################################################
# Serializers
########################################################################################################################
serializers.registry.json.class=org.apache.samza.serializers.JsonSerdeFactory
serializers.registry.string.class=org.apache.samza.serializers.StringSerdeFactory
serializers.registry.integer.class=org.apache.samza.serializers.IntegerSerdeFactory
serializers.registry.metrics.class=org.apache.samza.serializers.MetricsSnapshotSerdeFactory
serializers.registry.jsonmodel.class=fortscale.streaming.serialization.ModelsCacheInfoSerdeFactory

########################################################################################################################
# Metrics
########################################################################################################################
metrics.reporter.snapshot.class=org.apache.samza.metrics.reporter.MetricsSnapshotReporterFactory
metrics.reporter.snapshot.stream=kafka.metrics
systems.kafka.streams.metrics.samza.msg.serde=metrics
metrics.reporters=snapshot

########################################################################################################################
# Systems
########################################################################################################################
systems.kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
systems.kafka.samza.msg.serde=string
systems.kafka.samza.offset.default=oldest
systems.kafka.consumer.zookeeper.connect=localhost:2181
systems.kafka.consumer.auto.offset.reset=smallest
systems.kafka.producer.bootstrap.servers=localhost:9092
systems.kafka.producer.producer.type=sync
systems.kafka.producer.retry.backoff.ms=10000
systems.kafka.producer.acks=1
systems.kafka.producer.queue.buffering.max.ms=2000
systems.kafka.producer.batch.num.messages=1000

########################################################################################################################
# Task checkpoint
########################################################################################################################
task.checkpoint.factory=org.apache.samza.checkpoint.kafka.KafkaCheckpointManagerFactory
task.checkpoint.replication.factor=1
task.checkpoint.system=kafka

########################################################################################################################
# Stores - Key-value storage
########################################################################################################################
fortscale.model.cache.managers.store.name=aggregated-feature-events-model-cache-store
stores.aggregated-feature-events-model-cache-store.factory=org.apache.samza.storage.kv.RocksDbKeyValueStorageEngineFactory
stores.aggregated-feature-events-model-cache-store.key.serde=string
stores.aggregated-feature-events-model-cache-store.msg.serde=jsonmodel

# This property is set to the number of key/value pairs that should be kept in this in-memory buffer, per task instance. The number cannot be greater than stores.*.object.cache.totalFileSystemSize.
stores.aggregated-feature-events-model-cache-store.write.batch.totalFileSystemSize=1000
# This property determines the number of objects to keep in Samza's cache, per task instance. This same cache is also usedSpace for write buffering (see stores.*.write.batch.totalFileSystemSize). A value of 0 disables all caching and batching.
stores.aggregated-feature-events-model-cache-store.object.cache.totalFileSystemSize=1000000
# The totalFileSystemSize of LevelDB's block cache in bytes, per container. Note that this is an off-heap memory allocation, so the container's total memory use is the maximum JVM heap totalFileSystemSize plus the totalFileSystemSize of this cache.
stores.aggregated-feature-events-model-cache-store.container.cache.totalFileSystemSize.bytes=104857600
# The amount of memory (in bytes) that LevelDB uses for buffering writes before they are written to disk.
stores.aggregated-feature-events-model-cache-store.container.write.buffer.totalFileSystemSize.bytes=33554432
