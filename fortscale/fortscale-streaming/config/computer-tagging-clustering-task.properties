# Job
job.factory.class=fortscale.streaming.GracefulShutdownLocalJobFactory
job.name=computer-tagging-clustering

# Task
task.class=fortscale.streaming.task.enrichment.ComputerTaggingClusteringTask
task.inputs=kafka.computer-service-cache-updates,kafka.sensitive-machine-service-cache-updates,kafka.fortscale-4769-ip-resolved,kafka.fortscale-4768-ip-resolved,kafka.fortscale-ssh-ip-resolved

# Fortscale specific task config parameters
fortscale.context=classpath*:META-INF/spring/streaming-TaggingTask-context.xml

# map cache logic name into topic and store name
fortscale.computer.service.cache.store=computer-service-cache
fortscale.computer.service.cache.topic=computer-service-cache-updates
fortscale.sensitive-machine.service.cache.store=sensitive-machine-service-cache
fortscale.sensitive-machine.service.cache.topic=sensitive-machine-service-cache-updates

# map event input topic into output topics and field names to resolve in each type of event
fortscale.events.security-events-4769.input.topic=fortscale-4769-ip-resolved
fortscale.events.security-events-4769.output.topic=fortscale-4769-computer-tagged-clustered
fortscale.events.security-events-4769.partition.field=impala.data.security.events.4769.table.morphline.fields.username

fortscale.events.security-events-4769.source.hostname.field=impala.data.security.events.4769.table.field.machine_name
fortscale.events.security-events-4769.source.classification.field=impala.data.security.events.4769.table.field.src_class
fortscale.events.security-events-4769.source.clustering.field=impala.data.security.events.4769.table.field.normalized_src_machine
#fortscale.events.security-events-4769.source.is-sensitive-machine.field=
fortscale.events.security-events-4769.source.create-new-computer-instances=true

fortscale.events.security-events-4769.destination.hostname.field=impala.data.security.events.4769.table.field.service_name
fortscale.events.security-events-4769.destination.classification.field=impala.data.security.events.4769.table.field.dst_class
fortscale.events.security-events-4769.destination.clustering.field=impala.data.security.events.4769.table.field.normalized_dst_machine
fortscale.events.security-events-4769.destination.is-sensitive-machine.field=impala.data.security.events.4769.table.field.is_sensitive_machine
fortscale.events.security-events-4769.destination.create-new-computer-instances=true

fortscale.events.security-events-login.input.topic=fortscale-4768-ip-resolved
fortscale.events.security-events-login.output.topic=fortscale-4768-enriched-events
fortscale.events.security-events-login.partition.field=impala.data.security.events.login.table.field.account_name

fortscale.events.security-events-login.source.hostname.field=impala.data.security.events.login.table.field.machine_name
fortscale.events.security-events-login.source.classification.field=impala.data.security.events.login.table.field.src_class
fortscale.events.security-events-login.source.clustering.field=impala.data.security.events.login.table.field.normalized_src_machine
fortscale.events.security-events-login.source.is-sensitive-machine.field=impala.data.security.events.login.table.field.is_sensitive_machine
fortscale.events.security-events-login.source.create-new-computer-instances=true

fortscale.events.security-events-login.destination.hostname.field=impala.data.security.events.4769.table.field.service_name
fortscale.events.security-events-login.destination.classification.field=impala.data.security.events.4769.table.field.dst_class
fortscale.events.security-events-login.destination.clustering.field=impala.data.security.events.4769.table.field.normalized_dst_machine
#fortscale.events.security-events-login.destination.is-sensitive-machine.field=
fortscale.events.security-events-login.destination.create-new-computer-instances=true

fortscale.events.ssh.input.topic=fortscale-ssh-ip-resolved
fortscale.events.ssh.output.topic=fortscale-ssh-computer-tagged-clustered
fortscale.events.ssh.partition.field=impala.data.ssh.table.field.username

fortscale.events.ssh.source.hostname.field=impala.data.ssh.table.field.hostname
fortscale.events.ssh.source.classification.field=impala.data.security.events.4769.table.field.src_class
fortscale.events.ssh.source.clustering.field=impala.data.ssh.table.field.normalized_src_machine
#fortscale.events.ssh.source.is-sensitive-machine.field=
fortscale.events.ssh.source.create-new-computer-instances=true

fortscale.events.ssh.destination.hostname.field=impala.data.ssh.table.field.target_machine
fortscale.events.ssh.destination.classification.field=impala.data.security.events.4769.table.field.dst_class
fortscale.events.ssh.destination.clustering.field=impala.data.ssh.table.field.normalized_dst_machine
fortscale.events.ssh.destination.is-sensitive-machine.field=impala.data.ssh.table.field.is_sensitive_machine
fortscale.events.ssh.destination.create-new-computer-instances=true


# Serializers
serializers.registry.json.class=org.apache.samza.serializers.JsonSerdeFactory
serializers.registry.string.class=org.apache.samza.serializers.StringSerdeFactory
serializers.registry.integer.class=org.apache.samza.serializers.IntegerSerdeFactory
serializers.registry.metrics.class=org.apache.samza.serializers.MetricsSnapshotSerdeFactory


# Metric report every 60 seconds to a kafka topic called metrics and as a monitor report
metrics.reporter.snapshot.class=org.apache.samza.metrics.reporter.MetricsSnapshotReporterFactory
metrics.reporter.snapshot.stream=kafka.metrics
metrics.reporter.monitor.class=fortscale.streaming.metrics.MongoMetricsSnapshotReporterFactory
systems.kafka.streams.metrics.samza.msg.serde=metrics
metrics.reporters=snapshot,monitor


# Systems
systems.kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
systems.kafka.samza.key.serde=string
systems.kafka.samza.msg.serde=string
systems.kafka.samza.offset.default=oldest
systems.kafka.consumer.zookeeper.connect=localhost:2181
systems.kafka.consumer.auto.offset.reset=smallest
systems.kafka.producer.metadata.broker.list=localhost:9092
systems.kafka.producer.producer.type=async
systems.kafka.producer.retry.backoff.ms = 10000
systems.kafka.producer.acks = 1
systems.kafka.producer.reconnect.backoff.ms = 10000
systems.kafka.producer.partitioner.class=fortscale.utils.kafka.partitions.StringHashPartitioner
systems.kafka.producer.queue.buffering.max.ms=2000
systems.kafka.producer.batch.num.messages=100


# Declare that we want our job's checkpoints to be enabled and written to Kafka
task.checkpoint.factory=org.apache.samza.checkpoint.kafka.KafkaCheckpointManagerFactory
task.checkpoint.replication.factor=1
task.checkpoint.system=kafka

# topic priorities for cache updates should be higher than those for the events topics
systems.kafka.streams.computer-service-cache-updates.samza.priority=100
systems.kafka.streams.sensitive-machine-service-cache-updates.samza.priority=100
systems.kafka.streams.fortscale-4769-ip-resolved.samza.priority=1
systems.kafka.streams.fortscale-4768-ip-resolved.samza.priority=1
systems.kafka.streams.fortscale-ssh-ip-resolved.samza.priority=1

# Key-value storage for computer-service-cache
stores.computer-service-cache.factory=org.apache.samza.storage.kv.KeyValueStorageEngineFactory
stores.computer-service-cache.key.serde=string
stores.computer-service-cache.msg.serde=json
stores.computer-service-cache.write.batch.size=25
stores.computer-service-cache.object.cache.size=150000
stores.computer-service-cache.container.cache.size.bytes=157286400
stores.computer-service-cache.container.write.buffer.size.bytes=102400


# Key-value storage for sensitive-machine-service-cache
stores.sensitive-machine-service-cache.factory=org.apache.samza.storage.kv.KeyValueStorageEngineFactory
stores.sensitive-machine-service-cache.key.serde=string
stores.sensitive-machine-service-cache.msg.serde=json
stores.sensitive-machine-service-cache.write.batch.size=25
stores.sensitive-machine-service-cache.object.cache.size=100000
stores.sensitive-machine-service-cache.container.cache.size.bytes=20971520
stores.sensitive-machine-service-cache.container.write.buffer.size.bytes=102400
