# Job
job.factory.class=fortscale.streaming.GracefulShutdownLocalJobFactory
job.name=alert-generator-task

# Task
task.class=fortscale.streaming.task.AlertGeneratorTask
task.inputs=kafka.fortscale-evidences,kafka.user-tag-service-cache-updates,kafka.fortscale-session-time-updates,kafka.fortscale-entity-event-score,kafka.fortscale-entity-event-score-bdp

# calling the window function every 15 minutes (15*60*1000=900000ms) (currently not in use)
task.window.ms=900000

### Fortscale specific task config parameters


#user tag cache update topic configuration
fortscale.user-tag.service.cache.topic=user-tag-service-cache-updates

# Spring Context
fortscale.context=classpath*:META-INF/spring/streaming-AlertGeneratorTask-context.xml
# esper config
fortscale.esper.config.file.path=config/Esper/EsperConfig.xml
fortscale.esper.rules.file.path=config/Esper/esper-rules.properties


fortscale.input.info.topic.evidence=fortscale-evidences
fortscale.input.info.class.evidence=fortscale.domain.core.Evidence
fortscale.input.info.timestampfield.evidence=endDate

fortscale.input.info.topic.user-tags=user-tag-service-cache-updates
fortscale.input.info.event-wrapper.user-tags=entityTagsWrapper
fortscale.input.info.cache-name.user-tags=entity-tags-cache

fortscale.input.info.topic.session-time-update=fortscale-session-time-updates
fortscale.input.info.event-wrapper.session-time-update=sessionTimeUpdateWrapper
fortscale.input.info.dynamic-statements.session-time-update=_0_5_createSessionVariable,_0_6_updateSessionVariable,_2_2_suspiciousSessionByCount

fortscale.input.info.topic.entity-event-score=fortscale-entity-event-score,fortscale-entity-event-score-bdp
fortscale.input.info.class.entity-event-score=fortscale.domain.core.EntityEvent
fortscale.input.info.timestampfield.entity-event-score=date_time_unix

# Metric report every 60 seconds to a kafka topic called metrics and as a monitor report
metrics.reporter.snapshot.class=org.apache.samza.metrics.reporter.MetricsSnapshotReporterFactory
metrics.reporter.snapshot.stream=kafka.metrics
systems.kafka.streams.metrics.samza.msg.serde=metrics
metrics.reporters=snapshot


# topic priorities for cache updates should be higher than those for the events topics
systems.kafka.streams.user-tags-service-cache-updates.samza.priority=100
systems.kafka.streams.fortscale-evidences=1
systems.kafka.streams.fortscale-session-time-updates=1
systems.kafka.streams.fortscale-entity-event-score=1
systems.kafka.streams.fortscale-entity-event-score-bdp=1

# Serializers
serializers.registry.json.class=org.apache.samza.serializers.JsonSerdeFactory
serializers.registry.string.class=org.apache.samza.serializers.StringSerdeFactory
serializers.registry.integer.class=org.apache.samza.serializers.IntegerSerdeFactory
serializers.registry.jsonmodel.class=fortscale.streaming.serialization.PrevalanceModelSerdeFactory
serializers.registry.long.class=fortscale.streaming.serialization.LongSerdeFactory
serializers.registry.metrics.class=org.apache.samza.serializers.MetricsSnapshotSerdeFactory
serializers.registry.timebarrier.class=fortscale.streaming.serialization.UserTimeBarrierModelSerdeFactory
serializers.registry.entitytags.class=fortscale.streaming.serialization.EntityTagsSerdeFactory

# Systems
systems.kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
systems.kafka.samza.key.serde=string
systems.kafka.samza.msg.serde=string
systems.kafka.samza.offset.default=oldest
systems.kafka.consumer.zookeeper.connect=localhost:2181
systems.kafka.consumer.auto.offset.reset=smallest
systems.kafka.producer.bootstrap.servers=localhost:9092
systems.kafka.producer.retry.backoff.ms = 10000
systems.kafka.producer.acks = 1
#systems.kafka.producer.reconnect.backoff.ms = 10000

# Declare that we want our job's checkpoints to be enabled and written to Kafka
task.checkpoint.factory=org.apache.samza.checkpoint.kafka.KafkaCheckpointManagerFactory
task.checkpoint.replication.factor=1
task.checkpoint.system=kafka



# Key-value storage for user-tag-cache
stores.entity-tags-cache.factory=org.apache.samza.storage.kv.RocksDbKeyValueStorageEngineFactory
stores.entity-tags-cache.changelog=kafka.entity-tags-cache-changelog
stores.entity-tags-cache.changelog.replication.factor=1
stores.entity-tags-cache.key.serde=string
stores.entity-tags-cache.msg.serde=entitytags
stores.entity-tags-cache.write.batch.totalFileSystemSize=25
stores.entity-tags-cache.object.cache.totalFileSystemSize=200000
stores.entity-tags-cache.container.cache.totalFileSystemSize.bytes=52428800
stores.entity-tags-cache.container.write.buffer.totalFileSystemSize.bytes=102400
