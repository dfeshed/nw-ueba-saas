# Job
job.factory.class=fortscale.streaming.GracefulShutdownLocalJobFactory
job.name=ip-resolving

# Task
task.class=fortscale.streaming.task.enrichment.IpResolvingStreamTask
task.inputs=kafka.dhcp-resolver-cache,kafka.login-resolver-cache,kafka.computer-service-cache-updates,kafka.fortscale-4769-normalized-tagged-event,kafka.fortscale-4768-normalized-tagged-event,kafka.fortscale-vpn-normalized-tagged-event,kafka.fortscale-ssh-structured,kafka.fortscale-amt-normalized-tagged-event,kafka.fortscale-amt-ip-resolved-for-sourceip,kafka.fortscale-ssh-ip-resolved-for-sourceip,kafka.fortscale-generic-data-source-normalized-tagged-event,kafka.fortscale-generic-data-source-ip-resolved


# Fortscale specific task config parameters
fortscale.context=classpath*:META-INF/spring/streaming-TaggingTask-context.xml

# map cache logic name into topic and store name
fortscale.dhcp-cache.topic=dhcp-resolver-cache
fortscale.dhcp-cache.store=dhcp-resolver-cache
fortscale.login-cache.topic=login-resolver-cache
fortscale.login-cache.store=login-resolver-cache
fortscale.computer-cache.topic=computer-service-cache-updates
fortscale.computer-cache.store=ip-computer-service-cache
fortscale.ise-cache.topic=ise-resolver-cache
fortscale.ise-cache.store=ise-resolver-cache

# map event input topic into output topics and field names to resolve in each type of event
fortscale.events.data.source.4769=4769
fortscale.events.input.topic.4769=fortscale-4769-normalized-tagged-event
fortscale.events.output.topic.4769=fortscale-4769-ip-resolved
fortscale.events.partition.field.4769=impala.data.security.events.table.morphline.fields.username
fortscale.events.ip.field.4769=impala.data.security.events.4769.table.field.client_address
fortscale.events.host.field.4769=impala.data.security.events.4769.table.field.machine_name
fortscale.events.timestamp.field.4769=impala.data.security.events.4769.table.field.date_time_unix
fortscale.events.restrictToADName.4769=true
fortscale.events.shortName.4769=true
fortscale.events.isRemoveLastDot.4769=false
fortscale.events.dropWhenFail.4769=true
fortscale.events.overrideIPWithHostname.4769=false

fortscale.events.data.source.4768=4768
fortscale.events.input.topic.4768=fortscale-4768-normalized-tagged-event
fortscale.events.output.topic.4768=fortscale-4768-ip-resolved
fortscale.events.partition.field.4768=impala.data.security.events.login.table.field.account_name
fortscale.events.ip.field.4768=impala.data.security.events.login.table.field.client_address
fortscale.events.host.field.4768=impala.data.security.events.login.table.field.machine_name
fortscale.events.timestamp.field.4768=impala.data.security.events.login.table.field.date_time_unix
fortscale.events.restrictToADName.4768=true
fortscale.events.shortName.4768=true
fortscale.events.isRemoveLastDot.4768=false
fortscale.events.dropWhenFail.4768=true
fortscale.events.overrideIPWithHostname.4768=false

fortscale.events.data.source.vpn=vpn
fortscale.events.input.topic.vpn=fortscale-vpn-normalized-tagged-event
fortscale.events.output.topic.vpn=fortscale-vpn-ip-resolved
fortscale.events.partition.field.vpn=impala.data.vpn.table.field.username
fortscale.events.ip.field.vpn=impala.data.vpn.table.field.source_ip
fortscale.events.host.field.vpn=impala.data.vpn.table.field.hostname
fortscale.events.timestamp.field.vpn=impala.data.vpn.table.field.epochtime
fortscale.events.resolveOnlyReserved.vpn=true
fortscale.events.restrictToADName.vpn=false
fortscale.events.shortName.vpn=true
fortscale.events.isRemoveLastDot.vpn=false
fortscale.events.dropWhenFail.vpn=false
fortscale.events.overrideIPWithHostname.vpn=false

#resolveOnlyReserved - False- resolve all IP addresses.
#True - Resolve only IP addresses which in reservedIpAddress
fortscale.events.resolveOnlyReserved=false
fortscale.events.reservedIpAddress=192.168.0.0 - 192.168.255.255, 10.0.0.0 - 10.255.255.255, 127.0.0.0 - 127.255.255.255


#ssh first entrance for resolving source ip
fortscale.events.data.source.sshSourceIp=sshSourceIp
fortscale.events.input.topic.sshSourceIp=fortscale-ssh-structured
fortscale.events.output.topic.sshSourceIp=fortscale-ssh-ip-resolved-for-sourceip
fortscale.events.partition.field.sshSourceIp=impala.data.ssh.table.field.username
fortscale.events.ip.field.sshSourceIp=impala.data.ssh.table.field.source_ip
fortscale.events.host.field.sshSourceIp=impala.data.ssh.table.field.hostname
fortscale.events.timestamp.field.sshSourceIp=impala.data.ssh.table.field.epochtime
fortscale.events.restrictToADName.sshSourceIp=false
fortscale.events.shortName.sshSourceIp=true
fortscale.events.isRemoveLastDot.sshSourceIp=false
fortscale.events.dropWhenFail.sshSourceIp=false
fortscale.events.overrideIPWithHostname.sshSourceIp=false

#ssh second entrance for resolving target ip
fortscale.events.data.source.sshTargetIp=sshTargetIp
fortscale.events.input.topic.sshTargetIp=fortscale-ssh-ip-resolved-for-sourceip
fortscale.events.output.topic.sshTargetIp=fortscale-ssh-ip-resolved
fortscale.events.partition.field.sshTargetIp=impala.data.ssh.table.field.username
fortscale.events.ip.field.sshTargetIp=impala.data.ssh.table.field.target_machine
fortscale.events.host.field.sshTargetIp=target_machine_temp
fortscale.events.timestamp.field.sshTargetIp=impala.data.ssh.table.field.epochtime
fortscale.events.restrictToADName.sshTargetIp=false
fortscale.events.shortName.sshTargetIp=true
fortscale.events.isRemoveLastDot.sshTargetIp=false
fortscale.events.dropWhenFail.sshTargetIp=false
fortscale.events.overrideIPWithHostname.sshTargetIp=true

#Amt first entrance for resolving source ip
fortscale.events.data.source.amtSourceIp=amtSourceIp
fortscale.events.input.topic.amtSourceIp=fortscale-amt-normalized-tagged-event
fortscale.events.output.topic.amtSourceIp=fortscale-amt-ip-resolved-for-sourceip
fortscale.events.partition.field.amtSourceIp=impala.data.amt.table.field.username
fortscale.events.ip.field.amtSourceIp=impala.data.amt.table.field.source_ip
fortscale.events.host.field.amtSourceIp=impala.data.amt.table.field.hostname
fortscale.events.timestamp.field.amtSourceIp=impala.data.amt.table.field.epochtime
fortscale.events.restrictToADName.amtSourceIp=false
fortscale.events.shortName.amtSourceIp=false
fortscale.events.isRemoveLastDot.amtSourceIp=true
fortscale.events.dropWhenFail.amtSourceIp=false
fortscale.events.overrideIPWithHostname.amtSourceIp=false

#Amt second entrance for resolving target ip
fortscale.events.data.source.amtTargetIp=amtTargetIp
fortscale.events.input.topic.amtTargetIp=fortscale-amt-ip-resolved-for-sourceip
fortscale.events.output.topic.amtTargetIp=fortscale-amt-ip-resolved
fortscale.events.partition.field.amtTargetIp=impala.data.amt.table.field.username
fortscale.events.ip.field.amtTargetIp=impala.data.amt.table.field.target_ip
fortscale.events.host.field.amtTargetIp=impala.data.amt.table.field.target_machine
fortscale.events.timestamp.field.amtTargetIp=impala.data.amt.table.field.epochtime
fortscale.events.restrictToADName.amtTargetIp=false
fortscale.events.shortName.amtTargetIp=false
fortscale.events.isRemoveLastDot.amtTargetIp=true
fortscale.events.dropWhenFail.amtTargetIp=false
fortscale.events.overrideIPWithHostname.amtTargetIp=false

#Generic data sources
#---------------------
fortscale.events.data.source.gen1=gen1
fortscale.events.input.topic.gen1=fortscale-generic-data-source-normalized-tagged-event
fortscale.events.output.topic.gen1=fortscale-generic-data-source-ip-resolved
fortscale.events.partition.field.gen1=impala.data.gen1.table.field.username
fortscale.events.ip.field.gen1=impala.data.gen1.table.field.source_ip
fortscale.events.host.field.gen1=impala.data.gen1.table.field.hostname
fortscale.events.timestamp.field.gen1=impala.data.gen1.table.field.epochtime
fortscale.events.resolveOnlyReserved.gen1=true
fortscale.events.restrictToADName.gen1=false
fortscale.events.shortName.gen1=true
fortscale.events.isRemoveLastDot.gen1=false
fortscale.events.dropWhenFail.gen1=false
fortscale.events.overrideIPWithHostname.gen1=false

fortscale.events.data.source.gen2=gen2
fortscale.events.input.topic.gen2=fortscale-generic-data-source-normalized-tagged-event
fortscale.events.output.topic.gen2=fortscale-generic-data-source-ip-resolved
fortscale.events.partition.field.gen2=impala.data.gen2.table.field.username
fortscale.events.ip.field.gen2=impala.data.gen2.table.field.source_ip
fortscale.events.host.field.gen2=impala.data.gen2.table.field.hostname
fortscale.events.timestamp.field.gen2=impala.data.gen2.table.field.epochtime
fortscale.events.resolveOnlyReserved.gen2=true
fortscale.events.restrictToADName.gen2=false
fortscale.events.shortName.gen2=true
fortscale.events.isRemoveLastDot.gen2=false
fortscale.events.dropWhenFail.gen2=false
fortscale.events.overrideIPWithHostname.gen2=false


# Serializers
serializers.registry.json.class=org.apache.samza.serializers.JsonSerdeFactory
serializers.registry.jsondhcp.class=fortscale.streaming.serialization.DHCPEventSerdeFactory
serializers.registry.jsonise.class=fortscale.streaming.serialization.ISEEventSerdeFactory
serializers.registry.jsonlogin.class=fortscale.streaming.serialization.ComputerLoginEventSerdeFactory
serializers.registry.jsoncomp.class=fortscale.streaming.serialization.ComputerSerdeFactory
serializers.registry.string.class=org.apache.samza.serializers.StringSerdeFactory
serializers.registry.integer.class=org.apache.samza.serializers.IntegerSerdeFactory
serializers.registry.long.class=fortscale.streaming.serialization.LongSerdeFactory
serializers.registry.metrics.class=org.apache.samza.serializers.MetricsSnapshotSerdeFactory

# Metric report every 60 seconds to a kafka topic called metrics and as a monitor report
metrics.reporter.snapshot.class=org.apache.samza.metrics.reporter.MetricsSnapshotReporterFactory
metrics.reporter.snapshot.stream=kafka.metrics
systems.kafka.streams.metrics.samza.msg.serde=metrics
metrics.reporters=snapshot


# Systems
systems.kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
systems.kafka.samza.key.serde=string
systems.kafka.samza.msg.serde=string
systems.kafka.samza.offset.default=oldest
systems.kafka.consumer.zookeeper.connect=localhost:2181
systems.kafka.consumer.auto.offset.reset=smallest
systems.kafka.producer.metadata.broker.list=localhost:9092
systems.kafka.producer.producer.type=sync
systems.kafka.producer.retry.backoff.ms = 10000
systems.kafka.producer.acks = 1
systems.kafka.producer.reconnect.backoff.ms = 10000
systems.kafka.producer.partitioner.class=fortscale.utils.kafka.partitions.StringHashPartitioner
systems.kafka.producer.queue.buffering.max.ms=2000
systems.kafka.producer.batch.num.messages=1000

# Declare that we want our job's checkpoints to be enabled and written to Kafka
task.checkpoint.factory=org.apache.samza.checkpoint.kafka.KafkaCheckpointManagerFactory
task.checkpoint.replication.factor=1
task.checkpoint.system=kafka

# topic priorities for cache updates should be higher than those for the events topics
systems.kafka.streams.dhcp-resolver-cache.samza.priority=100
systems.kafka.streams.ise-resolver-cache.samza.priority=100
systems.kafka.streams.login-resolver-cache.samza.priority=100
systems.kafka.computer-service-cache-updates.samza.priority=100
systems.kafka.streams.fortscale-4768-normalized-tagged-event.samza.priority=1
systems.kafka.streams.fortscale-4769-normalized-tagged-event.samza.priority=1
systems.kafka.streams.fortscale-ssh-structured.samza.priority=1
systems.kafka.streams.fortscale-ssh-ip-resolved-for-sourceip.samza.priority=1
systems.kafka.streams.fortscale-vpn-normalized-tagged-event.samza.priority=1


# Key-value storage for dhcp-resolver-cache
stores.dhcp-resolver-cache.factory=org.apache.samza.storage.kv.KeyValueStorageEngineFactory
stores.dhcp-resolver-cache.changelog=kafka.dhcp-resolver-cache-changelog
stores.dhcp-resolver-cache.key.serde=string
stores.dhcp-resolver-cache.msg.serde=jsondhcp
stores.dhcp-resolver-cache.write.batch.size=25
stores.dhcp-resolver-cache.object.cache.size=300000
stores.dhcp-resolver-cache.container.cache.size.bytes=419430400
stores.dhcp-resolver-cache.container.write.buffer.size.bytes=102400

# Key-value storage for ise-resolver-cache
stores.ise-resolver-cache.factory=org.apache.samza.storage.kv.KeyValueStorageEngineFactory
stores.ise-resolver-cache.changelog=kafka.ise-resolver-cache-changelog
stores.ise-resolver-cache.key.serde=string
stores.ise-resolver-cache.msg.serde=jsonise
stores.ise-resolver-cache.write.batch.size=25
stores.ise-resolver-cache.object.cache.size=300000
stores.ise-resolver-cache.container.cache.size.bytes=419430400
stores.ise-resolver-cache.container.write.buffer.size.bytes=102400

# Key-value storage for logic-resolver-cache
stores.login-resolver-cache.factory=org.apache.samza.storage.kv.KeyValueStorageEngineFactory
stores.login-resolver-cache.changelog=kafka.login-resolver-cache-changelog
stores.login-resolver-cache.key.serde=string
stores.login-resolver-cache.msg.serde=jsonlogin
stores.login-resolver-cache.write.batch.size=25
stores.login-resolver-cache.object.cache.size=300000
stores.login-resolver-cache.container.cache.size.bytes=419430400
stores.login-resolver-cache.container.write.buffer.size.bytes=102400

# Key-value storage for computer-service-cache
stores.ip-computer-service-cache.factory=org.apache.samza.storage.kv.KeyValueStorageEngineFactory
stores.ip-computer-service-cache.changelog=kafka.ip-computer-service-cache-changelog
stores.ip-computer-service-cache.key.serde=string
stores.ip-computer-service-cache.msg.serde=jsoncomp
stores.ip-computer-service-cache.write.batch.size=100
stores.ip-computer-service-cache.object.cache.size=350000
stores.ip-computer-service-cache.container.cache.size.bytes=157286400
stores.ip-computer-service-cache.container.write.buffer.size.bytes=102400