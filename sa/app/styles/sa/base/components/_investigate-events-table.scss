.rsa-investigate-events-table {
  @include rsa-col(justify,fill);

  &__header {
    @include rsa-vendor-prefix(flex-shrink,0);
    @include rsa-vendor-prefix(flex-grow,0);

    h2 {
      @include rsa-font(header, small);
      padding: rsa-whitespace(less) rsa-whitespace();
    }
  }

  &__body {
    @include rsa-vendor-prefix(flex-grow,1);
    position: relative;
  }

  .rsa-progress-bar {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    z-index: 2;
  }

  .rsa-data-table {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 1;

    &-header {
      /* @workaround Clear defaults that were introduced for Response UI. */
      margin: 0;
      padding: 0;
      border: 0;
    }

    &-header-cell {
      &:first-child {
        .title {
          padding-left: rsa-whitespace();
        }
      }
      .title {
        display: block;
        padding: rsa-whitespace(less) 0;
      }
    }

    &-body-row {
      color: rsa-color(grey, lighter);
    }

    &-body-cell {
      .content {
        display: block;
        padding: rsa-whitespace(less) 0;
      }

      .time {
        padding-left: rsa-whitespace();
        &:first-child {
          padding-bottom: rsa-whitespace(least);
        }
      }

      .meta-key-and-value {
        display: block;
        padding-bottom: rsa-whitespace(least);
        .key {
          color: rsa-color(white, base, $rsa-translucent);
          padding-right: rsa-whitespace();

          &:after {
            content: ':';
            color: rsa-color(white,base,$rsa-translucent);
          }
        }
      }

      .meta-src-dst-pair {
        display: block;
        white-space: nowrap;
        padding-bottom: rsa-whitespace(least);

        .arrow {
          display: inline-block;
          padding: 0 rsa-whitespace(less);
          color: rsa-color(white, base, $rsa-translucent);
        }
      }


      &[data-field="custom.meta-summary"] {
        position: relative;

        .content {
          position: absolute;
          top: 0;
          left: 0;
          right: 0;
          bottom: 0;
          overflow: hidden;
          padding: 0;
        }

        .meta-key-and-value,
        .meta-src-dst-pair {
          display: inline-block;
          padding: rsa-whitespace(least) rsa-whitespace();
        }

        .meta-key-value-pairs {
          color: rsa-color(grey, light);
          .value {
            color: rsa-color(grey, lighter);
            padding-left: rsa-whitespace(least);
          }
        }

        .meta-key-value-pairs,
        .log-data {
          padding: rsa-whitespace(least) 0;
          overflow: hidden;
          text-overflow: ellipsis;
        }
      }

      /* For meta details column, arrange values in columns, top -> bottom, left -> right. */
      &[data-field="custom.meta-details"] {
        .content {
          /* Stacks columns of meta details, left to right. */
          @include rsa-row(left,fill);
        }
        .meta-details-column {
          margin-right: rsa-whitespace();
        }
      }
    }
  }
}
