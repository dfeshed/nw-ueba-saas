.rsa-investigate-files {
  .show-left-zone {
    .title-header {
      display: none;
    }
  }
}
.rsa-files-toolbar {
  .files-toolbar {
    height: 70px;
  }
  hbox {
    align-items: center;
  }
  color: text-color(primary, lightest);
  padding: 0 rsa-whitespace(less);

  .selection-count {
    padding-right: rsa-whitespace();
  }
   .file-actionbar {
     padding: 0;
   }
  .toolbar-button {
    padding: rsa-whitespace(less);
    font-size: 20px;
    width: 23px;
    color: text-color(primary, lighter);
    margin-right: rsa-whitespace(least);
    cursor: pointer;
  }

  .toolbar-actions {
    height: 30px;
    display: inline-flex;
    flex-wrap: wrap;
    .divider {
      @include border-left(1px, solid, primary);
      height: 2rem;
      margin: .1rem 0 .25rem 0;
    }
    .export-button {
      position: absolute;
      right: 0;
      i {
        font-size: 14px;
      }
    }
    .view-certificate-button {
      padding-right: rsa-whitespace();
      padding-left: rsa-whitespace(less);
    }
  }

  &.more-filters-active {
    .more-filters-button {
      color: text-color(accentTwo);
      border-bottom: 2px solid border-color(accentTwo);
    }
  }

  &__filters {
    @include rsa-row(left, middle);
    @include rsa-vendor-prefix(flex-shrink, 0);
    @include rsa-vendor-prefix(flex-grow, 1);
  }

  &__views,
  &__btns {
    @include rsa-row(right, middle);
    @include rsa-vendor-prefix(flex-shrink, 0);
    @include rsa-vendor-prefix(flex-grow, 0);
  }

  &__views {
    margin-right: rsa-whitespace(more);
  }

  .ember-power-select-trigger {
    border-bottom: 1px solid transparent;
    .rsa-view-mode-option .text {
      display: none;
    }
  }

  .rsa-power-select-label {
    vertical-align: middle;
    padding-right: 10px;
  }

  .export-files-iframe {
    height: 0;
    display: none;
  }

  .title-header {
    @include rsa-font(header, larger);
    display: inline-block;
    line-height: 0.5rem;
    color: text-color(primary, lightest);
  }
}



.delete-filter {
  i {
    color: text-color(primary, lightest);
  }
}
