$data-table-col-resize-handle-width: 9px !default;  /* should be small but not too small to grab */
$data-table-max-z-index: 1000 !default; /* should be larger than the total # of columns in table */

.rsa-data-table {
  @include rsa-col(justify,fill);
  overflow: hidden; /* Hides header cells that spill outside viewport */

  &-header {
    @include rsa-vendor-prefix(flex-shrink, 0); /* can't shrink beyond min size */
    @include rsa-vendor-prefix(flex-grow, 0); /* can't grow beyond min size */
    padding: rsa-whitespace(less) 0;
    margin: rsa-whitespace(less) 0;
    border-bottom: 1px solid rsa-color(black);
    padding-bottom: rsa-whitespace(least);

    &__column-selector {
      position: absolute;
      right: 0;
      top: 0;
      border-left: 1px solid rsa-color(black);
      padding-left: 0.7rem;
      width: 1.5rem;
      height: 21px;
      padding-top: 9px;
      z-index: 99;
      background-image: $applicationBodyBackgroundImage;
      background-color: $applicationBodyBackgroundColor;
    }
  }

  &-body {
    @include rsa-vendor-prefix(flex-grow, 1);
    position: relative;
    overflow: auto;
  }

  &-body-rows {
    position: relative;
  }

  &-body-row,
  &-header-row {
    white-space: nowrap;
    position: relative;
  }

  &.fit-to-width {
    .rsa-data-table {
      &-body-row,
      &-header-row {
        @include rsa-row(justify,fill);
      }
    }
  }

  &:not(.fit-to-width) {
    .rsa-data-table {
      &-body-row,
      &-header-row {
        @include rsa-row(left,fill);
      }
    }
  }

  &-header-row {
    @include rsa-font(header, small);
    color: rsa-color(white);
  }

  &-body-row {
    position: absolute;
    left: 0;
    min-width: 100%;
    @include rsa-font(light, small);
    border-bottom: 1px solid rsa-color(black, null, $rsa-nearly-transparent);
    color: rsa-color(white);
    padding: rsa-whitespace(least) 0;
  }

  &-body-cell,
  &-header-cell {
    display: inline-block;
    overflow: hidden;
    @include rsa-vendor-prefix(flex-shrink, 0);

    /* By default cell widths are fixed and don't expand. */
    @include rsa-vendor-prefix(flex-grow,0);

    /* Except for cells which are marked as auto-width; those can expand. */
    &.auto-width {
      @include rsa-vendor-prefix(flex-grow,1);
    }
  }

  &-header-cell {
    position: relative; /* enables absolute positioning for the .resize-handle children */

    /* enables re-ordering columns via drag, with animation. @see ember-sortable */
    transition: transform 0.125s;

    .js-move-handle {
      cursor: grab;
    }

    &.is-dragging {
      background-color: rsa-color(gray);
      transition-duration: 0s;
      z-index: $data-table-max-z-index;
      .js-move-handle {
        cursor: grabbing;
      }
    }
    &.is-dropping {
      z-index: $data-table-max-z-index;
    }

    .title {
      white-space: nowrap;
      z-index: 1;
    }

    &-resizer {
      z-index: 2;
      position: absolute;
      top: 0;
      bottom: 0;
      width: $data-table-col-resize-handle-width;
      cursor: ew-resize;

      :hover,
      .is-dragging {
        background-color: rsa-color(blue);
      }

      &.left {
        left: 0;
        transform: translate(-50%,0);
      }
      &.right {
        right: 0;
        transform: translate(50%,0);
      }
    }
  }

  /* Hide the left resize handle for the first column. */
  &-header-cell:first-of-type {
    .rsa-data-table-header-cell-resizer.left {
      display: none;
    }
  }
  &-header-cell .hideSort{
    visibility: hidden;
  }
  &-header-cell:hover .hideSort{
    visibility: visible;
  }
  button.expand {
    padding-left: rsa-whitespace(less);
  }

  /* Color choices. */
  &.dark {
    .rsa-data-table {
      &-body-row,
      &-header-row {
        border-bottom: 1px solid rsa-color(black);
      }
    }
  }
  &.monochrome {
    .rsa-data-table {
      &-body-row {
        border-bottom: 1px solid rsa-color(black);
      }
      &-header-row {
        background-color: rsa-color(black);
      }
    }
  }

  &-load-more {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    text-align: center;
    margin: rsa-whitespace();

    p {
      margin: rsa-whitespace(less) 0 rsa-whitespace();
    }

    &.complete {
      display: none;
    }
  }
}
