$data-table-col-resize-handle-width: 9px !default;  /* should be small but not too small to grab */
$data-table-max-z-index: 1000 !default; /* should be larger than the total # of columns in table */

.rsa-data-table {
  @include rsa-col(justify,fill);
  overflow: hidden; /* Hides header cells that spill outside viewport */

  &-header {
    @include rsa-vendor-prefix(flex-shrink, 0); /* can't shrink beyond min size */
    @include rsa-vendor-prefix(flex-grow, 0); /* can't grow beyond min size */
    background-color: rsa-color(gray, darker, $rsa-somewhat-opaque);

    &__column-selector {
      position: absolute;
      right: 0;
      top: 0;
      border-left: 1px solid rsa-color(black);
      padding-left: 0.7rem;
      width: 1.5rem;
      height: 21px;
      padding-top: 9px;
      z-index: 99;
      background-image: $applicationBodyBackgroundImage;
      background-color: $applicationBodyBackgroundColor;
    }
  }

  &-body {
    @include rsa-vendor-prefix(flex-grow, 1);
    position: relative;
    overflow: auto;

    .no-results {
      color: rsa-color(gray);
      font-style: italic;
      padding: rsa-whitespace();
    }
  }

  &-body-rows {
    position: relative;

    &:hover {
      .rsa-data-table-body-row {
        color: rsa-color(gray, light);
      }
    }
  }

  &-body-row,
  &-header-row {
    white-space: nowrap;
    position: relative;

    .rsa-form-checkbox {
      margin: 0;
    }
  }

  &-header-row {
    @include rsa-font(header, small);
    text-transform: uppercase;
    height: 30px;
    color: rsa-color(gray, light);
  }

  &-body-row {
    position: absolute;
    left: calc(#{rsa-whitespace()} + #{rsa-whitespace(least)});
    right: calc(#{rsa-whitespace()} + #{rsa-whitespace(least)});
    @include rsa-font(paragraph, small);
    border-top: 1px solid rsa-color(gray, darker);
    color: rsa-color(gray, lighter);

    &:hover,
    &.is-selected,
    &.is-selected:hover {
      margin: 0 calc((#{rsa-whitespace()} + #{rsa-whitespace(least)}) * -1);
      padding: 0 calc(#{rsa-whitespace()} + #{rsa-whitespace(least)});
    }

    &:hover {
      color: rsa-color(gray, lighter)!important;
      background-color: rsa-color(gray, darkest, $rsa-nearly-transparent);
      border-top: 1px solid transparent;

      + .rsa-data-table-body-row {
        border-top: 1px solid transparent;
      }
    }

    &.is-selected,
    &.is-selected:hover {
      background-color: rsa-color(blue, base, 0.6);
      color: rsa-color(gray, lighter)!important;
    }

    &:first-child {
      border-top: 1px solid transparent;
    }
  }


  &.fit-to-width {
    .rsa-data-table {
      &-body-row,
      &-header-row {
        @include rsa-row(justify,fill);
        width: 100%;
      }
    }
  }

  &:not(.fit-to-width) {
    .rsa-data-table {
      &-body-row,
      &-header-row {
        @include rsa-row(left,fill);
      }
    }
  }

  &-body-cell {
    padding: rsa-whitespace(less);
    align-items: flex-start;

    &.is-error {
      background-color: rsa-color(red, base, 0.2);
    }
  }

  &-body-cell,
  &-header-cell {
    display: inline-block;
    overflow: hidden;
    text-overflow: ellipsis;
    @include rsa-vendor-prefix(flex-shrink, 0);

    /* By default cell widths are fixed and don't expand. */
    @include rsa-vendor-prefix(flex-grow,0);

    /* Except for cells which are marked as auto-width; those can expand. */
    &.auto-width {
      @include rsa-vendor-prefix(flex-grow,1);
    }

    // sass-lint:disable no-universal-selectors
    * {
      overflow-x: hidden;
      text-overflow: ellipsis;
      max-width: 100%;
    }
  }

  &-header-cell {
    /* enables re-ordering columns via drag, with animation. @see ember-sortable */
    transition: transform 0.125s;
    position: relative; /* enables absolute positioning for the .resize-handle children */
    line-height: 30px;
    padding: 0 rsa-whitespace(less);
    border-right: 1px solid rsa-color(gray, dark);
    margin-right: -1px;

    &:first-child {
      padding-left: calc((#{rsa-whitespace()} + #{rsa-whitespace(least)} + #{rsa-whitespace(less)}) - 1px);
    }

    &:last-child {
      border-right: none;
    }

    &.is-dragging {
      background-color: rsa-color(gray);
      transition-duration: 0s;
      z-index: $data-table-max-z-index;
      .js-move-handle {
        cursor: grabbing;
      }
    }

    &.is-dropping {
      z-index: $data-table-max-z-index;
    }

    .js-move-handle {
      cursor: grab;
    }

    .title {
      white-space: nowrap;
      z-index: 1;
    }

    &-resizer {
      z-index: 2;
      position: absolute;
      top: 0;
      bottom: 0;
      width: $data-table-col-resize-handle-width;
      cursor: ew-resize;

      :hover,
      .is-dragging {
        background-color: rsa-color(blue);
      }

      &.left {
        left: 0;
        transform: translate(-50%,0);
      }
      &.right {
        right: 0;
        transform: translate(50%,0);
      }
    }
  }

  /* Hide the left resize handle for the first column. */
  &-header-cell:first-of-type {
    .rsa-data-table-header-cell-resizer.left {
      display: none;
    }
  }
  &-header-cell .hideSort{
    visibility: hidden;
  }
  &-header-cell:hover .hideSort{
    visibility: visible;
  }
  button.expand {
    padding-left: rsa-whitespace(less);
  }

  /* Color choices. */
  &.dark {
    .rsa-data-table {
      &-body-row,
      &-header-row {
        border-bottom: 1px solid rsa-color(black);
      }
    }
  }
  &.monochrome {
    .rsa-data-table {
      &-body-row {
        border-bottom: 1px solid rsa-color(black);
      }
      &-header-row {
        background-color: rsa-color(black);
      }
    }
  }

  &-load-more {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    text-align: center;
    margin: rsa-whitespace();

    p {
      margin: rsa-whitespace(less) 0 rsa-whitespace();
    }

    &.complete {
      display: none;
    }
  }

  .rsa-content-badge-score {
    padding: 0;
  }
}
