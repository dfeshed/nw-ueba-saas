.rsa-investigate-events-table {
  @include rsa-col(justify,fill);

  &__header {
    @include rsa-vendor-prefix(flex-grow,0);
    background-color: background-color(primary, darkest);
    @include border-bottom(1px, solid, primary, darker);
    align-items: baseline;
    justify-content: space-between;

    &__container {
      display: flex;
      flex-direction: row;
      width: 100%;
      justify-content: space-between;
    }

    &__content {
      min-width: 70%;

      &::after {
        content: "";
        display: table;
        clear: both;
      }
    }

    &__eventLabel {
      float: left;

      h2 {
        text-transform: capitalize;
        @include rsa-font(header, large);
        padding: rsa-whitespace() rsa-whitespace(less) rsa-whitespace() rsa-whitespace();
        color: text-color(primary, lighter);

        .at-threshold {
          margin-top: -1px;
          position: relative;
          top: 2px;
          color: text-color(accentTwo);
        }

      }
    }

    &__columnGroup, &__downloadEvents {
      display: inline-flex;
      float: left;
      max-height: 43px;
      iframe {
        opacity: 0;
        width: 1px;
        height: 1px;
      }
      &.is-disabled {
        .ember-power-select-trigger{
          @include border(1px, solid, primary, dark);
          background-color: background-color(primary, darkest);
          cursor: default;
          span {
            color : text-color(primary, dark) !important;
          }
        }
      }
      .ember-power-select-trigger {
        // Need to use important to override from-select style.
        @include border(1px, solid, primary, light);
        width: 200px;
        overflow: hidden;
        .ember-power-select-status-icon {
          right: rsa-whitespace(least)
        }
        .ember-power-select-selected-item {
          display: block;
          overflow-x: hidden;
          text-overflow: ellipsis;
          white-space: nowrap;
        }
      }
      div {
        margin: rsa-whitespace(less) rsa-whitespace(less) rsa-whitespace(less) rsa-whitespace();
        min-width: 150px;
      }
    }
    .events-table-control {
      display: inline-block;
      min-width: 60px;
      margin-top: 17px;
      margin-right: rsa-whitespace();
      color: text-color(primary, light);
      .rsa-icon {
        cursor: pointer;
        margin: 0 rsa-whitespace(least);
        padding: 0 rsa-whitespace(least);
        &:hover {
          color: text-color(primary, lightest);
        }
        &.active:not(.disabled) {
          color: text-color(primary, lightest);
        }
        &.disabled {
          color: text-color(primary);
          cursor: default;
        }
      }
    }
  }

  &__body {
    @include rsa-vendor-prefix(flex-grow,1);
    position: relative;
  }

  &.show-scroll-message {
    .scroll-message {
      display: block;
    }
  }

  .scroll-message {
    display: none;
    @include rsa-font(body, small);
    font-weight: 300;
    background-color: text-color(accentThree, dark);
    padding: rsa-whitespace(less) rsa-whitespace();
    text-align: center;
    .rsa-icon {
      vertical-align: middle;
    }
  }

  .rsa-progress-bar {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    z-index: 2;
  }

  .rsa-data-table {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 1;

    &-header {
      background-color: background-color(primary, darker);
      /* @workaround Clear defaults that were introduced for Response UI. */
      margin: 0;
      padding: 0;
      border: 0;

      .rsa-data-table-header-cell {
        &:first-of-type {
          & > div {
            overflow: visible;

            .rsa-form-checkbox-label {
              padding: 1000rem;
            }
          }
        }
      }
    }

    &-body-row {
      cursor: default;
      border-top: 0px;

      // Need to set height big enough to accommodate logs which
      // come in after the row is rendered
      min-height: 57px;

      .rsa-data-table-body-cell[data-field="checkbox"] {
        text-align: right;

        .rsa-form-checkbox-label {
          &::before {
            position: static;
            color: text-color(neutral, base);
            margin-right: rsa-whitespace(least);
          }
        }

        &:hover {
          cursor: pointer;

          .rsa-form-checkbox-label {
            &::before {
              color: text-color(secondary);
              position: static;
            }
          }
        }
      }

      &.is-selected {
        .rsa-data-table-body-cell[data-field="checkbox"] {
          &:hover {
            cursor: pointer;
          }
        }
      }
    }

    &-body-cell {
      @include border-top(1px, solid, primary, dark);

      .meta-key-and-value {
        .key {
          color: text-color(neutral, base, translucent);
          padding-right: rsa-whitespace();

          &::after {
            content: ':';
            color: text-color(neutral,base,translucent);
          }
        }
      }

      .meta-src-dst-pair {
        display: block;
        white-space: nowrap;

        .arrow {
          display: inline-block;
          padding: 0 rsa-whitespace(less);
          color: text-color(neutral, base, translucent);
        }
      }

      &[data-field="custom.meta-summary"],
      &[data-field="custom.metasummary"] {
        position: relative;

        .meta-key-and-value,
        .meta-src-dst-pair {
          display: inline-block;
        }

        .meta-key-value-pairs {
          .value {
            color: text-color(primary, lightest);
            padding-left: rsa-whitespace(least);
          }
        }

        .meta-key-value-pairs,
        .log-data {
          padding-left: 0;
          padding-right: 0;
          overflow: hidden;
          text-overflow: ellipsis;
        }

        .log-data {
          @include rsa-font-monospace();
        }
      }

      /* For meta details column, arrange values in columns, top -> bottom, left -> right. */
      &[data-field="custom.meta-details"] {
        .content {
          /* Stacks columns of meta details, left to right. */
          @include rsa-row(left,fill);
        }
        .meta-details-column {
          margin-right: rsa-whitespace();
        }
      }
      .has-context-data {
        text-decoration: underline;
        text-decoration-style: dashed;
      }
    }
  }
}

.download-dropdown {
  width: auto !important;
  min-width: 218px !important;
  .ember-power-select-options {
    max-height: 25rem;
    li:nth-child(3) {
    @include border-bottom(1px, solid, primary, light);
    }
    span.right {
      padding-left: rsa-whitespace(less);
      float: right;
    }
  }
}
