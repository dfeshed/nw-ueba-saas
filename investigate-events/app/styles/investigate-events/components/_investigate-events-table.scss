.rsa-investigate-events-table {
  @include rsa-col(justify,fill);

  &__header {
    @include rsa-vendor-prefix(flex-grow,0);
    background-color: background-color(primary, darkest);
    @include border-bottom(1px, solid, primary, darker);
    align-items: baseline;
    justify-content: space-between;
    h2 {
      @include rsa-font(header, large);
      padding: rsa-whitespace();
      color: text-color(primary, lighter);

      .rsa-investigate-event-counter {
        font-size: .85em;
        &::before {
          content: '(';
          margin-right: -4px;
        }
        &::after {
          content: ')';
          margin-left: -4px;
        }
      }
    }
    &__coloumGroup {
      display: inline-flex;
      .ember-power-select-trigger {
        // Need to use important to override from-select style.
        border: 1px solid border-color(primary, light) !important;
        overflow: hidden;
        .ember-power-select-status-icon {
          right: rsa-whitespace(least)
        }
      }
      div {
        margin-top: rsa-whitespace(less);
        min-width: 150px;

      }
    }
    .events-table-control {
      display: inline-block;
      margin-right: 12px;
      color: text-color(primary, light);
      .rsa-icon {
        cursor: pointer;
        margin: 0 rsa-whitespace(least);
        padding: 0 rsa-whitespace(least);
        &:hover {
          color: text-color(primary, lightest);
        }
        &.active:not(.disabled) {
          color: text-color(primary, lightest);
        }
        &.disabled {
          color: text-color(primary);
          cursor: default;
        }
      }
    }
  }

  &__body {
    @include rsa-vendor-prefix(flex-grow,1);
    position: relative;
  }

  .rsa-progress-bar {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    z-index: 2;
  }

  .rsa-data-table {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 1;

    &-header {
      background-color: background-color(primary, darker);
      /* @workaround Clear defaults that were introduced for Response UI. */
      margin: 0;
      padding: 0;
      border: 0;
    }

    &-body-row {
      cursor: default;
      border-top: 1px solid border-color(primary, dark);
    }

    &-body-cell {
      .meta-key-and-value {
        .key {
          color: text-color(neutral, base, translucent);
          padding-right: rsa-whitespace();

          &::after {
            content: ':';
            color: text-color(neutral,base,translucent);
          }
        }
      }

      .meta-src-dst-pair {
        display: block;
        white-space: nowrap;

        .arrow {
          display: inline-block;
          padding: 0 rsa-whitespace(less);
          color: text-color(neutral, base, translucent);
        }
      }


      &[data-field="custom.meta-summary"] {
        position: relative;

        .meta-key-and-value,
        .meta-src-dst-pair {
          display: inline-block;
        }

        .meta-key-value-pairs {
          .value {
            color: text-color(primary, lightest);
            padding-left: rsa-whitespace(least);
          }
        }

        .meta-key-value-pairs,
        .log-data {
          padding-left: 0;
          padding-right: 0;
          overflow: hidden;
          text-overflow: ellipsis;
        }

        .log-data {
          @include rsa-font-monospace();
        }
      }

      /* For meta details column, arrange values in columns, top -> bottom, left -> right. */
      &[data-field="custom.meta-details"] {
        .content {
          /* Stacks columns of meta details, left to right. */
          @include rsa-row(left,fill);
        }
        .meta-details-column {
          margin-right: rsa-whitespace();
        }
      }
    }
  }
}
