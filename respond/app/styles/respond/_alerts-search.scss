$alertsSearchLabelWidth: 6rem;
$alertsSearchLineHeight: 2rem;

.rsa-alerts-search {

  .title {
    @include rsa-font(heading, light);
    padding: rsa-whitespace(less);
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  &-form {
    @include border-bottom(1px, solid, primary, light, nearly-transparent);

    &__subtext {
      @include rsa-font(paragraph, small);
      padding: rsa-whitespace(less);
      padding-top: 0;
      color: text-color(primary, lighter);
    }

    .param {
      @include rsa-font(body, small);
      padding: rsa-whitespace(less) rsa-whitespace(less) rsa-whitespace(less) (rsa-whitespace(less) + $alertsSearchLabelWidth);
      position: relative;

      &-label {
        color: text-color(primary, lighter);
        position: absolute;
        left: 0;
        top: 0;
        margin: rsa-whitespace(less);
        max-width: $alertsSearchLabelWidth - rsa-whitespace(less) * 2;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
        line-height: $alertsSearchLineHeight;
      }

      &-value {
        display: inline-block;
        color: text-color(neutral);

        &.list {
          line-height: 1.5;
        }

        input[type="text"] {
          /* for consistency with ember-power-select's styling */
          line-height: $alertsSearchLineHeight;
          @include border-bottom(1px, solid, primary, lighter);
          height: 30px;
          &:-ms-input-placeholder {
            color: text-color(primary);
          }
        }

        .ember-power-select-trigger[aria-disabled="true"] {
          /* overwrites defaults from component-lib, which would otherwise make the bg color primary (light) */
          background-color: transparent;
        }
      }
    }

    &__footer {

      .rsa-form-button-wrapper {
        display: block;
        padding: rsa-whitespace(less);

        button {
          width: 100%;
        }
      }
    }
  }

  &-results {
    &__header {
      @include border-bottom(1px, solid, primary, light, nearly-transparent);

      &-text,
      &-wait {
        padding: rsa-whitespace(less);
      }

      &-text {
        @include rsa-font(body, small);
        color: text-color(primary, lighter);
      }

      .rsa-loader__text {
        display: none;
      }
    }
  }
}
