$darkStorylineBgColor: rsa-color(gray, light, $rsa-nearly-transparent);
$storylineSeverityRadius: 1rem;
$storylineLineHeight: 1.35;
$storylineHeadingSize: 1rem;
$storylineSeverityOffset: -1 * $storylineSeverityRadius + $storylineHeadingSize * $storylineLineHeight / 2;

.rsa-storyline {

  &-item {
    line-height: 1.35;

    h3 {
      font-size: $storylineHeadingSize;
      /*
      line-height: 2rem;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      */
    }

    p {
      @include rsa-font(navigation,small);
    }

    .enrichment {
      @include rsa-font(body,small);
      position: relative;
      padding-left: 1.25rem;

      &::before {
        content: '\2022'; /* filled bullet */
        position: absolute;
        top: 0;
        left: 0.25rem;
      }
    }

    .related {
      label {
        padding-right: rsa-whitespace(least);
      }
      span {
        .entity:not(:last-of-type) {
          /* Adds comma and padding after each entity name except last */
          padding-right: rsa-whitespace(less);
          &::after {
            content: ',';
          }
        }
      }
    }

    .connector {
      position: relative;
      padding: 0 rsa-whitespace();
      width: 4rem;

      .line {
        /* Renders a vertical line, horizontally aligned with center of score. */
        position: absolute;
        z-index: 1;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        margin: 0 auto;
        width: 1px;
      }

      .severity {
        /* Overlays severity on top of vertical line element. */
        position: absolute;
        z-index: 2;
        top: $storylineSeverityOffset;
        left: 0;
        right: 0;
        margin: 0 auto;

        $storylineSeverityRadius: 1rem;

        /* Renders a circle with centered text inside. */
        width: $storylineSeverityRadius * 2;
        height: $storylineSeverityRadius * 2;
        border-radius: $storylineSeverityRadius * 2;
        @include rsa-font(body,small);
        line-height: $storylineSeverityRadius * 2;
        text-align: center;
        white-space: nowrap;
      }
    }

    .header {
      .line {
        bottom: -1 * $storylineSeverityOffset;
      }
      .content {
        padding: rsa-whitespace() rsa-whitespace() 0 0;
      }
    }

    .main {
      .line {
        top: $storylineSeverityRadius * 2 + $storylineSeverityOffset;
      }
      .content {
        padding: 0 rsa-whitespace() rsa-whitespace() 0;
        border-width: 0 0 1px 0;
        border-style: solid;
        border-color: transparent;
      }
    }

    &:first-of-type {
      .header .line {
        display: none;
      }
    }

    &:last-of-type {
      .main .line {
        display: none;
      }
    }
  }
}



/* dark theme colors */

.rsa-storyline {
  &-item {

    .line {
      background-color: $darkStorylineBgColor;
    }

    .main .content {
      border-color: rsa-color(black, base, $rsa-nearly-transparent);
    }

    p {
      color: rsa-color(gray, light);
    }

    a {
      color: rsa-color(blue, light);
    }

    .severity {
      background-color: $darkStorylineBgColor;
    }

    .enrichment {
      color: rsa-color(gray, light);

      &::before {
        color: $darkStorylineBgColor;
      }
    }

    .related {
      span {
        color: rsa-color(amber);
      }
    }
  }
}
