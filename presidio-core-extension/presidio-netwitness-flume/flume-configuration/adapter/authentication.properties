# Flume agent for the adapter component
# The source reads data from Netwitness SDK within a given time range
# Date format: yyyy-mm-ddTHH:mm:ss 2015-01-01T00:00:01Z
# Channel stores in file up to 10K records
# The sinks writes the records using the input SDK
###################################### AGENT #####################################################
nwAuthenticationAgent.sources=sdkSource
nwAuthenticationAgent.channels=memoryChannel
nwAuthenticationAgent.sinks=inputSdkSink
###################################### SOURCE #####################################################

nwAuthenticationAgent.sources.sdkSource.channels=memoryChannel
nwAuthenticationAgent.sources.sdkSource.streamImplClassName=presidio.nw.flume.sdk.NetwitnessEventsStream
nwAuthenticationAgent.sources.sdkSource.type=org.flume.source.sdk.PresidioStreamingSDKSource
nwAuthenticationAgent.sources.sdkSource.schema=AUTHENTICATION
nwAuthenticationAgent.sources.sdkSource.startDate=$startDate
nwAuthenticationAgent.sources.sdkSource.endDate=$endDate
nwAuthenticationAgent.sources.sdkSource.query=select event.time,sessionid,alias.host,reference.id,host.src,user.dst,event.type,result.code,event.source.id where (device.type = 'winevent_snare','winevent_nic') && ((reference.id = '4624','4625' && logon.type = '2','10') || (reference.id='4769' && service.name != 'krbtgt') || (reference.id='4776'))  && (user.dst regex '^[^\\$]*$')
#nwAuthenticationAgent.sources.sdkSource.query=select event.time,sessionid,alias.host,reference.id,host.src,user.dst,event.type,result.code,event.source.id,service.name,logon.type,device.type where reference.id = '4624','4625','4769','4776'
nwAuthenticationAgent.sources.sdkSource.timeField=event.time
nwAuthenticationAgent.sources.sdkSource.batchSize=1000
nwAuthenticationAgent.sources.sdkSource.isBatch=true
nwAuthenticationAgent.sources.sdkSource.applicationName=adapter

########## INTERCEPTORS ORDER ########
#nwAuthenticationAgent.sources.sdkSource.interceptors = eventFilterByDeviceTypeAndUserDst eventFilterByServiceName eventFilterByLogonType epochInterceptor aliasHostArrayToHost eventReferenceIdToHost jsonRegexCaptureAndFormatInterceptorsrcMachineId jsonRegexCaptureAndFormatInterceptorUserId eventTypeToResult eventResultCodeToResult fieldRenameInterceptor fieldCopyInterceptor
nwAuthenticationAgent.sources.sdkSource.interceptors = epochInterceptor aliasHostArrayToHost eventReferenceIdToHost jsonRegexCaptureAndFormatInterceptorsrcMachineId jsonRegexCaptureAndFormatInterceptorUserId eventTypeToResult eventResultCodeToResult fieldRenameInterceptor fieldCopyInterceptor

### Filtering events according to the device type and user name ###
nwAuthenticationAgent.sources.sdkSource.interceptors.eventFilterByDeviceTypeAndUserDst.type=org.apache.flume.interceptor.presidio.JsonEventFilterByFieldValueInterceptor$Builder
nwAuthenticationAgent.sources.sdkSource.interceptors.eventFilterByDeviceTypeAndUserDst.fields=device_type,user_dst
nwAuthenticationAgent.sources.sdkSource.interceptors.eventFilterByDeviceTypeAndUserDst.regexList=winevent_snare|winevent_nic,[^\\$]*
nwAuthenticationAgent.sources.sdkSource.interceptors.eventFilterByDeviceTypeAndUserDst.operation=AND
nwAuthenticationAgent.sources.sdkSource.interceptors.eventFilterByDeviceTypeAndUserDst.filter_out=false

### for 4769: Filtering out events with service name equals to 'krbtgt' ###
nwAuthenticationAgent.sources.sdkSource.interceptors.eventFilterByServiceName.type=org.apache.flume.interceptor.presidio.JsonEventFilterByFieldValueInterceptor$Builder
nwAuthenticationAgent.sources.sdkSource.interceptors.eventFilterByServiceName.condition_field=reference_id
nwAuthenticationAgent.sources.sdkSource.interceptors.eventFilterByServiceName.regex_condition=4769
nwAuthenticationAgent.sources.sdkSource.interceptors.eventFilterByServiceName.fields=service_name
nwAuthenticationAgent.sources.sdkSource.interceptors.eventFilterByServiceName.regexList=krbtgt
nwAuthenticationAgent.sources.sdkSource.interceptors.eventFilterByServiceName.operation=OR

### for 4624 and 4625: Filtering in events with logon type equals to 2 or 10 ###
nwAuthenticationAgent.sources.sdkSource.interceptors.eventFilterByLogonType.type=org.apache.flume.interceptor.presidio.JsonEventFilterByFieldValueInterceptor$Builder
nwAuthenticationAgent.sources.sdkSource.interceptors.eventFilterByLogonType.condition_field=reference_id
nwAuthenticationAgent.sources.sdkSource.interceptors.eventFilterByLogonType.regex_condition=4624|4625
nwAuthenticationAgent.sources.sdkSource.interceptors.eventFilterByLogonType.fields=logon_type
nwAuthenticationAgent.sources.sdkSource.interceptors.eventFilterByLogonType.regexList=2|10
nwAuthenticationAgent.sources.sdkSource.interceptors.eventFilterByLogonType.operation=OR
nwAuthenticationAgent.sources.sdkSource.interceptors.eventFilterByLogonType.filter_out=false

### Convert time field from EPOCH millis to EPOCH seconds
nwAuthenticationAgent.sources.sdkSource.interceptors.epochInterceptor.type=org.apache.flume.interceptor.presidio.JsonEpochInterceptor$Builder
nwAuthenticationAgent.sources.sdkSource.interceptors.epochInterceptor.originField=event_time
nwAuthenticationAgent.sources.sdkSource.interceptors.epochInterceptor.originFormat=MILLIS
nwAuthenticationAgent.sources.sdkSource.interceptors.epochInterceptor.destinationField=event_time

### Taking the first value of the alias_host array and put it in new field called host ###
nwAuthenticationAgent.sources.sdkSource.interceptors.aliasHostArrayToHost.type = org.apache.flume.interceptor.presidio.JsonArrayToElementInterceptor$Builder
nwAuthenticationAgent.sources.sdkSource.interceptors.aliasHostArrayToHost.originField=alias_host
nwAuthenticationAgent.sources.sdkSource.interceptors.aliasHostArrayToHost.destinationField=host
nwAuthenticationAgent.sources.sdkSource.interceptors.aliasHostArrayToHost.index=0

### Filling the srcMachineId. The value is taken from different fields depends on the reference_id value ###
nwAuthenticationAgent.sources.sdkSource.interceptors.eventReferenceIdToHost.type=org.apache.flume.interceptor.presidio.JsonFieldSwitchCaseInterceptor$Builder
nwAuthenticationAgent.sources.sdkSource.interceptors.eventReferenceIdToHost.origin_field=reference_id
nwAuthenticationAgent.sources.sdkSource.interceptors.eventReferenceIdToHost.destination_field=srcMachineId
nwAuthenticationAgent.sources.sdkSource.interceptors.eventReferenceIdToHost.cases_delim=,
nwAuthenticationAgent.sources.sdkSource.interceptors.eventReferenceIdToHost.cases=4624,4625,4776
nwAuthenticationAgent.sources.sdkSource.interceptors.eventReferenceIdToHost.cases_values=${host};${host};${host_src}

### Normalize the srcMachineId values ###
nwAuthenticationAgent.sources.sdkSource.interceptors.jsonRegexCaptureAndFormatInterceptorsrcMachineId.type=org.apache.flume.interceptor.presidio.regexcaptureandformat.JsonRegexCaptureAndFormatInterceptor$Builder
nwAuthenticationAgent.sources.sdkSource.interceptors.jsonRegexCaptureAndFormatInterceptorsrcMachineId.configuration={"sourceKey":"srcMachineId","destinationKey":"srcMachineId","captureAndFormatConfigurations":[{"pattern":".*:.*","format":""},{"pattern":".*\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}.*","format":""},{"pattern":"(\\\\\\\\\\\\\\\\)?([^\\\\.]+)\\\\..+","format":"%s","capturingGroupConfigurations":[{"index":2,"caseFormat":"LOWER"}]},{"pattern":"(\\\\\\\\\\\\\\\\)?(.+)","format":"%s","capturingGroupConfigurations":[{"index":2,"caseFormat":"LOWER"}]}]}


### Normalize the userId values ###
nwAuthenticationAgent.sources.sdkSource.interceptors.jsonRegexCaptureAndFormatInterceptorUserId.type=org.apache.flume.interceptor.presidio.regexcaptureandformat.JsonRegexCaptureAndFormatInterceptor$Builder
nwAuthenticationAgent.sources.sdkSource.interceptors.jsonRegexCaptureAndFormatInterceptorUserId.configuration={"sourceKey":"user_dst","destinationKey":"userId","captureAndFormatConfigurations":[{"pattern":"CN=([^,]+)","format":"%s","capturingGroupConfigurations":[{"index":1,"caseFormat":"LOWER"}]},{"pattern":"CN=([^,]+),.+","format":"%s","capturingGroupConfigurations":[{"index":1,"caseFormat":"LOWER"}]},{"pattern":"(.+\\\\\\\\)+(.+)@.+","format":"%s","capturingGroupConfigurations":[{"index":2,"caseFormat":"LOWER"}]},{"pattern":"(.+\\\\\\\\)+([^@]+)","format":"%s","capturingGroupConfigurations":[{"index":2,"caseFormat":"LOWER"}]},{"pattern":"(.+)@.+","format":"%s","capturingGroupConfigurations":[{"index":1,"caseFormat":"LOWER"}]},{"pattern":".+","format":"%s","capturingGroupConfigurations":[{"index":0,"caseFormat":"LOWER"}]}]}

# Normalize the result values
nwAuthenticationAgent.sources.sdkSource.interceptors.eventTypeToResult.type=org.apache.flume.interceptor.presidio.regexcaptureandformat.JsonRegexCaptureAndFormatInterceptor$Builder
nwAuthenticationAgent.sources.sdkSource.interceptors.eventTypeToResult.configuration={"sourceKey":"event_type","destinationKey":"resultFromEventType","captureAndFormatConfigurations":[{"pattern":".*(?i:fail).*","format":"FAILURE"},{"pattern":".*(?i:succ).*","format":"SUCCESS"}]}

nwAuthenticationAgent.sources.sdkSource.interceptors.eventResultCodeToResult.type=org.apache.flume.interceptor.presidio.JsonFieldSwitchCaseInterceptor$Builder
nwAuthenticationAgent.sources.sdkSource.interceptors.eventResultCodeToResult.origin_field=result_code
nwAuthenticationAgent.sources.sdkSource.interceptors.eventResultCodeToResult.destination_field=resultFromResultCode
nwAuthenticationAgent.sources.sdkSource.interceptors.eventResultCodeToResult.cases_delim=,
nwAuthenticationAgent.sources.sdkSource.interceptors.eventResultCodeToResult.cases=0x0,0x.*
nwAuthenticationAgent.sources.sdkSource.interceptors.eventResultCodeToResult.cases_values=SUCCESS;FAILURE

### Renaming fields in order to fill eventId,dataSource,userName,userDisplayName,srcMachineName,operationType,dateTime ###
nwAuthenticationAgent.sources.sdkSource.interceptors.fieldRenameInterceptor.type = org.apache.flume.interceptor.presidio.JsonFieldRenamerInterceptor$Builder
nwAuthenticationAgent.sources.sdkSource.interceptors.fieldRenameInterceptor.originFieldsList=event_source_id,[resultFromEventType;resultFromResultCode],reference_id,user_dst,event_type,event_time
nwAuthenticationAgent.sources.sdkSource.interceptors.fieldRenameInterceptor.destinationFieldsList=eventId,result,dataSource,userName,operationType,dateTime

### Copy fields in order to fill srcMachineName and userDisplayName
nwAuthenticationAgent.sources.sdkSource.interceptors.fieldCopyInterceptor.type = org.apache.flume.interceptor.presidio.JsonFieldDuplicatorInterceptor$Builder
nwAuthenticationAgent.sources.sdkSource.interceptors.fieldCopyInterceptor.originFieldsList=srcMachineId,userName
nwAuthenticationAgent.sources.sdkSource.interceptors.fieldCopyInterceptor.destinationFieldsList=srcMachineName,userDisplayName

###################################### CHANNEL #####################################################
nwAuthenticationAgent.channels.memoryChannel.type=memory
nwAuthenticationAgent.channels.memoryChannel.capacity=100000
nwAuthenticationAgent.channels.memoryChannel.transactionCapacity=10000
###################################### SINK #####################################################
nwAuthenticationAgent.sinks.inputSdkSink.channel=memoryChannel
nwAuthenticationAgent.sinks.inputSdkSink.type=org.flume.sink.input.PresidioInputSdkSink
nwAuthenticationAgent.sinks.inputSdkSink.schema=AUTHENTICATION
nwAuthenticationAgent.sinks.inputSdkSink.recordType=presidio.sdk.api.domain.rawevents.AuthenticationRawEvent
nwAuthenticationAgent.sinks.inputSdkSink.isBatch=true
nwAuthenticationAgent.sinks.inputSdkSink.batchSize=1000
nwAuthenticationAgent.sinks.inputSdkSink.applicationName=adapter
