subprojects {

    apply plugin: "com.moowork.node"

    ext {
        bower = file("node_modules/bower/bin/bower")
        ember = file("node_modules/ember-cli/bin/ember")
    }

    idea {
        module {
            excludeDirs += file("node_modules")
            excludeDirs += file("bower_components")
            excludeDirs += file("dist")
            excludeDirs += file("tmp")
        }
    }

    node {
        version = "0.12.4"
        download = true
    }

    task emberClean(type: Delete) {
        delete "build", "node_modules", "bower_components", "dist", "tmp"
    }
    clean.dependsOn("emberClean")

    task bowerInstall(type: NodeTask, dependsOn: ["npmInstall"]) {
        script = bower
        args = ["install"]

        project.afterEvaluate {
            getInputs().file("${node.nodeModulesDir}/bower.json")
            getOutputs().dir("${node.nodeModulesDir}/bower_components")
        }
    }

    task test(type: NodeTask, dependsOn: ["bowerInstall"]) {
        script = ember
        args = ["test", "--silent"]

        def testDir = file("${buildDir}/test-results")
        if (!testDir.exists()) {
            testDir.mkdirs()
        }

        def dest = file("${testDir}/TEST-ember.xml")
        execOverrides {
            it.standardOutput = new FileOutputStream(dest)
        }
    }

    task emberProductionBuild(type: NodeTask, dependsOn: ["test"]) {
        script = ember
        args = ["build", "-e", "production", "-o", "dist/production", "--silent"]
    }

    task emberBuild(type: Zip, dependsOn: ["emberProductionBuild"]) {
        destinationDir file(project.buildDir)
        archiveName "sa-ui.zip"

        from("dist/production") {
            include "**/*"
        }
    }
}
