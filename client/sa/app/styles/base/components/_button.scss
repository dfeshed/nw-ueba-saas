button:not(#{$ignore-tag-name}),
input[type=submit]:not(#{$ignore-tag-name}) {
    padding: $base-padding;
}

/* Applies coloring and optional underline effect to buttons and links. */
@mixin rsa-btn(
    $bg: null,                  /* background (can include: color image position repeat) */
    $fg: null,                  /* text color */
    $border: null,              /* border (requires: width style color) */
    $disabled-bg: null,         /* disabled state background */
    $disabled-fg: null,         /* disabled state text color */
    $disabled-border: null,     /* disabled border */
    $hover-bg: null,            /* hover state background */
    $hover-fg: null,            /* hover state text color */
    $hover-border: null,        /* hover state border */
    $active-bg: null,            /* active state background */
    $active-fg: null,            /* active state text color */
    $active-border: null,        /* active state border */
    $selected-bg: null,         /* selected state background */
    $selected-fg: null,         /* selected state text color */
    $selected-border: null,     /* selected state border */
    $include-underline-effect: false,    /* if true, places a rectangle under the button text when selected */
    $is-dropdown: false) {             /* if true, places a down arrow to the right of the button text */

    /* Default state styling. */
    background: $bg;
    color: $fg;
    border: $border;
    outline: 0;
    @if $is-dropdown {

        /* Renders down arrow. */
        &:after {
            border: 5px solid transparent;
            border-top-color: $fg;
            content: "";
            display: inline-block;
            height: 0;
            margin: 0 0 -4px 9px;
            width: 0;
        }
    }

    /* Disabled state styling. */
    &[disabled] {
        cursor: default;
        background: $disabled-bg;
        color: $disabled-fg;
        border: $disabled-border;
    }

    /* Enabled state styling. */
    &:not([disabled]) {
        cursor: pointer;

        /* Hover state (mouseover) and focus state (user has tabbed cursor onto element). */
        &:hover,
        &:focus {
            background: $hover-bg;
            color: $hover-fg;
            border: $hover-border;
            @if $is-dropdown {
                &:after {
                    border-top-color: $hover-fg;
                }
            }
        }

        /* Active state (user is pushing down on the button, via click or space bar). */
        &:active {
            background: $active-bg;
            color: $active-fg;
            border: $active-border;
            @if $is-dropdown {
                &:after {
                    border-top-color: $active-fg;
                }
            }
        }
    }

    /*
      Selected state styling. Note that:
      (1) By convention, a button is considered to be selected when its HTML attribute "selected" = "true".
      (2) Some buttons can be in selected state even when disabled.  That's supported.
      (3) Ember applies the misnomer class name ".active" to selected links; that means something different than the
      native HTML selector ":active".  Don't confuse the two!
      (4) Drop JS applies the class name "drop-enabled" to a dropdown button when its popover is open. We consider
      that a "selected" state too, and apply the same selected style to that button while it's in that state.
      @workaround Use !important because SASS won't mix these selectors with :hover/:focus/:active correctly!
    */
    &[selected=true],
    &.active,
    &.drop-enabled {
        background: $selected-bg !important;
        color: $selected-fg !important;
        border: $selected-border !important;
        @if $is-dropdown {
            &:after {
                border-top-color: $selected-fg !important;
            }
        }
    }
    @if $include-underline-effect {
        /*
        To underline only the link text, without underlining the padding around the text,
        replace horizontal padding with horizontal margins.
        */
        display: inline-block;
        margin-left: $base-padding-x;
        margin-right: $base-padding-x;
        padding-left: 0;
        padding-right: 0;
        position: relative;
        &[selected=true],
        &.active,
        &.drop-enabled {
            &:after {
                content: '';
                position: absolute;
                left: 0;
                right: 0;
                bottom: 0;
                height: 5px;
                background-color: $selected-fg;
            }
        }
    }
}
