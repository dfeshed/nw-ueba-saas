.process-tree {
  cursor: move; /* fallback if grab cursor is unsupported */
  cursor: grab;
  cursor: -moz-grab;
  cursor: -webkit-grab;
  height: 100%;
  #force-layout__grid {
    .grid-axis {
      &.major {
        stroke: text-color(primary, dark);
        stroke-width: 1pt;
      }
      &.minor {
        stroke: text-color(primary, darker);
        stroke-width: 0.5pt;
      }
    }
  }

  &.is-panning {
    cursor: grabbing;
    cursor: -moz-grabbing;
    cursor: -webkit-grabbing;
  }


  &[data-zoom="0.0"],
  &[data-zoom="0.1"],
  &[data-zoom="0.2"] {
    .text {
      font-size: 0;
    }
    .line {
      stroke-width: 2pt;
    }
    #force-layout__grid {
      .grid-axis {
        &.minor {
          display: none;
        }
      }
    }
  }

  &[data-zoom="0.3"],
  &[data-zoom="0.4"],
  &[data-zoom="0.5"] {
    .rsa-force-layout-node .text {
      font-size: 120%;
    }
    .rsa-force-layout-link .text {
      font-size: 0;
    }
    .line {
      stroke-width: 1.5pt;
    }
    #force-layout__grid {
      .grid-axis {
        &.minor {
          display: none;
        }
      }
    }
  }


  circle {
    fill: transparent;
    stroke: rgba(155,155,155,.8);
    stroke-width: 1.5px;
    &.selected {
      fill: background-color(neutral, base);
    }
  }

  .process-icon {
    pointer-events: none;
    fill: text-color(primary);

    &.selected {
      fill: text-color(primary, dark);
    }
  }
  .process {
    cursor: pointer;
  }

  .link {
    fill: none;
    stroke: rgba(155,155,155,.8);
    stroke-width: 1.5px;
  }

  .text-icon, .process-icon, .child-count, .process-name {
    fill: text-color(neutral);
  }
}

.rsa-fast-force__wait {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}


